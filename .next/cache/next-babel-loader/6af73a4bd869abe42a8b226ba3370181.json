{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport 'react-dropdown/style.css';\nimport { Card, Tabs, Checkbox, Form, ChoiceList, Button, Heading, EmptyState, Layout, Page, AppProvider, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, CircleInformationMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport Dropdown from 'react-dropdown';\n\nfunction AttMarketing(props) {\n  const {\n    0: selectedTab,\n    1: setSelectedTab\n  } = useState(0);\n  const handleTabChange = useCallback(selectedTabIndex => setSelectedTab(selectedTabIndex), []);\n  const tabs = [{\n    id: 'FormMail',\n    content: 'Properties',\n    accessibilityLabel: 'All customers',\n    panelID: 'all-customers-content'\n  }];\n  const {\n    0: textFieldValue,\n    1: setTextFieldValue\n  } = useState('');\n  const handleTextFieldChange = useCallback(value => setTextFieldValue(value), []);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(['hidden']);\n  const handleChange = useCallback(value => setSelected(value), []);\n  const handleChangeNo = useCallback(newValueNo => setValueNo(newValueNo), []);\n  const {\n    0: valueNo,\n    1: setValueNo\n  } = useState('1');\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const handleChangeSingle = useCallback(newChecked => setChecked(newChecked), []);\n  {\n    /*navbar */\n  }\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \" Attribute Accept Marketing Email\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/AttributesTemplates\"\n  }, \"Attribute Templates\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selectedTab,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, null, __jsx(Form, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Properties\"\n  }, __jsx(\"hr\", null), __jsx(TextField, {\n    label: \"Label*:\",\n    value: textFieldValue,\n    onChange: handleTextFieldChange,\n    placeholder: \"Accept Marketing Email\"\n  }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Code:\",\n    placeholder: \"accept-marketing-email-1\",\n    disabled: true\n  }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  <= 30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Sorting Orders\",\n    type: \"number\",\n    value: valueNo,\n    onChange: handleChangeNo\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n    placeholder: \"Yes/No\",\n    disabled: true\n  }), __jsx(\"br\", null), __jsx(Checkbox, {\n    label: \"Default value\",\n    checked: checked,\n    onChange: handleChangeSingle\n  }), __jsx(\"p\", null, \"The default value for this attribute when it is shown to your customers\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }],\n    selected: selected,\n    onChange: handleChange\n  })))))), __jsx(\"br\", null)));\n}\n\nexport default AttMarketing;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeMarketingEmail.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","Tabs","Checkbox","Form","ChoiceList","Button","Heading","EmptyState","Layout","Page","AppProvider","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","CircleInformationMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Dropdown","AttMarketing","props","selectedTab","setSelectedTab","handleTabChange","selectedTabIndex","tabs","id","content","accessibilityLabel","panelID","textFieldValue","setTextFieldValue","handleTextFieldChange","value","selected","setSelected","handleChange","handleChangeNo","newValueNo","setValueNo","valueNo","checked","setChecked","handleChangeSingle","newChecked","label","helpText"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport 'react-dropdown/style.css';\r\nimport {Card,Tabs, Checkbox,Form, ChoiceList, Button, Heading,EmptyState, Layout,Page, AppProvider,Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone,CircleInformationMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport Dropdown from 'react-dropdown';\r\n\r\nfunction AttMarketing  (props) {\r\n  \r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (selectedTabIndex) => setSelectedTab(selectedTabIndex),\r\n    [],\r\n  );\r\n  \r\n  const tabs = [\r\n    {\r\n      id: 'FormMail',\r\n      content: 'Properties',\r\n      accessibilityLabel: 'All customers',\r\n      panelID: 'all-customers-content',\r\n    },\r\n   \r\n  ];\r\n\r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => setTextFieldValue(value),\r\n    [],\r\n  );\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n  const handleChangeNo = useCallback((newValueNo) => setValueNo(newValueNo), []);\r\n  const [valueNo, setValueNo] = useState('1');\r\n  \r\n  const [checked, setChecked] = useState(false);\r\n  const handleChangeSingle = useCallback((newChecked) => setChecked(newChecked), []);\r\n  \r\n  {/*navbar */}\r\n\r\nreturn(\r\n<>    \r\n  <Card sectioned title=\" Attribute Accept Marketing Email\">\r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>\r\n           \r\n      <Link url='/AttributesTemplates' >\r\n        Attribute Templates\r\n      </Link>\r\n        <p>Attribute</p>\r\n    </Stack>            \r\n  </Card>\r\n        \r\n<Page>\r\n  <Card>\r\n    <Tabs tabs={tabs} selected={selectedTab} onSelect={handleTabChange}>\r\n      <Card.Section >\r\n        <Form>\r\n          <Card sectioned title=\"Attribute Properties\">\r\n          <hr/>\r\n\r\n            <TextField\r\n              label=\"Label*:\"\r\n              value={textFieldValue}\r\n             onChange={handleTextFieldChange}\r\n              placeholder=\"Accept Marketing Email\"/>\r\n            <p>Attribute label</p>\r\n            <br/>\r\n        \r\n            <TextField\r\n              label=\"Code:\"\r\n              placeholder=\"accept-marketing-email-1\"\r\n              disabled/>\r\n            <p>For internal use. Must be unique with \r\n              no spaces and length  &lt;= 30. Let \r\n              it empty for auto generation</p>\r\n            <br/>\r\n\r\n            <TextField\r\n              label=\"Sorting Orders\"\r\n              type=\"number\"\r\n              value={valueNo}\r\n              onChange={handleChangeNo}/>\r\n            <p>Attributes are sorted in ascending \r\n              order (eg: Attribute with sorting order \r\n              1 will be displayed on top of Attribute 2)</p>\r\n            <br/>\r\n          \r\n                <p>Type*:</p>\r\n                  <Dropdown placeholder=\"Yes/No\" disabled />\r\n                <br/>\r\n                      \r\n            <Checkbox\r\n                label=\"Default value\"\r\n                checked={checked}\r\n                onChange={handleChangeSingle}/>\r\n              <p>The default value for this attribute when \r\n                it is shown to your customers</p>\r\n              <br/>\r\n\r\n                <br/>\r\n                <Heading>Attribute Configuration</Heading>    \r\n                <br/>\r\n                <hr/>\r\n  \r\n            <ChoiceList\r\n                  allowMultiple\r\n                  choices={[\r\n                    {\r\n                      label: 'Show on Cart page:',\r\n                      value: 'shipping',\r\n                      helpText:\r\n                        'Tick if you want to use this attribute on cart page.',\r\n                    },\r\n                    {\r\n                      label: 'Show on Register page:',\r\n                      value: 'confirmation',\r\n                      helpText:\r\n                        'Tick if you want to use this attribute on register page.',\r\n                    },\r\n                  ]}\r\n                  selected={selected}\r\n                  onChange={handleChange}/>\r\n          </Card>\r\n        </Form>  \r\n      </Card.Section>\r\n    </Tabs>\r\n  </Card>\r\n  <br/>  \r\n</Page>  \r\n</>\r\n\r\n)\r\n}\r\n\r\nexport default AttMarketing"]},"metadata":{},"sourceType":"module"}