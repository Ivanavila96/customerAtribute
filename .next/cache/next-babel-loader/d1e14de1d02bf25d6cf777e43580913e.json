{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport 'react-dropdown/style.css';\nimport { Card, Checkbox, ChoiceList, Button, Heading, EmptyState, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport Dropdown from 'react-dropdown';\nimport AppProvider from './navbar.js';\nexport default function AttHow() {\n  _s();\n\n  var _useState = useState(['hidden']),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n\n  var _useState2 = useState(''),\n      textFieldValue = _useState2[0],\n      setTextFieldValue = _useState2[1];\n\n  var handleTextFieldChange = useCallback(function (value) {\n    return setTextFieldValue(value);\n  }, []);\n  var handleChangeWt = useCallback(function (newValueWt) {\n    return setValueWt(newValueWt);\n  }, []);\n\n  var _useState3 = useState('1'),\n      valueWt = _useState3[0],\n      setValueWt = _useState3[1];\n\n  var handleChangeHt = useCallback(function (newValueHt) {\n    return setValueHt(newValueHt);\n  }, []);\n\n  var _useState4 = useState('1'),\n      valueHt = _useState4[0],\n      setValueHt = _useState4[1];\n\n  var handleChangeNo = useCallback(function (newValueNo) {\n    return setValueNo(newValueNo);\n  }, []);\n\n  var _useState5 = useState('1'),\n      valueNo = _useState5[0],\n      setValueNo = _useState5[1];\n\n  var _useState6 = useState(true),\n      checked = _useState6[0],\n      setChecked = _useState6[1];\n\n  var handleChangeSingle = useCallback(function (newChecked) {\n    return setChecked(newChecked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute How did you find us?\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/AttributesTemplates\"\n  }, \"Attributes Templates\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(FormLayout, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Properties\"\n  }, __jsx(\"hr\", null), __jsx(TextField, {\n    label: \"Label*:\",\n    value: textFieldValue,\n    onChange: handleTextFieldChange,\n    placeholder: \"How did you fins us?\"\n  }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Code:\",\n    placeholder: \"how-find\",\n    disabled: true\n  }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Sorting Order:\",\n    type: \"number\",\n    value: valueNo,\n    onChange: handleChangeNo\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n    placeholder: \"Single Radio Select with Image\",\n    disabled: true\n  }), __jsx(\"br\", null), __jsx(Checkbox, {\n    label: \"Values Required\",\n    checked: checked,\n    onChange: handleChangeSingle,\n    disabled: true\n  }), __jsx(\"p\", null, \"Tick if this attribute is required to be filled by your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Image Width:\",\n    type: \"number\",\n    value: valueWt,\n    onChange: handleChangeWt\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Image Height:\",\n    type: \"number\",\n    value: valueHt,\n    onChange: handleChangeHt\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Hide if filled:',\n      value: 'confirmation',\n      helpText: 'Hide this attribute if it was filled before.'\n    }, {\n      label: 'Show on Order grid:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }, {\n      label: 'Show on Customer grid',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n    }],\n    selected: selected,\n    onChange: handleChange\n  })))));\n\n  var loadingPageMarkup = __jsx(SkeletonPage, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextContainer, null, __jsx(SkeletonDisplayText, {\n    size: \"small\"\n  }), __jsx(SkeletonBodyText, {\n    lines: 9\n  }))))));\n\n  var pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  var modalMarkup = __jsx(Modal, {\n    open: modalActive,\n    onClose: toggleModalActive,\n    title: \"Contact support\",\n    primaryAction: {\n      content: 'Send',\n      onAction: toggleModalActive\n    }\n  }, __jsx(Modal.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Subject\",\n    value: supportSubject,\n    onChange: handleSubjectChange\n  }), __jsx(TextField, {\n    label: \"Message\",\n    value: supportMessage,\n    onChange: handleMessageChange,\n    multiline: true\n  }))));\n\n  var theme = {\n    colors: {\n      topBar: {\n        background: '#fff'\n      }\n    },\n    logo: {\n      width: 124,\n      topBarSource: 'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999',\n      contextualSaveBarSource: 'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999',\n      accessibilityLabel: 'Jaded Pixel'\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(AppProvider, {\n    theme: theme,\n    i18n: {\n      Polaris: {\n        Avatar: {\n          label: 'Avatar',\n          labelWithInitials: 'Avatar with initials {initials}'\n        },\n        ContextualSaveBar: {\n          save: 'Save',\n          discard: 'Discard'\n        },\n        TextField: {\n          characterCount: '{count} characters'\n        },\n        TopBar: {\n          toggleMenuLabel: 'Toggle menu',\n          SearchField: {\n            clearButtonLabel: 'Clear',\n            search: 'Search'\n          }\n        },\n        Modal: {\n          iFrameTitle: 'body markup'\n        },\n        Frame: {\n          skipToContent: 'Skip to content',\n          Navigation: {\n            closeMobileNavigationLabel: 'Close navigation'\n          }\n        }\n      }\n    }\n  }, __jsx(Frame, {\n    topBar: topBarMarkup,\n    navigation: navigationMarkup,\n    showMobileNavigation: mobileNavigationActive,\n    onNavigationDismiss: toggleMobileNavigationActive,\n    skipToContentTarget: skipToContentRef.current\n  }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n}\n\n_s(AttHow, \"uyG+KaSqdp3JDK9enY9IwG0OovI=\");\n\n_c = AttHow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttHow\");","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeHow.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","Checkbox","ChoiceList","Button","Heading","EmptyState","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Dropdown","AppProvider","AttHow","selected","setSelected","handleChange","value","textFieldValue","setTextFieldValue","handleTextFieldChange","handleChangeWt","newValueWt","setValueWt","valueWt","handleChangeHt","newValueHt","setValueHt","valueHt","handleChangeNo","newValueNo","setValueNo","valueNo","checked","setChecked","handleChangeSingle","newChecked","label","helpText","loadingPageMarkup","pageMarkup","isLoading","actualPageMarkup","modalMarkup","modalActive","toggleModalActive","content","onAction","supportSubject","handleSubjectChange","supportMessage","handleMessageChange","theme","colors","topBar","background","logo","width","topBarSource","contextualSaveBarSource","accessibilityLabel","height","Polaris","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel","topBarMarkup","navigationMarkup","mobileNavigationActive","toggleMobileNavigationActive","skipToContentRef","current","contextualSaveBarMarkup","loadingMarkup","toastMarkup"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport 'react-dropdown/style.css';\r\nimport {Card, Checkbox, ChoiceList, Button, Heading,EmptyState, Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport Dropdown from 'react-dropdown';\r\nimport AppProvider from './navbar.js';\r\n\r\n\r\nexport default function AttHow(){\r\n\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n \r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => setTextFieldValue(value),\r\n    [],\r\n  );\r\n\r\n  const handleChangeWt = useCallback((newValueWt) => setValueWt(newValueWt), []);\r\n  const [valueWt, setValueWt] = useState('1');\r\n\r\n  const handleChangeHt = useCallback((newValueHt) => setValueHt(newValueHt), []);\r\n  const [valueHt, setValueHt] = useState('1');\r\n\r\n  const handleChangeNo = useCallback((newValueNo) => setValueNo(newValueNo), []);\r\n  const [valueNo, setValueNo] = useState('1');\r\n\r\n  const [checked, setChecked] = useState(true);\r\n  const handleChangeSingle = useCallback((newChecked) => setChecked(newChecked), []);\r\n  \r\n  return (\r\n  \r\n  \r\n    <>\r\n \r\n\r\n  <Card sectioned title=\"Attribute How did you find us?\">\r\n  <Stack distribution=\"leading\">\r\n  <Link url='/Index' >\r\n  Home\r\n  </Link>\r\n           \r\n  <Link url='/AttributesTemplates' >\r\n  Attributes Templates\r\n</Link>\r\n\r\n<p>\r\n  Attribute\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n        <Page>\r\n  \r\n  \r\n       \r\n  \r\n  \r\n  <FormLayout>\r\n      <Card sectioned title=\"Attribute Properties\">\r\n      <hr/>\r\n\r\n      <TextField\r\n        label=\"Label*:\"\r\n        value={textFieldValue}\r\n        onChange={handleTextFieldChange}\r\n        placeholder=\"How did you fins us?\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n  \r\n      <TextField\r\n        label=\"Code:\"\r\n        placeholder=\"how-find\"\r\n        disabled\r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  30. Let \r\n        it empty for auto generation</p>\r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Sorting Order:\"\r\n        type=\"number\"\r\n        value={valueNo}\r\n        onChange={handleChangeNo}\r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n        <Dropdown placeholder=\"Single Radio Select with Image\" disabled />\r\n        \r\n        <br/>\r\n      <Checkbox\r\n          label=\"Values Required\"\r\n          checked={checked}\r\n          onChange={handleChangeSingle}\r\n          disabled\r\n        />\r\n        <p>Tick if this attribute is required to be \r\n            filled by your customers</p>\r\n      \r\n            <br/>\r\n        <TextField\r\n        label=\"Image Width:\"\r\n        type=\"number\"\r\n        value={valueWt}\r\n        onChange={handleChangeWt}\r\n      />\r\n     \r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Image Height:\"\r\n        type=\"number\"\r\n        value={valueHt}\r\n        onChange={handleChangeHt}\r\n      />\r\n      \r\n      <br/>\r\n      \r\n          \r\n       \r\n    \r\n  \r\n      <br/>\r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n\r\n\r\n  \r\n      </FormLayout>\r\n  \r\n  </Page>\r\n  \r\n  </>\r\n  );\r\n\r\n  const loadingPageMarkup = (\r\n    <SkeletonPage>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card sectioned>\r\n            <TextContainer>\r\n              <SkeletonDisplayText size=\"small\" />\r\n              <SkeletonBodyText lines={9} />\r\n            </TextContainer>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </SkeletonPage>\r\n  );\r\n\r\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\r\n\r\n  const modalMarkup = (\r\n    <Modal\r\n      open={modalActive}\r\n      onClose={toggleModalActive}\r\n      title=\"Contact support\"\r\n      primaryAction={{\r\n        content: 'Send',\r\n        onAction: toggleModalActive,\r\n      }}\r\n    >\r\n      <Modal.Section>\r\n        <FormLayout>\r\n          <TextField\r\n            label=\"Subject\"\r\n            value={supportSubject}\r\n            onChange={handleSubjectChange}\r\n          />\r\n          <TextField\r\n            label=\"Message\"\r\n            value={supportMessage}\r\n            onChange={handleMessageChange}\r\n            multiline\r\n          />\r\n        </FormLayout>\r\n      </Modal.Section>\r\n    </Modal>\r\n  );\r\n\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n      },\r\n    },\r\n    logo: {\r\n      width: 124,\r\n      topBarSource:\r\n        'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999',\r\n      contextualSaveBarSource:\r\n        'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999',\r\n      \r\n      accessibilityLabel: 'Jaded Pixel',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '500px'}}>\r\n      <AppProvider\r\n        theme={theme}\r\n        i18n={{\r\n          Polaris: {\r\n            Avatar: {\r\n              label: 'Avatar',\r\n              labelWithInitials: 'Avatar with initials {initials}',\r\n            },\r\n            ContextualSaveBar: {\r\n              save: 'Save',\r\n              discard: 'Discard',\r\n            },\r\n            TextField: {\r\n              characterCount: '{count} characters',\r\n            },\r\n            TopBar: {\r\n              toggleMenuLabel: 'Toggle menu',\r\n\r\n              SearchField: {\r\n                clearButtonLabel: 'Clear',\r\n                search: 'Search',\r\n              },\r\n            },\r\n            Modal: {\r\n              iFrameTitle: 'body markup',\r\n            },\r\n            Frame: {\r\n              skipToContent: 'Skip to content',\r\n              Navigation: {\r\n                closeMobileNavigationLabel: 'Close navigation',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Frame\r\n          topBar={topBarMarkup}\r\n          navigation={navigationMarkup}\r\n          showMobileNavigation={mobileNavigationActive}\r\n          onNavigationDismiss={toggleMobileNavigationActive}\r\n          skipToContentTarget={skipToContentRef.current}\r\n        >\r\n          {contextualSaveBarMarkup}\r\n          {loadingMarkup}\r\n          {pageMarkup}\r\n          {toastMarkup}\r\n          {modalMarkup}\r\n        </Frame>\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}