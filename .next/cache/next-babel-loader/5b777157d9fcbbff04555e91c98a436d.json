{"ast":null,"code":"var __jsx = React.createElement;\nimport 'react-dropdown/style.css';\nimport React, { useCallback, useState, useRef } from \"react\";\nimport { Card, DataTable, Link, Layout, Page, Stack, ActionList, AppProvider, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Heading } from \"@shopify/polaris\";\nimport { NoteMajorMonotone, HomeMajorMonotone, MobileHamburgerMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport { Redirect } from '@shopify/app-bridge/actions';\nconst rows = [['accept-marketing-email-1', 'Accept Marketing Email', 'Yes/No', NoteMajorMonotone]];\nexport default function FrameExample() {\n  const defaultState = useRef({});\n  const skipToContentRef = useRef(null);\n  const {\n    0: toastActive,\n    1: setToastActive\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isDirty,\n    1: setIsDirty\n  } = useState(false);\n  const {\n    0: searchActive,\n    1: setSearchActive\n  } = useState(false);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n  const {\n    0: userMenuActive,\n    1: setUserMenuActive\n  } = useState(false);\n  const {\n    0: mobileNavigationActive,\n    1: setMobileNavigationActive\n  } = useState(false);\n  const {\n    0: modalActive,\n    1: setModalActive\n  } = useState(false);\n  const {\n    0: nameFieldValue,\n    1: setNameFieldValue\n  } = useState(defaultState.current.nameFieldValue);\n  const {\n    0: emailFieldValue,\n    1: setEmailFieldValue\n  } = useState(defaultState.current.emailFieldValue);\n  const {\n    0: storeName,\n    1: setStoreName\n  } = useState(defaultState.current.nameFieldValue);\n  const {\n    0: supportSubject,\n    1: setSupportSubject\n  } = useState('');\n  const {\n    0: supportMessage,\n    1: setSupportMessage\n  } = useState('');\n  const handleSubjectChange = useCallback(value => setSupportSubject(value), []);\n  const handleMessageChange = useCallback(value => setSupportMessage(value), []);\n  const handleDiscard = useCallback(() => {\n    setEmailFieldValue(defaultState.current.emailFieldValue);\n    setNameFieldValue(defaultState.current.nameFieldValue);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    defaultState.current.nameFieldValue = nameFieldValue;\n    defaultState.current.emailFieldValue = emailFieldValue;\n    setIsDirty(false);\n    setToastActive(true);\n    setStoreName(defaultState.current.nameFieldValue);\n  }, [emailFieldValue, nameFieldValue]);\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue('');\n  }, []);\n  const handleSearchFieldChange = useCallback(value => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n  const toggleToastActive = useCallback(() => setToastActive(toastActive => !toastActive), []);\n  const toggleUserMenuActive = useCallback(() => setUserMenuActive(userMenuActive => !userMenuActive), []);\n  const toggleMobileNavigationActive = useCallback(() => setMobileNavigationActive(mobileNavigationActive => !mobileNavigationActive), []);\n  const toggleIsLoading = useCallback(() => setIsLoading(isLoading => !isLoading), []);\n  const toggleModalActive = useCallback(() => setModalActive(modalActive => !modalActive), []);\n  const toastMarkup = toastActive ? __jsx(Toast, {\n    onDismiss: toggleToastActive,\n    content: \"Changes saved\"\n  }) : null;\n  const userMenuActions = [{\n    items: [{\n      content: 'Community forums'\n    }]\n  }];\n  const contextualSaveBarMarkup = isDirty ? __jsx(ContextualSaveBar, {\n    message: \"Unsaved changes\",\n    saveAction: {\n      onAction: handleSave\n    },\n    discardAction: {\n      onAction: handleDiscard\n    }\n  }) : null;\n\n  const userMenuMarkup = __jsx(TopBar.UserMenu, {\n    actions: userMenuActions,\n    name: \"Dharma\",\n    detail: storeName,\n    initials: \"D\",\n    open: userMenuActive,\n    onToggle: toggleUserMenuActive\n  });\n\n  const searchResultsMarkup = __jsx(Card, null, __jsx(ActionList, {\n    items: [{\n      content: 'Shopify help center'\n    }, {\n      content: 'Community forums'\n    }]\n  }));\n\n  const searchFieldMarkup = __jsx(TopBar.SearchField, {\n    onChange: handleSearchFieldChange,\n    value: searchValue,\n    placeholder: \"Search\"\n  });\n\n  const topBarMarkup = __jsx(TopBar, {\n    showNavigationToggle: true,\n    userMenu: userMenuMarkup,\n    searchResultsVisible: searchActive,\n    searchField: searchFieldMarkup,\n    searchResults: searchResultsMarkup,\n    onSearchResultsDismiss: handleSearchResultsDismiss,\n    onNavigationToggle: toggleMobileNavigationActive\n  });\n\n  const navigationMarkup = __jsx(Navigation, {\n    location: \"/\"\n  }, __jsx(Navigation.Section, {\n    separator: true,\n    title: \"Dashboard\",\n    items: [{\n      label: 'Dashboard',\n      icon: HomeMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Attributes',\n      icon: MobileHamburgerMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Attribute Templates',\n      icon: BankMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Theme Installer',\n      icon: TroubleshootMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Settings',\n      icon: SettingsMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'User Guide',\n      icon: NoteMajorMonotone,\n      onClick: toggleIsLoading\n    }]\n  }));\n\n  const loadingMarkup = isLoading ? __jsx(Loading, null) : null;\n\n  const actualPageMarkup = __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Templates\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Redirect, {\n    to: \"/Index\"\n  }, \"Home\"), __jsx(\"p\", null, \"Customers\"))), __jsx(Page, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(FormLayout, null, __jsx(FormLayout.Group, {\n    condensed: true\n  }, __jsx(TextField, {\n    label: \"Created Date\",\n    onChange: () => {}\n  }), __jsx(TextField, {\n    label: \"Email\",\n    onChange: () => {}\n  }), __jsx(TextField, {\n    label: \"Customer Name\",\n    onChange: () => {}\n  }), __jsx(TextField, {\n    label: \"Company\",\n    onChange: () => {}\n  })))), __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text', 'date', 'numeric', 'numeric', 'text', 'text'],\n    headings: ['Name', 'Email', 'Date', 'Orders Count', 'Total Spent', 'Action', 'Company'],\n    rows: rows\n  }))));\n\n  const loadingPageMarkup = __jsx(SkeletonPage, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextContainer, null, __jsx(SkeletonDisplayText, {\n    size: \"small\"\n  }), __jsx(SkeletonBodyText, {\n    lines: 9\n  }))))));\n\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  const modalMarkup = __jsx(Modal, {\n    open: modalActive,\n    onClose: toggleModalActive,\n    title: \"Contact support\",\n    primaryAction: {\n      content: 'Send',\n      onAction: toggleModalActive\n    }\n  }, __jsx(Modal.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Subject\",\n    value: supportSubject,\n    onChange: handleSubjectChange\n  }), __jsx(TextField, {\n    label: \"Message\",\n    value: supportMessage,\n    onChange: handleMessageChange,\n    multiline: true\n  }))));\n\n  const theme = {\n    colors: {\n      topBar: {\n        background: '#000'\n      }\n    },\n    logo: {\n      width: 124,\n      topBarSource: 'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999',\n      contextualSaveBarSource: 'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999',\n      accessibilityLabel: 'Jaded Pixel'\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(AppProvider, {\n    theme: theme,\n    i18n: {\n      Polaris: {\n        Avatar: {\n          label: 'Avatar',\n          labelWithInitials: 'Avatar with initials {initials}'\n        },\n        ContextualSaveBar: {\n          save: 'Save',\n          discard: 'Discard'\n        },\n        TextField: {\n          characterCount: '{count} characters'\n        },\n        TopBar: {\n          toggleMenuLabel: 'Toggle menu',\n          SearchField: {\n            clearButtonLabel: 'Clear',\n            search: 'Search'\n          }\n        },\n        Modal: {\n          iFrameTitle: 'body markup'\n        },\n        Frame: {\n          skipToContent: 'Skip to content',\n          Navigation: {\n            closeMobileNavigationLabel: 'Close navigation'\n          }\n        }\n      }\n    }\n  }, __jsx(Frame, {\n    topBar: topBarMarkup,\n    navigation: navigationMarkup,\n    showMobileNavigation: mobileNavigationActive,\n    onNavigationDismiss: toggleMobileNavigationActive,\n    skipToContentTarget: skipToContentRef.current\n  }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n}","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Customers.js"],"names":["React","useCallback","useState","useRef","Card","DataTable","Link","Layout","Page","Stack","ActionList","AppProvider","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Heading","NoteMajorMonotone","HomeMajorMonotone","MobileHamburgerMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Redirect","rows","FrameExample","defaultState","skipToContentRef","toastActive","setToastActive","isLoading","setIsLoading","isDirty","setIsDirty","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","modalActive","setModalActive","nameFieldValue","setNameFieldValue","current","emailFieldValue","setEmailFieldValue","storeName","setStoreName","supportSubject","setSupportSubject","supportMessage","setSupportMessage","handleSubjectChange","value","handleMessageChange","handleDiscard","handleSave","handleSearchResultsDismiss","handleSearchFieldChange","length","toggleToastActive","toggleUserMenuActive","toggleMobileNavigationActive","toggleIsLoading","toggleModalActive","toastMarkup","userMenuActions","items","content","contextualSaveBarMarkup","onAction","userMenuMarkup","searchResultsMarkup","searchFieldMarkup","topBarMarkup","navigationMarkup","label","icon","onClick","loadingMarkup","actualPageMarkup","loadingPageMarkup","pageMarkup","modalMarkup","theme","colors","topBar","background","logo","width","topBarSource","contextualSaveBarSource","accessibilityLabel","height","Polaris","Avatar","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel"],"mappings":"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","sourcesContent":["import 'react-dropdown/style.css';\r\nimport React, {useCallback, useState, useRef, } from \"react\";\r\nimport {Card, DataTable ,Link,Layout,Page, Stack, ActionList, AppProvider, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Heading} from \"@shopify/polaris\";\r\nimport {NoteMajorMonotone, HomeMajorMonotone, MobileHamburgerMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\n\r\n\r\n\r\n\r\nconst rows = [\r\n  ['accept-marketing-email-1', 'Accept Marketing Email', 'Yes/No', NoteMajorMonotone, ],\r\n];\r\n\r\n\r\nexport default function FrameExample() {\r\n  const defaultState = useRef({\r\n    \r\n  });\r\n  const skipToContentRef = useRef(null);\r\n\r\n  \r\n\r\n \r\n\r\n \r\n \r\n  const [toastActive, setToastActive] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [userMenuActive, setUserMenuActive] = useState(false);\r\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [nameFieldValue, setNameFieldValue] = useState(\r\n    defaultState.current.nameFieldValue,\r\n  );\r\n  const [emailFieldValue, setEmailFieldValue] = useState(\r\n    defaultState.current.emailFieldValue,\r\n  );\r\n  const [storeName, setStoreName] = useState(\r\n    defaultState.current.nameFieldValue,\r\n  );\r\n  const [supportSubject, setSupportSubject] = useState('');\r\n  const [supportMessage, setSupportMessage] = useState('');\r\n\r\n  const handleSubjectChange = useCallback(\r\n    (value) => setSupportSubject(value),\r\n    [],\r\n  );\r\n  const handleMessageChange = useCallback(\r\n    (value) => setSupportMessage(value),\r\n    [],\r\n  );\r\n  const handleDiscard = useCallback(() => {\r\n    setEmailFieldValue(defaultState.current.emailFieldValue);\r\n    setNameFieldValue(defaultState.current.nameFieldValue);\r\n    setIsDirty(false);\r\n  }, []);\r\n  const handleSave = useCallback(() => {\r\n    defaultState.current.nameFieldValue = nameFieldValue;\r\n    defaultState.current.emailFieldValue = emailFieldValue;\r\n\r\n    setIsDirty(false);\r\n    setToastActive(true);\r\n    setStoreName(defaultState.current.nameFieldValue);\r\n  }, [emailFieldValue, nameFieldValue]);\r\n  const handleSearchResultsDismiss = useCallback(() => {\r\n    setSearchActive(false);\r\n    setSearchValue('');\r\n  }, []);\r\n  const handleSearchFieldChange = useCallback((value) => {\r\n    setSearchValue(value);\r\n    setSearchActive(value.length > 0);\r\n  }, []);\r\n  const toggleToastActive = useCallback(\r\n    () => setToastActive((toastActive) => !toastActive),\r\n    [],\r\n  );\r\n  const toggleUserMenuActive = useCallback(\r\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\r\n    [],\r\n  );\r\n  const toggleMobileNavigationActive = useCallback(\r\n    () =>\r\n      setMobileNavigationActive(\r\n        (mobileNavigationActive) => !mobileNavigationActive,\r\n      ),\r\n    [],\r\n  );\r\n  const toggleIsLoading = useCallback(\r\n    () => setIsLoading((isLoading) => !isLoading),\r\n    [],\r\n  );\r\n  const toggleModalActive = useCallback(\r\n    () => setModalActive((modalActive) => !modalActive),\r\n    [],\r\n  );\r\n\r\n  const toastMarkup = toastActive ? (\r\n    <Toast onDismiss={toggleToastActive} content=\"Changes saved\" />\r\n  ) : null;\r\n\r\n  const userMenuActions = [\r\n    {\r\n      items: [{content: 'Community forums'}],\r\n    },\r\n  ];\r\n  \r\n\r\n  const contextualSaveBarMarkup = isDirty ? (\r\n    <ContextualSaveBar\r\n      message=\"Unsaved changes\"\r\n      saveAction={{\r\n        onAction: handleSave,\r\n      }}\r\n      discardAction={{\r\n        onAction: handleDiscard,\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const userMenuMarkup = (\r\n    <TopBar.UserMenu\r\n      actions={userMenuActions}\r\n      name=\"Dharma\"\r\n      detail={storeName}\r\n      initials=\"D\"\r\n      open={userMenuActive}\r\n      onToggle={toggleUserMenuActive}\r\n    />\r\n  );\r\n\r\n  const searchResultsMarkup = (\r\n    <Card>\r\n      <ActionList\r\n        items={[\r\n          {content: 'Shopify help center'},\r\n          {content: 'Community forums'},\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n\r\n  const searchFieldMarkup = (\r\n    <TopBar.SearchField\r\n      onChange={handleSearchFieldChange}\r\n      value={searchValue}\r\n      placeholder=\"Search\"\r\n    />\r\n  );\r\n\r\n  const topBarMarkup = (\r\n    <TopBar\r\n      showNavigationToggle\r\n      userMenu={userMenuMarkup}\r\n      searchResultsVisible={searchActive}\r\n      searchField={searchFieldMarkup}\r\n      searchResults={searchResultsMarkup}\r\n      onSearchResultsDismiss={handleSearchResultsDismiss}\r\n      onNavigationToggle={toggleMobileNavigationActive}\r\n    />\r\n  );\r\n\r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n     \r\n      <Navigation.Section\r\n        separator\r\n        title=\"Dashboard\"\r\n        items={[\r\n          {\r\n            label: 'Dashboard',\r\n            icon: HomeMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Attributes',\r\n            icon: MobileHamburgerMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Attribute Templates',\r\n            icon: BankMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Theme Installer',\r\n            icon: TroubleshootMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Settings',\r\n            icon: SettingsMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'User Guide',\r\n            icon: NoteMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n        ]}\r\n       \r\n      />\r\n    </Navigation>\r\n  );\r\n\r\n  const loadingMarkup = isLoading ? <Loading /> : null;\r\n\r\n\r\n  const actualPageMarkup = (\r\n    <>\r\n      <Card sectioned title=\"Attribute Templates\">\r\n  <Stack distribution=\"leading\">\r\n  <Redirect to='/Index' >\r\n  Home\r\n  </Redirect>\r\n           \r\n<p>\r\n  Customers\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n<Page>\r\n      <Card sectioned>\r\n       <FormLayout>\r\n       <FormLayout.Group condensed>\r\n                <TextField label=\"Created Date\" onChange={() => {}} />\r\n                <TextField label=\"Email\" onChange={() => {}} />\r\n                <TextField label=\"Customer Name\" onChange={() => {}} />\r\n                <TextField label=\"Company\" onChange={() => {}} />\r\n        </FormLayout.Group>\r\n        </FormLayout>  \r\n      </Card>\r\n      <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n            'text',\r\n            'text',\r\n            'date',\r\n            'numeric',\r\n            'numeric',\r\n            'text',\r\n            'text',\r\n          ]}\r\n          headings={[\r\n            'Name',\r\n            'Email',\r\n            'Date',\r\n            'Orders Count',\r\n            'Total Spent',\r\n            'Action',\r\n            'Company',\r\n          ]}\r\n          rows={rows}\r\n        />\r\n      </Card>\r\n    </Page>\r\n    </>\r\n  );\r\n\r\n  const loadingPageMarkup = (\r\n    <SkeletonPage>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card sectioned>\r\n            <TextContainer>\r\n              <SkeletonDisplayText size=\"small\" />\r\n              <SkeletonBodyText lines={9} />\r\n            </TextContainer>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </SkeletonPage>\r\n  );\r\n\r\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\r\n\r\n  const modalMarkup = (\r\n    <Modal\r\n      open={modalActive}\r\n      onClose={toggleModalActive}\r\n      title=\"Contact support\"\r\n      primaryAction={{\r\n        content: 'Send',\r\n        onAction: toggleModalActive,\r\n      }}\r\n    >\r\n      <Modal.Section>\r\n        <FormLayout>\r\n          <TextField\r\n            label=\"Subject\"\r\n            value={supportSubject}\r\n            onChange={handleSubjectChange}\r\n          />\r\n          <TextField\r\n            label=\"Message\"\r\n            value={supportMessage}\r\n            onChange={handleMessageChange}\r\n            multiline\r\n          />\r\n        </FormLayout>\r\n      </Modal.Section>\r\n    </Modal>\r\n  );\r\n\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#000',\r\n      },\r\n    },\r\n    logo: {\r\n      width: 124,\r\n      topBarSource:\r\n        'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999',\r\n      contextualSaveBarSource:\r\n        'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999',\r\n      \r\n      accessibilityLabel: 'Jaded Pixel',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '500px'}}>\r\n      <AppProvider\r\n        theme={theme}\r\n        i18n={{\r\n          Polaris: {\r\n            Avatar: {\r\n              label: 'Avatar',\r\n              labelWithInitials: 'Avatar with initials {initials}',\r\n            },\r\n            ContextualSaveBar: {\r\n              save: 'Save',\r\n              discard: 'Discard',\r\n            },\r\n            TextField: {\r\n              characterCount: '{count} characters',\r\n            },\r\n            TopBar: {\r\n              toggleMenuLabel: 'Toggle menu',\r\n\r\n              SearchField: {\r\n                clearButtonLabel: 'Clear',\r\n                search: 'Search',\r\n              },\r\n            },\r\n            Modal: {\r\n              iFrameTitle: 'body markup',\r\n            },\r\n            Frame: {\r\n              skipToContent: 'Skip to content',\r\n              Navigation: {\r\n                closeMobileNavigationLabel: 'Close navigation',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Frame\r\n          topBar={topBarMarkup}\r\n          navigation={navigationMarkup}\r\n          showMobileNavigation={mobileNavigationActive}\r\n          onNavigationDismiss={toggleMobileNavigationActive}\r\n          skipToContentTarget={skipToContentRef.current}\r\n        >\r\n          {contextualSaveBarMarkup}\r\n          {loadingMarkup}\r\n          {pageMarkup}\r\n          {toastMarkup}\r\n          {modalMarkup}\r\n        </Frame>\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}