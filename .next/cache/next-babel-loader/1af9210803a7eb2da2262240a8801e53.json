{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from \"react\";\nimport { Card, Button, SettingToggle } from \"@shopify/polaris\";\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState(false),\n          _useState2 = _slicedToArray(_useState, 2),\n          active = _useState2[0],\n          setActive = _useState2[1];\n\n      var handleToggle = useCallback(function () {\n        return setActive(function (active) {\n          return !active;\n        });\n      }, []);\n      var contentStatus = active ? 'Disable' : 'Enable';\n      var textStatus = active ? 'enabled' : 'disabled';\n      return __jsx(React.Fragment, null, __jsx(Card, {\n        sectioned: true,\n        title: \"Dashboard\",\n        actions: [{\n          content: 'Add variant'\n        }]\n      }, __jsx(\"p\", null, \"Home\")), __jsx(SettingToggle, {\n        action: {\n          content: contentStatus,\n          onAction: handleToggle\n        },\n        enabled: active\n      }, \"This setting is \", __jsx(TextStyle, {\n        variation: \"strong\"\n      }, textStatus), \".\"), __jsx(Card, null, __jsx(Card.Section, {\n        title: \"Application Stats\"\n      }, __jsx(Card.Section, {\n        title: \"Total Customers\"\n      }, __jsx(\"p\", null, \"0\")), __jsx(Card.Section, {\n        title: \"Total Orders\"\n      }, __jsx(\"p\", null, \"0\")), __jsx(Card.Section, {\n        title: \"Total Attributes\"\n      }, __jsx(\"p\", null, \"0\")))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/index.js"],"names":["React","Fragment","Card","Button","SettingToggle","Index","useState","active","setActive","handleToggle","useCallback","contentStatus","textStatus","content","onAction","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,aAAtB,QAA0C,kBAA1C;;IAIOC,K;;;;;;;;;;;;;6BACI;AAAA,sBACqBC,QAAQ,CAAC,KAAD,CAD7B;AAAA;AAAA,UACAC,MADA;AAAA,UACQC,SADR;;AAGP,UAAMC,YAAY,GAAGC,WAAW,CAAC;AAAA,eAAMF,SAAS,CAAC,UAACD,MAAD;AAAA,iBAAY,CAACA,MAAb;AAAA,SAAD,CAAf;AAAA,OAAD,EAAuC,EAAvC,CAAhC;AAEA,UAAMI,aAAa,GAAGJ,MAAM,GAAG,SAAH,GAAe,QAA3C;AACA,UAAMK,UAAU,GAAGL,MAAM,GAAG,SAAH,GAAe,UAAxC;AACA,aACE,4BACA,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,KAAK,EAAC,WAAtB;AAAkC,QAAA,OAAO,EAAE,CAAC;AAACM,UAAAA,OAAO,EAAE;AAAV,SAAD;AAA3C,SACI,wBADJ,CADA,EAOA,MAAC,aAAD;AACA,QAAA,MAAM,EAAE;AACNA,UAAAA,OAAO,EAAEF,aADH;AAENG,UAAAA,QAAQ,EAAEL;AAFJ,SADR;AAKA,QAAA,OAAO,EAAEF;AALT,6BAOgB,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SAA+BK,UAA/B,CAPhB,MAPA,EAkBN,MAAC,IAAD,QACA,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAC;AAApB,SAEA,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAC;AAApB,SACE,qBADF,CAFA,EAOA,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAC;AAApB,SACE,qBADF,CAPA,EAWA,MAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAC;AAApB,SACE,qBADF,CAXA,CADA,CAlBM,CADF;AAyCD;;;;EAjDkBZ,KAAK,CAACe,S;;AAqD3B,eAAeV,KAAf","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport {Card, Button, SettingToggle} from \"@shopify/polaris\";\r\n\r\n\r\n\r\n class Index extends React.Component {\r\n  render() {\r\n    const [active, setActive] = useState(false);\r\n\r\n    const handleToggle = useCallback(() => setActive((active) => !active), []);\r\n  \r\n    const contentStatus = active ? 'Disable' : 'Enable';\r\n    const textStatus = active ? 'enabled' : 'disabled';\r\n    return (\r\n      <>\r\n      <Card sectioned title=\"Dashboard\" actions={[{content: 'Add variant'}]}>\r\n          <p>\r\n            Home\r\n          </p>\r\n      </Card>\r\n\r\n      <SettingToggle\r\n      action={{\r\n        content: contentStatus,\r\n        onAction: handleToggle,\r\n      }}\r\n      enabled={active}\r\n    >\r\n      This setting is <TextStyle variation=\"strong\">{textStatus}</TextStyle>.\r\n    </SettingToggle>\r\n\r\n\r\n<Card>\r\n<Card.Section title=\"Application Stats\">\r\n\r\n<Card.Section title=\"Total Customers\">\r\n  <p>0</p>\r\n  \r\n</Card.Section>\r\n\r\n<Card.Section title=\"Total Orders\">\r\n  <p>0</p>\r\n</Card.Section>\r\n\r\n<Card.Section title=\"Total Attributes\">\r\n  <p>0</p>\r\n</Card.Section>\r\n\r\n</Card.Section>\r\n</Card>\r\n\r\n</>\r\n\r\n    );  \r\n  }\r\n}\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}