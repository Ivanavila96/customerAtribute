{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport Dropdown from './Drop1';\nimport 'react-dropdown/style.css';\nimport { Card, ChoiceList, Button, Heading, EmptyState, Layout, Page, Stack, ActionList, AppProvider, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\n\nclass AttCreation extends React.Component {\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Card, {\n      sectioned: true,\n      title: \" Create attribute\"\n    }, __jsx(Stack, {\n      distribution: \"leading\"\n    }, __jsx(Link, {\n      url: \"/Index\"\n    }, \"Home\"), __jsx(Link, {\n      url: \"/componenteslist\"\n    }, \"Attributes\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(FormLayout, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(\"p\", null, \"Use Template:\"), __jsx(Stack, {\n      distribution: \"fillEvenly\"\n    }, __jsx(Dropdown, {\n      id: \"drop1\"\n    }), __jsx(\"p\", null, \"If you choose a template, the following attribute fields will be filled\", __jsx(\"br\", null), \"automatically. Or you can leave this\", __jsx(\"br\", null), \"box blank and create your unique field\", __jsx(\"br\", null), \"by filling in these boxes.\")), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Online store dashboard\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(TextField, {\n      label: \"Label*:\",\n      placeholder: \"Attribute Label\"\n    }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n      label: \"Code:\"\n    }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  30. Let it empty for auto generation\"), __jsx(TextField, {\n      label: \"Quantity\",\n      type: \"number\"\n    }), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n      id: \"drop2\"\n    }), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n      allowMultiple: true,\n      choices: [{\n        label: 'Show on Cart page:',\n        value: 'shipping',\n        helpText: 'Tick if you want to use this attribute on cart page.'\n      }, {\n        label: 'Hide if filled:',\n        value: 'confirmation',\n        helpText: 'Hide this attribute if it was filled before.'\n      }, {\n        label: 'Show on Order grid:',\n        value: 'shipping',\n        helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n      }, {\n        label: 'Show on Register page:',\n        value: 'confirmation',\n        helpText: 'Tick if you want to use this attribute on register page.'\n      }, {\n        label: 'Show on Customer grid',\n        value: 'confirmation',\n        helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n      }],\n      selected: selected,\n      onChange: handleChange\n    })))));\n  }\n\n}\n\nexport default AttCreation;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeCreation.js"],"names":["React","Fragment","useCallback","useState","useRef","Dropdown","Card","ChoiceList","Button","Heading","EmptyState","Layout","Page","Stack","ActionList","AppProvider","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","AttCreation","Component","render","label","value","helpText","selected","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAO,0BAAP;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA0CC,UAA1C,EAAsDC,MAAtD,EAA6DC,IAA7D,EAAmEC,KAAnE,EAA0EC,UAA1E,EAAsFC,WAAtF,EAAmGC,MAAnG,EAA2GC,iBAA3G,EAA8HC,UAA9H,EAAyIC,KAAzI,EAAgJC,OAAhJ,EAAwJC,KAAxJ,EAA+JC,UAA/J,EAA2KC,gBAA3K,EAA6LC,mBAA7L,EAAkNC,YAAlN,EAAgOC,aAAhO,EAA+OC,SAA/O,EAA0PC,KAA1P,EAAiQC,MAAjQ,EAAyQC,IAAzQ,QAAoR,kBAApR;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,EAA2CC,iBAA3C,EAA8DC,kBAA9D,EAAkFC,4BAAlF,EAAgHC,iBAAhH,EAAmIC,iBAAnI,EAAqJC,yBAArJ,EAA+KC,qBAA/K,QAA2M,wBAA3M;;AAGA,MAAMC,WAAN,SAA0BzC,KAAK,CAAC0C,SAAhC,CAA0C;AAGxCC,EAAAA,MAAM,GAAG;AAIP,WAGJ,4BAEE,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAC;AAAtB,OACA,MAAC,KAAD;AAAO,MAAA,YAAY,EAAC;AAApB,OACA,MAAC,IAAD;AAAM,MAAA,GAAG,EAAC;AAAV,cADA,EAKA,MAAC,IAAD;AAAM,MAAA,GAAG,EAAC;AAAV,oBALA,EASF,6BATE,CADA,CAFF,EAkBQ,MAAC,IAAD,QAMN,MAAC,UAAD,QACI,MAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OAEA,iCAFA,EAGA,MAAC,KAAD;AAAO,MAAA,YAAY,EAAC;AAApB,OAEA,MAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb,MAFA,EAIA,4FAEE,iBAFF,0CAIE,iBAJF,4CAME,iBANF,+BAJA,CAHA,EAgBA,iBAhBA,EAiBA,iBAjBA,EAkBA,MAAC,OAAD,iCAlBA,EAmBA,iBAnBA,EAoBA,iBApBA,EAqBA,iBArBA,EAuBA,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,WAAW,EAAC;AAFd,MAvBA,EA2BA,mCA3BA,EA4BA,iBA5BA,EA8BA,MAAC,SAAD;AACE,MAAA,KAAK,EAAC;AADR,MA9BA,EAiCA,oHAjCA,EAqCE,MAAC,SAAD;AACA,MAAA,KAAK,EAAC,UADN;AAEA,MAAA,IAAI,EAAC;AAFL,MArCF,EAyCA,iBAzCA,EA2CE,0BA3CF,EA6CA,MAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb,MA7CA,EA+CA,iBA/CA,EAgDA,MAAC,OAAD,kCAhDA,EAiDA,iBAjDA,EAkDE,iBAlDF,EAqDE,MAAC,UAAD;AACF,MAAA,aAAa,MADX;AAEF,MAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,oBADT;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,QAAQ,EACN;AAJJ,OADO,EAOP;AACEF,QAAAA,KAAK,EAAE,iBADT;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,QAAQ,EACN;AAJJ,OAPO,EAaP;AACEF,QAAAA,KAAK,EAAE,qBADT;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,QAAQ,EACN;AAJJ,OAbO,EAmBP;AACEF,QAAAA,KAAK,EAAE,wBADT;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,QAAQ,EACN;AAJJ,OAnBO,EAyBP;AACEF,QAAAA,KAAK,EAAE,uBADT;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,QAAQ,EACN;AAJJ,OAzBO,CAFP;AAkCF,MAAA,QAAQ,EAAEC,QAlCR;AAmCF,MAAA,QAAQ,EAAEC;AAnCR,MArDF,CADJ,CANM,CAlBR,CAHI;AAiID;;AAxIuC;;AA2I1C,eAAeP,WAAf","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport Dropdown from './Drop1';\r\nimport 'react-dropdown/style.css';\r\nimport {Card, ChoiceList, Button, Heading,EmptyState, Layout,Page, Stack, ActionList, AppProvider, Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\n\r\n\r\nclass AttCreation extends React.Component {\r\n   \r\n\r\n  render() {\r\n  \r\n    \r\n\r\n    return (\r\n\r\n\r\n<>\r\n\r\n  <Card sectioned title=\" Create attribute\">\r\n  <Stack distribution=\"leading\">\r\n  <Link url='/Index' >\r\n  Home\r\n  </Link>\r\n           \r\n  <Link url='/componenteslist' >\r\n  Attributes\r\n</Link>\r\n\r\n<p>\r\n  Attribute\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n        <Page>\r\n  \r\n  \r\n       \r\n  \r\n  \r\n  <FormLayout>\r\n      <Card sectioned>\r\n      \r\n      <p>Use Template:</p>\r\n      <Stack distribution=\"fillEvenly\">\r\n  \r\n      <Dropdown id=\"drop1\"/>\r\n     \r\n      <p>If you choose a template, the following \r\n        attribute fields will be filled \r\n        <br/>\r\n        automatically. Or you can leave this \r\n        <br/>\r\n        box blank and create your unique field \r\n        <br/>\r\n        by filling in these boxes.</p>\r\n      </Stack>\r\n      <hr/>\r\n      <br/>\r\n      <Heading>Online store dashboard</Heading>    \r\n      <br/>\r\n      <hr/>\r\n      <br/>\r\n  \r\n      <TextField\r\n        label=\"Label*:\"\r\n        placeholder=\"Attribute Label\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n  \r\n      <TextField\r\n        label=\"Code:\"\r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  30. Let \r\n        it empty for auto generation</p>\r\n  \r\n        <TextField\r\n        label=\"Quantity\"\r\n        type=\"number\"\r\n      />\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n      <Dropdown id=\"drop2\"/>\r\n  \r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n\r\n\r\n  \r\n      </FormLayout>\r\n  \r\n  </Page>\r\n  \r\n  </>\r\n   );  \r\n\r\n  }\r\n}\r\n\r\nexport default AttCreation ;"]},"metadata":{},"sourceType":"module"}