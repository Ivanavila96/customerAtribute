{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState } from \"react\";\nimport { Card, Button, Select, Page, Stack, TextField, Heading, ChoiceList } from \"@shopify/polaris\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './AttributeCreation';\nconst options = [{\n  id: \"Company\",\n  text: 'Your company',\n  value: 'Your company'\n}, {\n  id: \"How\",\n  text: 'How did you find us?',\n  value: 'How did you find us?'\n}, {\n  id: \"Register\",\n  text: 'You register as',\n  value: 'You register as'\n}, {\n  id: \"Visitor\",\n  text: 'Dear visitor!',\n  value: 'Dear visitor!'\n}, {\n  id: \"DateBirth\",\n  text: 'Date of birth',\n  value: 'Date of birth'\n}, {\n  id: \"Country\",\n  text: 'Country',\n  value: 'Country'\n}, {\n  id: \"How3\",\n  text: 'How did you find us 3?',\n  value: 'How did you find us 3?'\n}, {\n  id: \"Email\",\n  text: 'Accept Marketing Email',\n  value: 'Accept Marketing Email'\n}, {\n  id: \"Interests\",\n  text: 'Interests',\n  value: 'Interests'\n}];\n\n__jsx(Form, null, __jsx(Card, {\n  sectioned: true,\n  title: \"Attribute Properties\"\n}, __jsx(\"hr\", null), __jsx(TextField, {\n  label: \"Label*:\",\n  value: textFieldValue,\n  onChange: handleTextFieldChange,\n  placeholder: \"Your Company\"\n}), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n  label: \"Code:\",\n  placeholder: \"your-company\",\n  value: textFieldValue,\n  onChange: handleTextFieldChange,\n  disabled: true\n}), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  <= 30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n  label: \"Sorting Order:\",\n  type: \"number\",\n  value: valueNo,\n  onChange: handleChangeNo\n}), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n  placeholder: \"Text Field\",\n  disabled: true\n}), __jsx(\"br\", null), __jsx(TextField, {\n  label: \"Default value:\",\n  value: valueDV,\n  onChange: handleChangeDV\n}), __jsx(\"p\", null, \"The default value for this attribute when it is shown to your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n  label: \"Placeholder:\",\n  value: value,\n  onChange: handleChangePh\n}), __jsx(\"p\", null, \"The placeholder specifies a short hint that describes the expected value of this field\"), __jsx(\"br\", null), __jsx(Checkbox, {\n  label: \"Values Required\",\n  checked: checked,\n  onChange: handleChangeSingle\n}), __jsx(\"p\", null, \"Tick if this attribute is required to be filled by your customers\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Input Validation:\"), __jsx(Dropdown, {\n  options: options,\n  placeholder: \"None\"\n}), __jsx(\"p\", null, \"You need to chose default date again to save with new formatd\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n  allowMultiple: true,\n  choices: [{\n    label: 'Show on Cart page:',\n    value: 'shipping',\n    helpText: 'Tick if you want to use this attribute on cart page.'\n  }, {\n    label: 'Hide if filled:',\n    value: 'confirmation',\n    helpText: 'Hide this attribute if it was filled before.'\n  }, {\n    label: 'Show on Order grid:',\n    value: 'shipping',\n    helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n  }, {\n    label: 'Show on Register page:',\n    value: 'confirmation',\n    helpText: 'Tick if you want to use this attribute on register page.'\n  }, {\n    label: 'Show on Customer grid',\n    value: 'confirmation',\n    helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n  }],\n  selected: selected,\n  onChange: handleChange\n})));\n\nexport class Drop_1 extends React.Component {\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Dropdown, {\n      onChange: this.handleChange,\n      options: options,\n      placeholder: \"Choose an option\",\n      selection: true\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Drop1.js"],"names":["React","Fragment","useCallback","useState","Card","Button","Select","Page","Stack","TextField","Heading","ChoiceList","Dropdown","options","id","text","value","textFieldValue","handleTextFieldChange","valueNo","handleChangeNo","valueDV","handleChangeDV","handleChangePh","checked","handleChangeSingle","label","helpText","selected","handleChange","Drop_1","Component","render"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState} from \"react\";\r\nimport {Card, Button, Select, Page, Stack, TextField, Heading, ChoiceList,} from \"@shopify/polaris\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './AttributeCreation';\r\n\r\nconst options = [\r\n    {id:\"Company\", text: 'Your company', value:'Your company',},\r\n    {id:\"How\", text: 'How did you find us?',  value: 'How did you find us?'},\r\n    {id:\"Register\",text: 'You register as', value: 'You register as'},\r\n    {id:\"Visitor\",text: 'Dear visitor!', value: 'Dear visitor!'},\r\n    {id:\"DateBirth\",text: 'Date of birth', value: 'Date of birth'},\r\n    {id:\"Country\",text: 'Country', value: 'Country'},\r\n    {id:\"How3\",text: 'How did you find us 3?', value: 'How did you find us 3?'},\r\n    {id:\"Email\",text: 'Accept Marketing Email', value: 'Accept Marketing Email'},\r\n    {id:\"Interests\",text: 'Interests', value: 'Interests'},\r\n  ];\r\n\r\n\r\n<Form>\r\n      <Card sectioned title=\"Attribute Properties\">\r\n      <hr/>\r\n\r\n      <TextField\r\n        label=\"Label*:\"\r\n        value={textFieldValue}\r\n        onChange={handleTextFieldChange}\r\n        placeholder=\"Your Company\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n\r\n      \r\n      <TextField\r\n        label=\"Code:\"\r\n        placeholder=\"your-company\"\r\n        value={textFieldValue}\r\n        onChange={handleTextFieldChange}\r\n        disabled\r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  &lt;= 30. Let \r\n        it empty for auto generation</p>\r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Sorting Order:\"\r\n        type=\"number\"\r\n        value={valueNo}\r\n        onChange={handleChangeNo}\r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n        <Dropdown placeholder=\"Text Field\" disabled />\r\n        <br/>\r\n   \r\n        <TextField\r\n        label=\"Default value:\"\r\n        value={valueDV}\r\n        onChange={handleChangeDV}\r\n      />\r\n      <p>The default value for this attribute when \r\n          it is shown to your customers</p>\r\n      <br/>\r\n\r\n      <TextField\r\n        label=\"Placeholder:\"\r\n        value={value}\r\n        onChange={handleChangePh}\r\n       \r\n      />\r\n      <p>The placeholder specifies a short hint \r\n          that describes the expected value of \r\n          this field</p>\r\n          <br/>\r\n\r\n      <Checkbox\r\n          label=\"Values Required\"\r\n          checked={checked}\r\n          onChange={handleChangeSingle}\r\n        />\r\n        <p>Tick if this attribute is required to be \r\n            filled by your customers</p>\r\n            <br/>\r\n\r\n            <p>Input Validation:</p>\r\n            <Dropdown  options={options}   placeholder=\"None\"/>\r\n\r\n      <p>You need to chose default date again to \r\n          save with new formatd</p>\r\n    \r\n  \r\n      <br/>\r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n\r\n\r\n      </Form>\r\n\r\nexport class Drop_1 extends React.Component{\r\n\r\n \r\n  render(){\r\n   \r\n    \r\n\r\n  return(\r\n    \r\n  <>\r\n  <Dropdown\r\n   onChange={this.handleChange}  \r\n  options={options}\r\n  placeholder=\"Choose an option\" \r\n selection \r\n/>\r\n      \r\n           \r\n\r\n\r\n  \r\n\r\n</>\r\n    )\r\n\r\n  }\r\n}   \r\n\r\n"]},"metadata":{},"sourceType":"module"}