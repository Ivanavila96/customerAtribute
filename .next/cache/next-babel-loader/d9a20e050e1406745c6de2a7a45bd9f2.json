{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport 'react-dropdown/style.css';\nimport { Card, DatePicker, Tabs, Checkbox, Form, ChoiceList, Button, Heading, EmptyState, AppProvider, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport Dropdown from 'react-dropdown';\n\nconst AttDateBirth = props => {\n  const {\n    0: selectedTab,\n    1: setSelectedTab\n  } = useState(0);\n  const handleTabChange = useCallback(selectedTabIndex => setSelectedTab(selectedTabIndex), []);\n  const tabs = [{\n    id: 'FormDateB',\n    content: 'Properties',\n    accessibilityLabel: 'All customers',\n    panelID: 'all-customers-content'\n  }];\n  const {\n    0: valueDate,\n    1: setValueDate\n  } = useState('');\n  const handleChangeDate = useCallback(newValueDate => setValueDate(newValueDate), []);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(['hidden']);\n  const handleChange = useCallback(value => setSelected(value), []);\n  const {\n    0: textFieldValue,\n    1: setTextFieldValue\n  } = useState('');\n  const handleTextFieldChange = useCallback(value => setTextFieldValue(value), []);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const handleChangePh = useCallback(newValue => setValue(newValue), []);\n  const {\n    0: valueFormat,\n    1: setValueFormat\n  } = useState('');\n  const handleChangeFornmat = useCallback(newValueFormat => setValueFormat(newValueFormat), []);\n  const handleChangeNo = useCallback(newValueNo => setValueNo(newValueNo), []);\n  const {\n    0: valueNo,\n    1: setValueNo\n  } = useState('1');\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const handleChangeSingle = useCallback(newChecked => setChecked(newChecked), []);\n  {\n    /*navbar */\n  }\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \" Attribute Date of birth\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/AttributesTemplates\"\n  }, \"Attributes Templates\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selectedTab,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, null, __jsx(Form, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Properties\"\n  }, __jsx(\"hr\", null), __jsx(TextField, {\n    label: \"Label*:\",\n    value: textFieldValue,\n    onChange: handleTextFieldChange,\n    placeholder: \"Date of birth\"\n  }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Code:\",\n    placeholder: \"date-of-birth\",\n    disabled: true\n  }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  <= 30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Sorting Order:\",\n    type: \"number\",\n    value: valueNo,\n    onChange: handleChangeNo\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n    placeholder: \"Date\",\n    disabled: true\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"date\",\n    label: \"Default value:\",\n    type: \"date\",\n    defaultValue: \"DD-MM-YYYY\",\n    value: valueDate,\n    onChange: handleChangeDate\n  }), __jsx(\"p\", null, \"The default value for this attribute when it is shown to your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Placeholder:\",\n    value: value,\n    onChange: handleChangePh\n  }), __jsx(\"p\", null, \"The placeholder specifies a short hint that describes the expected value of this field\"), __jsx(\"br\", null), __jsx(Checkbox, {\n    label: \"Values Required\",\n    checked: checked,\n    onChange: handleChangeSingle\n  }), __jsx(\"p\", null, \"Tick if this attribute is required to be filled by your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Format Options:\",\n    value: valueFormat,\n    onChange: handleChangeFornmat\n  }), __jsx(\"p\", null, \"You need to chose default date again to save with new format\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }],\n    selected: selected,\n    onChange: handleChange\n  })))))), __jsx(\"br\", null)));\n};\n\nexport default AttDateBirth;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeDateofBirth.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","DatePicker","Tabs","Checkbox","Form","ChoiceList","Button","Heading","EmptyState","AppProvider","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Dropdown","AttDateBirth","props","selectedTab","setSelectedTab","handleTabChange","selectedTabIndex","tabs","id","content","accessibilityLabel","panelID","valueDate","setValueDate","handleChangeDate","newValueDate","selected","setSelected","handleChange","value","textFieldValue","setTextFieldValue","handleTextFieldChange","setValue","handleChangePh","newValue","valueFormat","setValueFormat","handleChangeFornmat","newValueFormat","handleChangeNo","newValueNo","setValueNo","valueNo","checked","setChecked","handleChangeSingle","newChecked","label","helpText"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport 'react-dropdown/style.css';\r\nimport {Card,DatePicker, Tabs, Checkbox, Form, ChoiceList, Button, Heading,EmptyState, AppProvider,Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport Dropdown from 'react-dropdown';\r\n\r\n\r\nconst AttDateBirth = (props) =>{\r\n\r\n\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (selectedTabIndex) => setSelectedTab(selectedTabIndex),\r\n    [],\r\n  );\r\n  \r\n  const tabs = [\r\n    {\r\n      id: 'FormDateB',\r\n      content: 'Properties',\r\n      accessibilityLabel: 'All customers',\r\n      panelID: 'all-customers-content',\r\n    },\r\n   \r\n  ];\r\n\r\n  const [valueDate, setValueDate] = useState('');\r\n  const handleChangeDate = useCallback((newValueDate) => setValueDate(newValueDate), []);\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n \r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => setTextFieldValue(value),\r\n    [],\r\n  );\r\n\r\n  const [value, setValue] = useState('');\r\n  const handleChangePh = useCallback((newValue) => setValue(newValue), []);\r\n\r\n  const [valueFormat, setValueFormat] = useState('');\r\n  const handleChangeFornmat = useCallback((newValueFormat) => setValueFormat(newValueFormat), []);\r\n  \r\n  const handleChangeNo = useCallback((newValueNo) => setValueNo(newValueNo), []);\r\n  const [valueNo, setValueNo] = useState('1');\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const handleChangeSingle = useCallback((newChecked) => setChecked(newChecked), []);\r\n  \r\n   {/*navbar */}\r\n\r\nreturn(\r\n<>\r\n  <Card sectioned title=\" Attribute Date of birth\">\r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>\r\n           \r\n      <Link url='/AttributesTemplates' >\r\n        Attributes Templates\r\n      </Link>\r\n        <p>Attribute</p>\r\n    </Stack>        \r\n  </Card>\r\n        \r\n<Page>             \r\n  <Card>\r\n    <Tabs tabs={tabs} selected={selectedTab} onSelect={handleTabChange}>\r\n      <Card.Section >\r\n        <Form>\r\n          <Card sectioned title=\"Attribute Properties\">\r\n            <hr/>\r\n\r\n            <TextField\r\n              label=\"Label*:\"\r\n              value={textFieldValue}\r\n              onChange={handleTextFieldChange}\r\n              placeholder=\"Date of birth\"/>\r\n            <p>Attribute label</p>\r\n            <br/>\r\n        \r\n            <TextField\r\n              label=\"Code:\"\r\n              placeholder=\"date-of-birth\"\r\n              disabled/>\r\n            <p>For internal use. Must be unique with \r\n              no spaces and length  &lt;= 30. Let \r\n              it empty for auto generation</p>\r\n            <br/>\r\n            \r\n            <TextField\r\n              label=\"Sorting Order:\"\r\n              type=\"number\"\r\n              value={valueNo}\r\n              onChange={handleChangeNo}/>\r\n            <p>Attributes are sorted in ascending \r\n              order (eg: Attribute with sorting order \r\n              1 will be displayed on top of Attribute 2)</p>\r\n            <br/>\r\n  \r\n                <p>Type*:</p>\r\n                  <Dropdown placeholder=\"Date\" disabled />\r\n                <br/>\r\n   \r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Default value:\"\r\n              type=\"date\"\r\n              defaultValue=\"DD-MM-YYYY\"\r\n              value={valueDate}\r\n              onChange={handleChangeDate}/>\r\n            <p>The default value for this attribute when it is shown to your customers</p>\r\n            <br/>\r\n\r\n            <TextField\r\n              label=\"Placeholder:\"\r\n              value={value}\r\n              onChange={handleChangePh}/>\r\n            <p>The placeholder specifies a short hint \r\n                that describes the expected value of \r\n                this field</p>\r\n            <br/>\r\n\r\n            <Checkbox\r\n                label=\"Values Required\"\r\n                checked={checked}\r\n                onChange={handleChangeSingle}/>\r\n            <p>Tick if this attribute is required to be \r\n                filled by your customers</p>\r\n            <br/>\r\n\r\n            \r\n            <TextField\r\n                label=\"Format Options:\"\r\n                value={valueFormat}\r\n                onChange={handleChangeFornmat}/>\r\n            <p>You need to chose default date again to \r\n                save with new format</p>\r\n            <br/>\r\n\r\n              <br/>\r\n              <Heading>Attribute Configuration</Heading>    \r\n              <br/>\r\n              <hr/>\r\n  \r\n       \r\n            <ChoiceList\r\n                allowMultiple\r\n                choices={[\r\n                  {\r\n                    label: 'Show on Cart page:',\r\n                    value: 'shipping',\r\n                    helpText:\r\n                      'Tick if you want to use this attribute on cart page.',\r\n                  },\r\n                  {\r\n                    label: 'Show on Register page:',\r\n                    value: 'confirmation',\r\n                    helpText:\r\n                      'Tick if you want to use this attribute on register page.',\r\n                  },\r\n                ]}\r\n                selected={selected}\r\n                onChange={handleChange}/>\r\n          </Card>\r\n        </Form>  \r\n      </Card.Section>\r\n    </Tabs>\r\n  </Card>\r\n  <br/>\r\n</Page>  \r\n</>\r\n  \r\n)\r\n}\r\n\r\nexport default AttDateBirth\r\n"]},"metadata":{},"sourceType":"module"}