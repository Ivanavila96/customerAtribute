{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Table, Button, Container, Modal, ModalHeader, ModalBody, FormGroup, ModalFooter } from \"reactstrap\";\nvar data = [{\n  id: 1,\n  personaje: \"Naruto\",\n  anime: \"Naruto\"\n}, {\n  id: 2,\n  personaje: \"Goku\",\n  anime: \"Dragon Ball\"\n}, {\n  id: 3,\n  personaje: \"Kenshin Himura\",\n  anime: \"Rurouni Kenshin\"\n}, {\n  id: 4,\n  personaje: \"Monkey D. Luffy\",\n  anime: \"One Piece\"\n}, {\n  id: 5,\n  personaje: \"Edward Elric\",\n  anime: \"Fullmetal Alchemist: Brotherhood\"\n}, {\n  id: 6,\n  personaje: \"Seto Kaiba\",\n  anime: \"Yu-Gi-Oh!\"\n}];\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: data,\n      modalActualizar: false,\n      modalInsertar: false,\n      form: {\n        id: \"\",\n        personaje: \"\",\n        anime: \"\"\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mostrarModalActualizar\", function (dato) {\n      _this.setState({\n        form: dato,\n        modalActualizar: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cerrarModalActualizar\", function () {\n      _this.setState({\n        modalActualizar: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mostrarModalInsertar\", function () {\n      _this.setState({\n        modalInsertar: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cerrarModalInsertar\", function () {\n      _this.setState({\n        modalInsertar: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editar\", function (dato) {\n      var contador = 0;\n      var arreglo = _this.state.data;\n      arreglo.map(function (registro) {\n        if (dato.id == registro.id) {\n          arreglo[contador].personaje = dato.personaje;\n          arreglo[contador].anime = dato.anime;\n        }\n\n        contador++;\n      });\n\n      _this.setState({\n        data: arreglo,\n        modalActualizar: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"eliminar\", function (dato) {\n      var opcion = window.confirm(\"EstÃ¡s Seguro que deseas Eliminar el elemento \" + dato.id);\n\n      if (opcion == true) {\n        var contador = 0;\n        var arreglo = _this.state.data;\n        arreglo.map(function (registro) {\n          if (dato.id == registro.id) {\n            arreglo.splice(contador, 1);\n          }\n\n          contador++;\n        });\n\n        _this.setState({\n          data: arreglo,\n          modalActualizar: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"insertar\", function () {\n      var valorNuevo = _objectSpread({}, _this.state.form);\n\n      valorNuevo.id = _this.state.data.length + 1;\n      var lista = _this.state.data;\n      lista.push(valorNuevo);\n\n      _this.setState({\n        modalInsertar: false,\n        data: lista\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState({\n        form: _objectSpread(_objectSpread({}, _this.state.form), {}, _defineProperty({}, e.target.name, e.target.value))\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(\"br\", null), __jsx(Button, {\n        color: \"success\",\n        onClick: function onClick() {\n          return _this2.mostrarModalInsertar();\n        }\n      }, \"Crear\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Table, null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"ID\"), __jsx(\"th\", null, \"Personaje\"), __jsx(\"th\", null, \"Anime\"), __jsx(\"th\", null, \"Acci\\xF3n\"))), __jsx(\"tbody\", null, this.state.data.map(function (dato) {\n        return __jsx(\"tr\", {\n          key: dato.id\n        }, __jsx(\"td\", null, dato.id), __jsx(\"td\", null, dato.personaje), __jsx(\"td\", null, dato.anime), __jsx(\"td\", null, __jsx(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.mostrarModalActualizar(dato);\n          }\n        }, \"Editar\"), \" \", __jsx(Button, {\n          color: \"danger\",\n          onClick: function onClick() {\n            return _this2.eliminar(dato);\n          }\n        }, \"Eliminar\")));\n      })))), __jsx(Modal, {\n        isOpen: this.state.modalActualizar\n      }, __jsx(ModalHeader, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Editar Registro\"))), __jsx(ModalBody, null, __jsx(FormGroup, null, __jsx(\"label\", null, \"Id:\"), __jsx(\"input\", {\n        className: \"form-control\",\n        readOnly: true,\n        type: \"text\",\n        value: this.state.form.id\n      })), __jsx(FormGroup, null, __jsx(\"label\", null, \"Personaje:\"), __jsx(\"input\", {\n        className: \"form-control\",\n        name: \"personaje\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.form.personaje\n      })), __jsx(FormGroup, null, __jsx(\"label\", null, \"Anime:\"), __jsx(\"input\", {\n        className: \"form-control\",\n        name: \"anime\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.form.anime\n      }))), __jsx(ModalFooter, null, __jsx(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.editar(_this2.state.form);\n        }\n      }, \"Editar\"), __jsx(Button, {\n        color: \"danger\",\n        onClick: function onClick() {\n          return _this2.cerrarModalActualizar();\n        }\n      }, \"Cancelar\"))), __jsx(Modal, {\n        isOpen: this.state.modalInsertar\n      }, __jsx(ModalHeader, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Insertar Personaje\"))), __jsx(ModalBody, null, __jsx(FormGroup, null, __jsx(\"label\", null, \"Id:\"), __jsx(\"input\", {\n        className: \"form-control\",\n        readOnly: true,\n        type: \"text\",\n        value: this.state.data.length + 1\n      })), __jsx(FormGroup, null, __jsx(\"label\", null, \"Personaje:\"), __jsx(\"input\", {\n        className: \"form-control\",\n        name: \"personaje\",\n        type: \"text\",\n        onChange: this.handleChange\n      })), __jsx(FormGroup, null, __jsx(\"label\", null, \"Anime:\"), __jsx(\"input\", {\n        className: \"form-control\",\n        name: \"anime\",\n        type: \"text\",\n        onChange: this.handleChange\n      }))), __jsx(ModalFooter, null, __jsx(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.insertar();\n        }\n      }, \"Insertar\"), __jsx(Button, {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.cerrarModalInsertar();\n        }\n      }, \"Cancelar\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributesTemplates.js"],"names":["React","logo","Table","Button","Container","Modal","ModalHeader","ModalBody","FormGroup","ModalFooter","data","id","personaje","anime","App","modalActualizar","modalInsertar","form","dato","setState","contador","arreglo","state","map","registro","opcion","window","confirm","splice","valorNuevo","length","lista","push","e","target","name","value","mostrarModalInsertar","mostrarModalActualizar","eliminar","handleChange","editar","cerrarModalActualizar","insertar","cerrarModalInsertar","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nconst data = [\r\n  { id: 1, personaje: \"Naruto\", anime: \"Naruto\" },\r\n  { id: 2, personaje: \"Goku\", anime: \"Dragon Ball\" },\r\n  { id: 3, personaje: \"Kenshin Himura\", anime: \"Rurouni Kenshin\" },\r\n  { id: 4, personaje: \"Monkey D. Luffy\", anime: \"One Piece\" },\r\n  { id: 5, personaje: \"Edward Elric\", anime: \"Fullmetal Alchemist: Brotherhood\"},\r\n  { id: 6, personaje: \"Seto Kaiba\", anime: \"Yu-Gi-Oh!\" },\r\n];\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: data,\r\n    modalActualizar: false,\r\n    modalInsertar: false,\r\n    form: {\r\n      id: \"\",\r\n      personaje: \"\",\r\n      anime: \"\",\r\n    },\r\n  };\r\n\r\n  mostrarModalActualizar = (dato) => {\r\n    this.setState({\r\n      form: dato,\r\n      modalActualizar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalActualizar = () => {\r\n    this.setState({ modalActualizar: false });\r\n  };\r\n\r\n  mostrarModalInsertar = () => {\r\n    this.setState({\r\n      modalInsertar: true,\r\n    });\r\n  };\r\n\r\n  cerrarModalInsertar = () => {\r\n    this.setState({ modalInsertar: false });\r\n  };\r\n\r\n  editar = (dato) => {\r\n    var contador = 0;\r\n    var arreglo = this.state.data;\r\n    arreglo.map((registro) => {\r\n      if (dato.id == registro.id) {\r\n        arreglo[contador].personaje = dato.personaje;\r\n        arreglo[contador].anime = dato.anime;\r\n      }\r\n      contador++;\r\n    });\r\n    this.setState({ data: arreglo, modalActualizar: false });\r\n  };\r\n\r\n  eliminar = (dato) => {\r\n    var opcion = window.confirm(\"EstÃ¡s Seguro que deseas Eliminar el elemento \"+dato.id);\r\n    if (opcion == true) {\r\n      var contador = 0;\r\n      var arreglo = this.state.data;\r\n      arreglo.map((registro) => {\r\n        if (dato.id == registro.id) {\r\n          arreglo.splice(contador, 1);\r\n        }\r\n        contador++;\r\n      });\r\n      this.setState({ data: arreglo, modalActualizar: false });\r\n    }\r\n  };\r\n\r\n  insertar= ()=>{\r\n    var valorNuevo= {...this.state.form};\r\n    valorNuevo.id=this.state.data.length+1;\r\n    var lista= this.state.data;\r\n    lista.push(valorNuevo);\r\n    this.setState({ modalInsertar: false, data: lista });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <Container>\r\n        <br />\r\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Crear</Button>\r\n          <br />\r\n          <br />\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Personaje</th>\r\n                <th>Anime</th>\r\n                <th>AcciÃ³n</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {this.state.data.map((dato) => (\r\n                <tr key={dato.id}>\r\n                  <td>{dato.id}</td>\r\n                  <td>{dato.personaje}</td>\r\n                  <td>{dato.anime}</td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => this.mostrarModalActualizar(dato)}\r\n                    >\r\n                      Editar\r\n                    </Button>{\" \"}\r\n                    <Button color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n\r\n        <Modal isOpen={this.state.modalActualizar}>\r\n          <ModalHeader>\r\n           <div><h3>Editar Registro</h3></div>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>\r\n               Id:\r\n              </label>\r\n            \r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                value={this.state.form.id}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Personaje: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"personaje\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.personaje}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Anime: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"anime\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.anime}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.editar(this.state.form)}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n\r\n        <Modal isOpen={this.state.modalInsertar}>\r\n          <ModalHeader>\r\n           <div><h3>Insertar Personaje</h3></div>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>\r\n                Id: \r\n              </label>\r\n              \r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                value={this.state.data.length+1}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Personaje: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"personaje\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <label>\r\n                Anime: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"anime\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.insertar()}\r\n            >\r\n              Insertar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalInsertar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}