{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState } from \"react\";\nimport { Card, Button, EmptyState, Layout, Page, Stack, ActionList, AppProvider, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\n\nfunction ac() {\n  __jsx(Redirect, {\n    to: \"/AttributeCreation\"\n  });\n}\n\nfunction FrameExample() {\n  const defaultState = useRef({\n    emailFieldValue: 'dharma@jadedpixel.com',\n    nameFieldValue: 'Jaded Pixel'\n  });\n  const skipToContentRef = useRef(null);\n  const {\n    0: toastActive,\n    1: setToastActive\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isDirty,\n    1: setIsDirty\n  } = useState(false);\n  const {\n    0: searchActive,\n    1: setSearchActive\n  } = useState(false);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n  const {\n    0: userMenuActive,\n    1: setUserMenuActive\n  } = useState(false);\n  const {\n    0: mobileNavigationActive,\n    1: setMobileNavigationActive\n  } = useState(false);\n  const {\n    0: modalActive,\n    1: setModalActive\n  } = useState(false);\n  const {\n    0: nameFieldValue,\n    1: setNameFieldValue\n  } = useState(defaultState.current.nameFieldValue);\n  const {\n    0: emailFieldValue,\n    1: setEmailFieldValue\n  } = useState(defaultState.current.emailFieldValue);\n  const {\n    0: storeName,\n    1: setStoreName\n  } = useState(defaultState.current.nameFieldValue);\n  const {\n    0: supportSubject,\n    1: setSupportSubject\n  } = useState('');\n  const {\n    0: supportMessage,\n    1: setSupportMessage\n  } = useState('');\n  const handleSubjectChange = useCallback(value => setSupportSubject(value), []);\n  const handleMessageChange = useCallback(value => setSupportMessage(value), []);\n  const handleDiscard = useCallback(() => {\n    setEmailFieldValue(defaultState.current.emailFieldValue);\n    setNameFieldValue(defaultState.current.nameFieldValue);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    defaultState.current.nameFieldValue = nameFieldValue;\n    defaultState.current.emailFieldValue = emailFieldValue;\n    setIsDirty(false);\n    setToastActive(true);\n    setStoreName(defaultState.current.nameFieldValue);\n  }, [emailFieldValue, nameFieldValue]);\n  const handleNameFieldChange = useCallback(value => {\n    setNameFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  const handleEmailFieldChange = useCallback(value => {\n    setEmailFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue('');\n  }, []);\n  const handleSearchFieldChange = useCallback(value => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n  const toggleToastActive = useCallback(() => setToastActive(toastActive => !toastActive), []);\n  const toggleUserMenuActive = useCallback(() => setUserMenuActive(userMenuActive => !userMenuActive), []);\n  const toggleMobileNavigationActive = useCallback(() => setMobileNavigationActive(mobileNavigationActive => !mobileNavigationActive), []);\n  const toggleIsLoading = useCallback(() => setIsLoading(isLoading => !isLoading), []);\n  const toggleModalActive = useCallback(() => setModalActive(modalActive => !modalActive), []);\n  const toastMarkup = toastActive ? __jsx(Toast, {\n    onDismiss: toggleToastActive,\n    content: \"Changes saved\"\n  }) : null;\n  const userMenuActions = [{\n    items: [{\n      content: 'Community forums'\n    }]\n  }];\n  const contextualSaveBarMarkup = isDirty ? __jsx(ContextualSaveBar, {\n    message: \"Unsaved changes\",\n    saveAction: {\n      onAction: handleSave\n    },\n    discardAction: {\n      onAction: handleDiscard\n    }\n  }) : null;\n\n  const userMenuMarkup = __jsx(TopBar.UserMenu, {\n    actions: userMenuActions,\n    name: \"Dharma\",\n    detail: storeName,\n    initials: \"D\",\n    open: userMenuActive,\n    onToggle: toggleUserMenuActive\n  });\n\n  const searchResultsMarkup = __jsx(Card, null, __jsx(ActionList, {\n    items: [{\n      content: 'Shopify help center'\n    }, {\n      content: 'Community forums'\n    }]\n  }));\n\n  const searchFieldMarkup = __jsx(TopBar.SearchField, {\n    onChange: handleSearchFieldChange,\n    value: searchValue,\n    placeholder: \"Search\"\n  });\n\n  const topBarMarkup = __jsx(TopBar, {\n    showNavigationToggle: true,\n    userMenu: userMenuMarkup,\n    searchResultsVisible: searchActive,\n    searchField: searchFieldMarkup,\n    searchResults: searchResultsMarkup,\n    onSearchResultsDismiss: handleSearchResultsDismiss,\n    onNavigationToggle: toggleMobileNavigationActive\n  });\n\n  const navigationMarkup = __jsx(Navigation, {\n    location: \"/\"\n  }, __jsx(Navigation.Section, {\n    items: [{\n      label: 'Back to Shopify',\n      icon: ArrowLeftMinor\n    }]\n  }), __jsx(Navigation.Section, {\n    separator: true,\n    title: \"Jaded Pixel App\",\n    items: [{\n      label: 'Dashboard',\n      icon: HomeMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Jaded Pixel Orders',\n      icon: OrdersMajorTwotone,\n      onClick: toggleIsLoading\n    }],\n    action: {\n      icon: ConversationMinor,\n      accessibilityLabel: 'Contact support',\n      onClick: toggleModalActive\n    }\n  }));\n\n  const loadingMarkup = isLoading ? __jsx(Loading, null) : null;\n\n  const skipToContentTarget = __jsx(\"a\", {\n    id: \"SkipToContentTarget\",\n    ref: skipToContentRef,\n    tabIndex: -1\n  });\n\n  const actualPageMarkup = __jsx(Page, {\n    title: \"Account\"\n  }, __jsx(Layout, null, skipToContentTarget, __jsx(Layout.AnnotatedSection, {\n    title: \"Account details\",\n    description: \"Jaded Pixel will use this as your account information.\"\n  }, __jsx(Card, {\n    sectioned: true\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Full name\",\n    value: nameFieldValue,\n    onChange: handleNameFieldChange\n  }), __jsx(TextField, {\n    type: \"email\",\n    label: \"Email\",\n    value: emailFieldValue,\n    onChange: handleEmailFieldChange\n  }))))));\n\n  const loadingPageMarkup = __jsx(SkeletonPage, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextContainer, null, __jsx(SkeletonDisplayText, {\n    size: \"small\"\n  }), __jsx(SkeletonBodyText, {\n    lines: 9\n  }))))));\n\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  const modalMarkup = __jsx(Modal, {\n    open: modalActive,\n    onClose: toggleModalActive,\n    title: \"Contact support\",\n    primaryAction: {\n      content: 'Send',\n      onAction: toggleModalActive\n    }\n  }, __jsx(Modal.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Subject\",\n    value: supportSubject,\n    onChange: handleSubjectChange\n  }), __jsx(TextField, {\n    label: \"Message\",\n    value: supportMessage,\n    onChange: handleMessageChange,\n    multiline: true\n  }))));\n\n  const theme = {\n    colors: {\n      topBar: {\n        background: '#357997'\n      }\n    },\n    logo: {\n      width: 124,\n      topBarSource: 'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999',\n      contextualSaveBarSource: 'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999',\n      url: 'http://jadedpixel.com',\n      accessibilityLabel: 'Jaded Pixel'\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(AppProvider, {\n    theme: theme,\n    i18n: {\n      Polaris: {\n        Avatar: {\n          label: 'Avatar',\n          labelWithInitials: 'Avatar with initials {initials}'\n        },\n        ContextualSaveBar: {\n          save: 'Save',\n          discard: 'Discard'\n        },\n        TextField: {\n          characterCount: '{count} characters'\n        },\n        TopBar: {\n          toggleMenuLabel: 'Toggle menu',\n          SearchField: {\n            clearButtonLabel: 'Clear',\n            search: 'Search'\n          }\n        },\n        Modal: {\n          iFrameTitle: 'body markup'\n        },\n        Frame: {\n          skipToContent: 'Skip to content',\n          Navigation: {\n            closeMobileNavigationLabel: 'Close navigation'\n          }\n        }\n      }\n    }\n  }, __jsx(Frame, {\n    topBar: topBarMarkup,\n    navigation: navigationMarkup,\n    showMobileNavigation: mobileNavigationActive,\n    onNavigationDismiss: toggleMobileNavigationActive,\n    skipToContentTarget: skipToContentRef.current\n  }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n}\n\nclass Index extends React.Component {\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Card, {\n      sectioned: true,\n      title: \"ashboard\"\n    }, __jsx(\"p\", null, \"Home\")), __jsx(Page, null, __jsx(Card, null, __jsx(Card.Section, {\n      title: \"Quickstart\"\n    }, __jsx(\"br\", null), __jsx(Stack, {\n      distribution: \"equalSpacing\"\n    }, __jsx(\"p\", null, \"Create an attribute\"), __jsx(Button, {\n      primary: true,\n      onClick: ac\n    }, \"Start Task\")))), __jsx(Card, null, __jsx(Card.Section, {\n      title: \"Application Stats\"\n    }, __jsx(Stack, {\n      distribution: \"equalSpacing\"\n    }, __jsx(Card.Section, null, __jsx(\"p\", null, \"Total Customers\"), __jsx(\"p\", null, \"0\")), __jsx(Card.Section, null, __jsx(\"p\", null, \"Total Orders\"), __jsx(\"p\", null, \"0\")), __jsx(Card.Section, null, __jsx(\"p\", null, \"Total Attributes\"), __jsx(\"p\", null, \"0\")))))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Index.js"],"names":["React","Fragment","useCallback","useState","Card","Button","EmptyState","Layout","Page","Stack","ActionList","AppProvider","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Redirect","ac","FrameExample","defaultState","useRef","emailFieldValue","nameFieldValue","skipToContentRef","toastActive","setToastActive","isLoading","setIsLoading","isDirty","setIsDirty","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","modalActive","setModalActive","setNameFieldValue","current","setEmailFieldValue","storeName","setStoreName","supportSubject","setSupportSubject","supportMessage","setSupportMessage","handleSubjectChange","value","handleMessageChange","handleDiscard","handleSave","handleNameFieldChange","handleEmailFieldChange","handleSearchResultsDismiss","handleSearchFieldChange","length","toggleToastActive","toggleUserMenuActive","toggleMobileNavigationActive","toggleIsLoading","toggleModalActive","toastMarkup","userMenuActions","items","content","contextualSaveBarMarkup","onAction","userMenuMarkup","searchResultsMarkup","searchFieldMarkup","topBarMarkup","navigationMarkup","label","icon","ArrowLeftMinor","HomeMajorMonotone","onClick","OrdersMajorTwotone","ConversationMinor","accessibilityLabel","loadingMarkup","skipToContentTarget","actualPageMarkup","loadingPageMarkup","pageMarkup","modalMarkup","theme","colors","topBar","background","logo","width","topBarSource","contextualSaveBarSource","url","height","Polaris","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel","Index","Component","render"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState} from \"react\";\r\nimport {Card, Button, EmptyState, Layout,Page, Stack, ActionList, AppProvider, Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\n\r\n\r\nfunction ac() {\r\n  <Redirect to='/AttributeCreation'/>;\r\n}\r\nfunction FrameExample() {\r\n  const defaultState = useRef({\r\n    emailFieldValue: 'dharma@jadedpixel.com',\r\n    nameFieldValue: 'Jaded Pixel',\r\n  });\r\n  const skipToContentRef = useRef(null);\r\n\r\n  const [toastActive, setToastActive] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [userMenuActive, setUserMenuActive] = useState(false);\r\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [nameFieldValue, setNameFieldValue] = useState(\r\n    defaultState.current.nameFieldValue,\r\n  );\r\n  const [emailFieldValue, setEmailFieldValue] = useState(\r\n    defaultState.current.emailFieldValue,\r\n  );\r\n  const [storeName, setStoreName] = useState(\r\n    defaultState.current.nameFieldValue,\r\n  );\r\n  const [supportSubject, setSupportSubject] = useState('');\r\n  const [supportMessage, setSupportMessage] = useState('');\r\n\r\n  const handleSubjectChange = useCallback(\r\n    (value) => setSupportSubject(value),\r\n    [],\r\n  );\r\n  const handleMessageChange = useCallback(\r\n    (value) => setSupportMessage(value),\r\n    [],\r\n  );\r\n  const handleDiscard = useCallback(() => {\r\n    setEmailFieldValue(defaultState.current.emailFieldValue);\r\n    setNameFieldValue(defaultState.current.nameFieldValue);\r\n    setIsDirty(false);\r\n  }, []);\r\n  const handleSave = useCallback(() => {\r\n    defaultState.current.nameFieldValue = nameFieldValue;\r\n    defaultState.current.emailFieldValue = emailFieldValue;\r\n\r\n    setIsDirty(false);\r\n    setToastActive(true);\r\n    setStoreName(defaultState.current.nameFieldValue);\r\n  }, [emailFieldValue, nameFieldValue]);\r\n  const handleNameFieldChange = useCallback((value) => {\r\n    setNameFieldValue(value);\r\n    value && setIsDirty(true);\r\n  }, []);\r\n  const handleEmailFieldChange = useCallback((value) => {\r\n    setEmailFieldValue(value);\r\n    value && setIsDirty(true);\r\n  }, []);\r\n  const handleSearchResultsDismiss = useCallback(() => {\r\n    setSearchActive(false);\r\n    setSearchValue('');\r\n  }, []);\r\n  const handleSearchFieldChange = useCallback((value) => {\r\n    setSearchValue(value);\r\n    setSearchActive(value.length > 0);\r\n  }, []);\r\n  const toggleToastActive = useCallback(\r\n    () => setToastActive((toastActive) => !toastActive),\r\n    [],\r\n  );\r\n  const toggleUserMenuActive = useCallback(\r\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\r\n    [],\r\n  );\r\n  const toggleMobileNavigationActive = useCallback(\r\n    () =>\r\n      setMobileNavigationActive(\r\n        (mobileNavigationActive) => !mobileNavigationActive,\r\n      ),\r\n    [],\r\n  );\r\n  const toggleIsLoading = useCallback(\r\n    () => setIsLoading((isLoading) => !isLoading),\r\n    [],\r\n  );\r\n  const toggleModalActive = useCallback(\r\n    () => setModalActive((modalActive) => !modalActive),\r\n    [],\r\n  );\r\n\r\n  const toastMarkup = toastActive ? (\r\n    <Toast onDismiss={toggleToastActive} content=\"Changes saved\" />\r\n  ) : null;\r\n\r\n  const userMenuActions = [\r\n    {\r\n      items: [{content: 'Community forums'}],\r\n    },\r\n  ];\r\n\r\n  const contextualSaveBarMarkup = isDirty ? (\r\n    <ContextualSaveBar\r\n      message=\"Unsaved changes\"\r\n      saveAction={{\r\n        onAction: handleSave,\r\n      }}\r\n      discardAction={{\r\n        onAction: handleDiscard,\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const userMenuMarkup = (\r\n    <TopBar.UserMenu\r\n      actions={userMenuActions}\r\n      name=\"Dharma\"\r\n      detail={storeName}\r\n      initials=\"D\"\r\n      open={userMenuActive}\r\n      onToggle={toggleUserMenuActive}\r\n    />\r\n  );\r\n\r\n  const searchResultsMarkup = (\r\n    <Card>\r\n      <ActionList\r\n        items={[\r\n          {content: 'Shopify help center'},\r\n          {content: 'Community forums'},\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n\r\n  const searchFieldMarkup = (\r\n    <TopBar.SearchField\r\n      onChange={handleSearchFieldChange}\r\n      value={searchValue}\r\n      placeholder=\"Search\"\r\n    />\r\n  );\r\n\r\n  const topBarMarkup = (\r\n    <TopBar\r\n      showNavigationToggle\r\n      userMenu={userMenuMarkup}\r\n      searchResultsVisible={searchActive}\r\n      searchField={searchFieldMarkup}\r\n      searchResults={searchResultsMarkup}\r\n      onSearchResultsDismiss={handleSearchResultsDismiss}\r\n      onNavigationToggle={toggleMobileNavigationActive}\r\n    />\r\n  );\r\n\r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n      <Navigation.Section\r\n        items={[\r\n          {\r\n            label: 'Back to Shopify',\r\n            icon: ArrowLeftMinor,\r\n          },\r\n        ]}\r\n      />\r\n      <Navigation.Section\r\n        separator\r\n        title=\"Jaded Pixel App\"\r\n        items={[\r\n          {\r\n            label: 'Dashboard',\r\n            icon: HomeMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Jaded Pixel Orders',\r\n            icon: OrdersMajorTwotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n        ]}\r\n        action={{\r\n          icon: ConversationMinor,\r\n          accessibilityLabel: 'Contact support',\r\n          onClick: toggleModalActive,\r\n        }}\r\n      />\r\n    </Navigation>\r\n  );\r\n\r\n  const loadingMarkup = isLoading ? <Loading /> : null;\r\n\r\n  const skipToContentTarget = (\r\n    <a id=\"SkipToContentTarget\" ref={skipToContentRef} tabIndex={-1} />\r\n  );\r\n\r\n  const actualPageMarkup = (\r\n    <Page title=\"Account\">\r\n      <Layout>\r\n        {skipToContentTarget}\r\n        <Layout.AnnotatedSection\r\n          title=\"Account details\"\r\n          description=\"Jaded Pixel will use this as your account information.\"\r\n        >\r\n          <Card sectioned>\r\n            <FormLayout>\r\n              <TextField\r\n                label=\"Full name\"\r\n                value={nameFieldValue}\r\n                onChange={handleNameFieldChange}\r\n              />\r\n              <TextField\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                value={emailFieldValue}\r\n                onChange={handleEmailFieldChange}\r\n              />\r\n            </FormLayout>\r\n          </Card>\r\n        </Layout.AnnotatedSection>\r\n      </Layout>\r\n    </Page>\r\n  );\r\n\r\n  const loadingPageMarkup = (\r\n    <SkeletonPage>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card sectioned>\r\n            <TextContainer>\r\n              <SkeletonDisplayText size=\"small\" />\r\n              <SkeletonBodyText lines={9} />\r\n            </TextContainer>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </SkeletonPage>\r\n  );\r\n\r\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\r\n\r\n  const modalMarkup = (\r\n    <Modal\r\n      open={modalActive}\r\n      onClose={toggleModalActive}\r\n      title=\"Contact support\"\r\n      primaryAction={{\r\n        content: 'Send',\r\n        onAction: toggleModalActive,\r\n      }}\r\n    >\r\n      <Modal.Section>\r\n        <FormLayout>\r\n          <TextField\r\n            label=\"Subject\"\r\n            value={supportSubject}\r\n            onChange={handleSubjectChange}\r\n          />\r\n          <TextField\r\n            label=\"Message\"\r\n            value={supportMessage}\r\n            onChange={handleMessageChange}\r\n            multiline\r\n          />\r\n        </FormLayout>\r\n      </Modal.Section>\r\n    </Modal>\r\n  );\r\n\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#357997',\r\n      },\r\n    },\r\n    logo: {\r\n      width: 124,\r\n      topBarSource:\r\n        'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999',\r\n      contextualSaveBarSource:\r\n        'https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999',\r\n      url: 'http://jadedpixel.com',\r\n      accessibilityLabel: 'Jaded Pixel',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '500px'}}>\r\n      <AppProvider\r\n        theme={theme}\r\n        i18n={{\r\n          Polaris: {\r\n            Avatar: {\r\n              label: 'Avatar',\r\n              labelWithInitials: 'Avatar with initials {initials}',\r\n            },\r\n            ContextualSaveBar: {\r\n              save: 'Save',\r\n              discard: 'Discard',\r\n            },\r\n            TextField: {\r\n              characterCount: '{count} characters',\r\n            },\r\n            TopBar: {\r\n              toggleMenuLabel: 'Toggle menu',\r\n\r\n              SearchField: {\r\n                clearButtonLabel: 'Clear',\r\n                search: 'Search',\r\n              },\r\n            },\r\n            Modal: {\r\n              iFrameTitle: 'body markup',\r\n            },\r\n            Frame: {\r\n              skipToContent: 'Skip to content',\r\n              Navigation: {\r\n                closeMobileNavigationLabel: 'Close navigation',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Frame\r\n          topBar={topBarMarkup}\r\n          navigation={navigationMarkup}\r\n          showMobileNavigation={mobileNavigationActive}\r\n          onNavigationDismiss={toggleMobileNavigationActive}\r\n          skipToContentTarget={skipToContentRef.current}\r\n        >\r\n          {contextualSaveBarMarkup}\r\n          {loadingMarkup}\r\n          {pageMarkup}\r\n          {toastMarkup}\r\n          {modalMarkup}\r\n        </Frame>\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\n class Index extends React.Component {\r\n\r\n \r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n      \r\n      <Card sectioned title=\"ashboard\">\r\n          <p>\r\n            Home\r\n          </p>\r\n      </Card>\r\n      <Page>\r\n\r\n<Card>\r\n<Card.Section title=\"Quickstart\">\r\n  <br/>\r\n<Stack distribution=\"equalSpacing\">\r\n  <p>Create an attribute</p>  \r\n  \r\n  <Button primary onClick={ac}>Start Task</Button>\r\n       \r\n  </Stack>\r\n</Card.Section>\r\n</Card>\r\n\r\n\r\n      \r\n<Card>\r\n<Card.Section title=\"Application Stats\">\r\n\r\n<Stack distribution=\"equalSpacing\">\r\n\r\n<Card.Section> \r\n  <p>Total Customers</p>\r\n  <p>0</p>\r\n  </Card.Section>\r\n  \r\n  <Card.Section>\r\n  <p>Total Orders</p>\r\n  <p>0</p>\r\n  </Card.Section>\r\n\r\n  <Card.Section>\r\n  <p>Total Attributes</p>\r\n  <p>0</p>\r\n  </Card.Section>\r\n\r\n</Stack>\r\n\r\n</Card.Section>\r\n</Card>\r\n</Page>\r\n</>\r\n\r\n    );  \r\n  }\r\n}\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}