{"ast":null,"code":"var __jsx = React.createElement;\nimport 'react-dropdown/style.css';\nimport React, { useCallback, useState, useRef } from \"react\";\nimport { Card, DataTable, Link, Layout, Page, Stack, AppProvider, ActionList, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Heading } from \"@shopify/polaris\";\nimport { NoteMajorMonotone, HomeMajorMonotone, MobileHamburgerMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\n\nfunction Customers() {\n  const {\n    0: valueDateS,\n    1: setValueDateS\n  } = useState('');\n  const handleChangeDateS = useCallback(newValueDateS => setValueDateS(newValueDateS), []);\n  const {\n    0: valueDateE,\n    1: setValueDateE\n  } = useState('');\n  const handleChangeDateE = useCallback(newValueDateE => setValueDateE(newValueDateE), []);\n  const {\n    0: valueMail,\n    1: setValueMail\n  } = useState('');\n  const handleChangeMail = useCallback(newValueMail => setValueMail(newValueMail), []);\n  const {\n    0: valueCN,\n    1: setValueCN\n  } = useState('');\n  const handleChangeCN = useCallback(newValueCN => setValueCN(newValueCN), []);\n  const {\n    0: valueCompany,\n    1: setValueCompany\n  } = useState('');\n  const handleChangeCompany = useCallback(newValueCompany => setValueCompany(newValueCompany), []);\n  const rows = [['', '', '', NoteMajorMonotone]];\n  {\n    /*navbar */\n  }\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Customers\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(\"p\", null, \"Customers\"))), __jsx(Page, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n    label: \"Created Date\",\n    type: \"date\",\n    id: \"dateCustomersInicial\",\n    defaultValue: \"DD-MM-YYYY\",\n    value: valueDateS,\n    onChange: handleChangeDateS\n  }), __jsx(TextField, {\n    label: \"To\",\n    type: \"date\",\n    id: \"dateCustomersFinal\",\n    defaultValue: \"DD-MM-YYYY\",\n    value: valueDateE,\n    onChange: handleChangeDateE\n  }), __jsx(TextField, {\n    label: \"Email\",\n    value: valueMail,\n    type: \"email\",\n    onChange: handleChangeMail\n  }), __jsx(TextField, {\n    label: \"Customer Name\",\n    value: valueCN,\n    onChange: handleChangeCN\n  }), __jsx(TextField, {\n    label: \"Company\",\n    value: valueCompany,\n    onChange: handleChangeCompany\n  })))), __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text', 'date', 'numeric', 'numeric', 'text', 'text'],\n    headings: ['Name', 'Email', 'Date', 'Orders Count', 'Total Spent', 'Action', 'Company'],\n    rows: rows\n  }))));\n}\n\nexport default Customers;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Customers.js"],"names":["React","useCallback","useState","useRef","Card","DataTable","Link","Layout","Page","Stack","AppProvider","ActionList","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Heading","NoteMajorMonotone","HomeMajorMonotone","MobileHamburgerMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Customers","valueDateS","setValueDateS","handleChangeDateS","newValueDateS","valueDateE","setValueDateE","handleChangeDateE","newValueDateE","valueMail","setValueMail","handleChangeMail","newValueMail","valueCN","setValueCN","handleChangeCN","newValueCN","valueCompany","setValueCompany","handleChangeCompany","newValueCompany","rows"],"mappings":"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","sourcesContent":["import 'react-dropdown/style.css';\r\nimport React, {useCallback, useState, useRef} from \"react\";\r\nimport {Card, DataTable ,Link,Layout,Page, Stack, AppProvider,ActionList,  ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Heading} from \"@shopify/polaris\";\r\nimport {NoteMajorMonotone, HomeMajorMonotone, MobileHamburgerMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\n\r\n\r\nfunction Customers() {\r\n \r\n  const [valueDateS, setValueDateS] = useState('');\r\n  const handleChangeDateS = useCallback((newValueDateS) => setValueDateS(newValueDateS), []);\r\n\r\n  const [valueDateE, setValueDateE] = useState('');\r\n  const handleChangeDateE = useCallback((newValueDateE) => setValueDateE(newValueDateE), []);\r\n\r\n  const [valueMail, setValueMail] = useState('');\r\n  const handleChangeMail = useCallback((newValueMail) => setValueMail(newValueMail),[],);\r\n\r\n  const [valueCN, setValueCN] = useState('');\r\n  const handleChangeCN = useCallback((newValueCN) => setValueCN(newValueCN), []);\r\n\r\n  const [valueCompany, setValueCompany] = useState('');\r\n  const handleChangeCompany = useCallback((newValueCompany) => setValueCompany(newValueCompany), []);\r\n\r\n\r\nconst rows = [\r\n  ['', '', '', NoteMajorMonotone, ],\r\n];\r\n\r\n  {/*navbar */}\r\n\r\nreturn(\r\n<>\r\n  <Card sectioned title=\"Customers\">\r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>           \r\n        <p>Customers</p>\r\n    </Stack>        \r\n  </Card>\r\n\r\n<Page>\r\n  <Card sectioned>\r\n    <FormLayout>\r\n      <FormLayout.Group >\r\n                \r\n                <TextField \r\n                  label=\"Created Date\" \r\n                  type=\"date\" \r\n                  id=\"dateCustomersInicial\"\r\n                  defaultValue=\"DD-MM-YYYY\"\r\n                  value={valueDateS}\r\n                  onChange={handleChangeDateS}/>\r\n\r\n                <TextField \r\n                  label=\"To\"\r\n                  type=\"date\" \r\n                  id=\"dateCustomersFinal\"\r\n                  defaultValue=\"DD-MM-YYYY\"\r\n                  value={valueDateE}\r\n                  onChange={handleChangeDateE}/>\r\n\r\n                <TextField \r\n                  label=\"Email\" \r\n                  value={valueMail}\r\n                  type=\"email\"\r\n                  onChange={handleChangeMail}/>\r\n\r\n                <TextField \r\n                  label=\"Customer Name\" \r\n                  value={valueCN}\r\n                  onChange={handleChangeCN}/>\r\n\r\n                <TextField label=\"Company\" \r\n                   value={valueCompany}\r\n                   onChange={handleChangeCompany}/>\r\n      </FormLayout.Group>\r\n    </FormLayout>  \r\n  </Card>\r\n      \r\n  <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n            'text',\r\n            'text',\r\n            'date',\r\n            'numeric',\r\n            'numeric',\r\n            'text',\r\n            'text',\r\n          ]}\r\n          headings={[\r\n            'Name',\r\n            'Email',\r\n            'Date',\r\n            'Orders Count',\r\n            'Total Spent',\r\n            'Action',\r\n            'Company',\r\n          ]}\r\n          rows={rows}/>\r\n  </Card>\r\n</Page>\r\n</>\r\n)\r\n}\r\n\r\nexport default Customers"]},"metadata":{},"sourceType":"module"}