{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport { Card, Button, Link, EmptyState, Layout, Page, Stack, Frame, AppProvider, ActionList, Avatar, ContextualSaveBar, FormLayout, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Icon } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { TitleBar } from '@shopify/app-bridge-react';\nimport { CustomersMajorMonotone, CheckoutMajorMonotone, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport actualPageMarkup from './navbar.js';\nexport default function Index() {\n  _s();\n\n  var _useState = useState(['hidden']),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n  var skipToContentRef = useRef(null);\n\n  var _useState2 = useState(false),\n      toastActive = _useState2[0],\n      setToastActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useState4 = useState(false),\n      isDirty = _useState4[0],\n      setIsDirty = _useState4[1];\n\n  var _useState5 = useState(false),\n      searchActive = _useState5[0],\n      setSearchActive = _useState5[1];\n\n  var _useState6 = useState(''),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      userMenuActive = _useState7[0],\n      setUserMenuActive = _useState7[1];\n\n  var _useState8 = useState(false),\n      mobileNavigationActive = _useState8[0],\n      setMobileNavigationActive = _useState8[1];\n\n  var _useState9 = useState(false),\n      modalActive = _useState9[0],\n      setModalActive = _useState9[1];\n\n  var _useState10 = useState(),\n      nameFieldValue = _useState10[0],\n      setNameFieldValue = _useState10[1];\n\n  var _useState11 = useState(),\n      emailFieldValue = _useState11[0],\n      setEmailFieldValue = _useState11[1];\n\n  var _useState12 = useState(),\n      storeName = _useState12[0],\n      setStoreName = _useState12[1];\n\n  var _useState13 = useState(''),\n      supportSubject = _useState13[0],\n      setSupportSubject = _useState13[1];\n\n  var _useState14 = useState(''),\n      supportMessage = _useState14[0],\n      setSupportMessage = _useState14[1];\n\n  var handleSubjectChange = useCallback(function (value) {\n    return setSupportSubject(value);\n  }, []);\n  var handleMessageChange = useCallback(function (value) {\n    return setSupportMessage(value);\n  }, []);\n  var handleDiscard = useCallback(function () {\n    setEmailFieldValue(defaultState.current.emailFieldValue);\n    setNameFieldValue(defaultState.current.nameFieldValue);\n    setIsDirty(false);\n  }, []);\n  var handleSave = useCallback(function () {\n    defaultState.current.nameFieldValue = nameFieldValue;\n    defaultState.current.emailFieldValue = emailFieldValue;\n    setIsDirty(false);\n    setToastActive(true);\n    setStoreName(defaultState.current.nameFieldValue);\n  }, [emailFieldValue, nameFieldValue]);\n  var handleNameFieldChange = useCallback(function (value) {\n    setNameFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  var handleEmailFieldChange = useCallback(function (value) {\n    setEmailFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  var handleSearchResultsDismiss = useCallback(function () {\n    setSearchActive(false);\n    setSearchValue('');\n  }, []);\n  var handleSearchFieldChange = useCallback(function (value) {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n  var toggleToastActive = useCallback(function () {\n    return setToastActive(function (toastActive) {\n      return !toastActive;\n    });\n  }, []);\n  var toggleUserMenuActive = useCallback(function () {\n    return setUserMenuActive(function (userMenuActive) {\n      return !userMenuActive;\n    });\n  }, []);\n  var toggleMobileNavigationActive = useCallback(function () {\n    return setMobileNavigationActive(function (mobileNavigationActive) {\n      return !mobileNavigationActive;\n    });\n  }, []);\n  var toggleIsLoading = useCallback(function () {\n    return setIsLoading(function (isLoading) {\n      return !isLoading;\n    });\n  }, []);\n  var toggleModalActive = useCallback(function () {\n    return setModalActive(function (modalActive) {\n      return !modalActive;\n    });\n  }, []);\n  var toastMarkup = toastActive ? __jsx(Toast, {\n    onDismiss: toggleToastActive,\n    content: \"Changes saved\"\n  }) : null;\n  var userMenuActions = [{\n    items: [{\n      content: 'Community forums'\n    }]\n  }];\n  var contextualSaveBarMarkup = isDirty ? __jsx(ContextualSaveBar, {\n    message: \"Unsaved changes\",\n    saveAction: {\n      onAction: handleSave\n    },\n    discardAction: {\n      onAction: handleDiscard\n    }\n  }) : null;\n\n  var topBarMarkup = __jsx(TopBar, {\n    showNavigationToggle: true,\n    searchResultsVisible: searchActive,\n    onSearchResultsDismiss: handleSearchResultsDismiss,\n    onNavigationToggle: toggleMobileNavigationActive\n  });\n\n  var navigationMarkup = __jsx(Navigation, {\n    location: \"/\"\n  }, __jsx(Navigation.Section, {\n    separator: true,\n    title: \"Dashboard\",\n    items: [{\n      url: './Index',\n      label: 'Dashboard',\n      icon: HomeMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      url: './componenteslist',\n      label: 'Attributes',\n      icon: MobileHamburgerMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      url: './AttributesTemplates',\n      label: 'Attribute Templates',\n      icon: BankMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Theme Installer',\n      icon: TroubleshootMajorMonotone,\n      onClick: toggleIsLoading\n    }]\n  }));\n\n  var loadingMarkup = isLoading ? __jsx(Loading, null) : null;\n\n  var skipToContentTarget = __jsx(\"a\", {\n    id: \"SkipToContentTarget\",\n    ref: skipToContentRef,\n    tabIndex: -1\n  });\n\n  var actualPageMarkup = __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Dashboard\"\n  }, __jsx(\"p\", null, \" Home\")), __jsx(Page, null, __jsx(TitleBar, {\n    title: \"Customer\"\n  }), __jsx(Card, null, __jsx(Card.Section, {\n    title: \"Quickstart\"\n  }, __jsx(\"br\", null), __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(\"p\", null, \"Create an attribute\"), __jsx(Link, {\n    url: \"/AttributeCreation\"\n  }, __jsx(Button, {\n    primary: true\n  }, \"Start Task\"))))), __jsx(Card, null, __jsx(Card.Section, {\n    title: \"Application Stats\"\n  }, __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(Card.Section, null, __jsx(Link, {\n    url: \"/Customers\"\n  }, __jsx(\"button\", {\n    \"bg-warning\": true,\n    style: {\n      width: '425px',\n      height: '100px'\n    }\n  }, __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(Icon, {\n    source: CustomersMajorMonotone\n  }), __jsx(\"p\", null, \"Total Customers\"), __jsx(\"p\", null, \"0\"))))), __jsx(Card.Section, null, __jsx(Link, {\n    url: \"/Orders\"\n  }, __jsx(Button, {\n    size: \"large\"\n  }, __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(Icon, {\n    source: CheckoutMajorMonotone\n  }), __jsx(\"p\", null, \"Total Orders\"), __jsx(\"p\", null, \"0\"))))), __jsx(Card.Section, null, __jsx(Link, {\n    url: \"/componenteslist\"\n  }, __jsx(Button, {\n    size: \"large\"\n  }, __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(Icon, {\n    source: ListMajorMonotone\n  }), __jsx(\"p\", null, \"Total Attributes\"), __jsx(\"p\", null, \"0\"))))))))), __jsx(\"br\", null));\n\n  var loadingPageMarkup = __jsx(SkeletonPage, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextContainer, null, __jsx(SkeletonDisplayText, {\n    size: \"small\"\n  }), __jsx(SkeletonBodyText, {\n    lines: 9\n  }))))));\n\n  var pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  var modalMarkup = __jsx(Modal, {\n    open: modalActive,\n    onClose: toggleModalActive,\n    title: \"Contact support\",\n    primaryAction: {\n      content: 'Send',\n      onAction: toggleModalActive\n    }\n  }, __jsx(Modal.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Subject\",\n    value: supportSubject,\n    onChange: handleSubjectChange\n  }), __jsx(TextField, {\n    label: \"Message\",\n    value: supportMessage,\n    onChange: handleMessageChange,\n    multiline: true\n  }))));\n\n  var theme = {\n    colors: {\n      topBar: {\n        background: '#fff'\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(AppProvider, {\n    theme: theme,\n    i18n: {\n      Polaris: {\n        Avatar: {\n          label: 'Avatar',\n          labelWithInitials: 'Avatar with initials {initials}'\n        },\n        ContextualSaveBar: {\n          save: 'Save',\n          discard: 'Discard'\n        },\n        TextField: {\n          characterCount: '{count} characters'\n        },\n        TopBar: {\n          toggleMenuLabel: 'Toggle menu',\n          SearchField: {\n            clearButtonLabel: 'Clear',\n            search: 'Search'\n          }\n        },\n        Modal: {\n          iFrameTitle: 'body markup'\n        },\n        Frame: {\n          skipToContent: 'Skip to content',\n          Navigation: {\n            closeMobileNavigationLabel: 'Close navigation'\n          }\n        }\n      }\n    }\n  }, __jsx(Frame, {\n    topBar: topBarMarkup,\n    navigation: navigationMarkup,\n    showMobileNavigation: mobileNavigationActive,\n    onNavigationDismiss: toggleMobileNavigationActive,\n    skipToContentTarget: skipToContentRef.current\n  }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n}\n\n_s(Index, \"RGdiymUT1R2+tDwCkCqw2K0hthU=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Index.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","Button","Link","EmptyState","Layout","Page","Stack","Frame","AppProvider","ActionList","Avatar","ContextualSaveBar","FormLayout","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Icon","Redirect","TitleBar","CustomersMajorMonotone","CheckoutMajorMonotone","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","actualPageMarkup","Index","selected","setSelected","handleChange","value","skipToContentRef","toastActive","setToastActive","isLoading","setIsLoading","isDirty","setIsDirty","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","modalActive","setModalActive","nameFieldValue","setNameFieldValue","emailFieldValue","setEmailFieldValue","storeName","setStoreName","supportSubject","setSupportSubject","supportMessage","setSupportMessage","handleSubjectChange","handleMessageChange","handleDiscard","defaultState","current","handleSave","handleNameFieldChange","handleEmailFieldChange","handleSearchResultsDismiss","handleSearchFieldChange","length","toggleToastActive","toggleUserMenuActive","toggleMobileNavigationActive","toggleIsLoading","toggleModalActive","toastMarkup","userMenuActions","items","content","contextualSaveBarMarkup","onAction","topBarMarkup","navigationMarkup","url","label","icon","onClick","loadingMarkup","skipToContentTarget","width","height","loadingPageMarkup","pageMarkup","modalMarkup","theme","colors","topBar","background","Polaris","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAuBC,IAAvB,EAA4BC,UAA5B,EAAwCC,MAAxC,EAA+CC,IAA/C,EAAqDC,KAArD,EAA4DC,KAA5D,EAAkEC,WAAlE,EAA8EC,UAA9E,EAA2FC,MAA3F,EAAmGC,iBAAnG,EAAsHC,UAAtH,EAAkIC,OAAlI,EAA0IC,KAA1I,EAAiJC,UAAjJ,EAA6JC,gBAA7J,EAA+KC,mBAA/K,EAAoMC,YAApM,EAAkNC,aAAlN,EAAiOC,SAAjO,EAA4OC,KAA5O,EAAmPC,MAAnP,EAA2PC,IAA3P,QAAsQ,kBAAtQ;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAAQC,sBAAR,EAAgCC,qBAAhC,EAAuDC,iBAAvD,EAA0EC,iBAA1E,EAA6FC,kBAA7F,EAAiHC,4BAAjH,EAA+IC,iBAA/I,EAAkKC,iBAAlK,EAAoLC,yBAApL,EAA8MC,qBAA9M,QAA0O,wBAA1O;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AAKA,eAAe,SAAUC,KAAV,GAAmB;AAAA;;AAAA,kBAKAvC,QAAQ,CAAC,CAAC,QAAD,CAAD,CALR;AAAA,MAKzBwC,QALyB;AAAA,MAKfC,WALe;;AAOhC,MAAMC,YAAY,GAAG3C,WAAW,CAAC,UAAC4C,KAAD;AAAA,WAAWF,WAAW,CAACE,KAAD,CAAtB;AAAA,GAAD,EAAgC,EAAhC,CAAhC;AAGA,MAAMC,gBAAgB,GAAG3C,MAAM,CAAC,IAAD,CAA/B;;AAVgC,mBAYMD,QAAQ,CAAC,KAAD,CAZd;AAAA,MAYzB6C,WAZyB;AAAA,MAYZC,cAZY;;AAAA,mBAaE9C,QAAQ,CAAC,KAAD,CAbV;AAAA,MAazB+C,SAbyB;AAAA,MAadC,YAbc;;AAAA,mBAcFhD,QAAQ,CAAC,KAAD,CAdN;AAAA,MAczBiD,OAdyB;AAAA,MAchBC,UAdgB;;AAAA,mBAeQlD,QAAQ,CAAC,KAAD,CAfhB;AAAA,MAezBmD,YAfyB;AAAA,MAeXC,eAfW;;AAAA,mBAgBMpD,QAAQ,CAAC,EAAD,CAhBd;AAAA,MAgBzBqD,WAhByB;AAAA,MAgBZC,cAhBY;;AAAA,mBAiBYtD,QAAQ,CAAC,KAAD,CAjBpB;AAAA,MAiBzBuD,cAjByB;AAAA,MAiBTC,iBAjBS;;AAAA,mBAkB4BxD,QAAQ,CAAC,KAAD,CAlBpC;AAAA,MAkBzByD,sBAlByB;AAAA,MAkBDC,yBAlBC;;AAAA,mBAmBM1D,QAAQ,CAAC,KAAD,CAnBd;AAAA,MAmBzB2D,WAnByB;AAAA,MAmBZC,cAnBY;;AAAA,oBAoBY5D,QAAQ,EApBpB;AAAA,MAoBzB6D,cApByB;AAAA,MAoBTC,iBApBS;;AAAA,oBAsBc9D,QAAQ,EAtBtB;AAAA,MAsBzB+D,eAtByB;AAAA,MAsBRC,kBAtBQ;;AAAA,oBAwBEhE,QAAQ,EAxBV;AAAA,MAwBzBiE,SAxByB;AAAA,MAwBdC,YAxBc;;AAAA,oBA0BYlE,QAAQ,CAAC,EAAD,CA1BpB;AAAA,MA0BzBmE,cA1ByB;AAAA,MA0BTC,iBA1BS;;AAAA,oBA2BYpE,QAAQ,CAAC,EAAD,CA3BpB;AAAA,MA2BzBqE,cA3ByB;AAAA,MA2BTC,iBA3BS;;AA6BhC,MAAMC,mBAAmB,GAAGxE,WAAW,CACrC,UAAC4C,KAAD;AAAA,WAAWyB,iBAAiB,CAACzB,KAAD,CAA5B;AAAA,GADqC,EAErC,EAFqC,CAAvC;AAIA,MAAM6B,mBAAmB,GAAGzE,WAAW,CACrC,UAAC4C,KAAD;AAAA,WAAW2B,iBAAiB,CAAC3B,KAAD,CAA5B;AAAA,GADqC,EAErC,EAFqC,CAAvC;AAIA,MAAM8B,aAAa,GAAG1E,WAAW,CAAC,YAAM;AACtCiE,IAAAA,kBAAkB,CAACU,YAAY,CAACC,OAAb,CAAqBZ,eAAtB,CAAlB;AACAD,IAAAA,iBAAiB,CAACY,YAAY,CAACC,OAAb,CAAqBd,cAAtB,CAAjB;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJgC,EAI9B,EAJ8B,CAAjC;AAKA,MAAM0B,UAAU,GAAG7E,WAAW,CAAC,YAAM;AACnC2E,IAAAA,YAAY,CAACC,OAAb,CAAqBd,cAArB,GAAsCA,cAAtC;AACAa,IAAAA,YAAY,CAACC,OAAb,CAAqBZ,eAArB,GAAuCA,eAAvC;AAEAb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAoB,IAAAA,YAAY,CAACQ,YAAY,CAACC,OAAb,CAAqBd,cAAtB,CAAZ;AACD,GAP6B,EAO3B,CAACE,eAAD,EAAkBF,cAAlB,CAP2B,CAA9B;AAQA,MAAMgB,qBAAqB,GAAG9E,WAAW,CAAC,UAAC4C,KAAD,EAAW;AACnDmB,IAAAA,iBAAiB,CAACnB,KAAD,CAAjB;AACAA,IAAAA,KAAK,IAAIO,UAAU,CAAC,IAAD,CAAnB;AACD,GAHwC,EAGtC,EAHsC,CAAzC;AAIA,MAAM4B,sBAAsB,GAAG/E,WAAW,CAAC,UAAC4C,KAAD,EAAW;AACpDqB,IAAAA,kBAAkB,CAACrB,KAAD,CAAlB;AACAA,IAAAA,KAAK,IAAIO,UAAU,CAAC,IAAD,CAAnB;AACD,GAHyC,EAGvC,EAHuC,CAA1C;AAIA,MAAM6B,0BAA0B,GAAGhF,WAAW,CAAC,YAAM;AACnDqD,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAH6C,EAG3C,EAH2C,CAA9C;AAIA,MAAM0B,uBAAuB,GAAGjF,WAAW,CAAC,UAAC4C,KAAD,EAAW;AACrDW,IAAAA,cAAc,CAACX,KAAD,CAAd;AACAS,IAAAA,eAAe,CAACT,KAAK,CAACsC,MAAN,GAAe,CAAhB,CAAf;AACD,GAH0C,EAGxC,EAHwC,CAA3C;AAIA,MAAMC,iBAAiB,GAAGnF,WAAW,CACnC;AAAA,WAAM+C,cAAc,CAAC,UAACD,WAAD;AAAA,aAAiB,CAACA,WAAlB;AAAA,KAAD,CAApB;AAAA,GADmC,EAEnC,EAFmC,CAArC;AAIA,MAAMsC,oBAAoB,GAAGpF,WAAW,CACtC;AAAA,WAAMyD,iBAAiB,CAAC,UAACD,cAAD;AAAA,aAAoB,CAACA,cAArB;AAAA,KAAD,CAAvB;AAAA,GADsC,EAEtC,EAFsC,CAAxC;AAIA,MAAM6B,4BAA4B,GAAGrF,WAAW,CAC9C;AAAA,WACE2D,yBAAyB,CACvB,UAACD,sBAAD;AAAA,aAA4B,CAACA,sBAA7B;AAAA,KADuB,CAD3B;AAAA,GAD8C,EAK9C,EAL8C,CAAhD;AAOA,MAAM4B,eAAe,GAAGtF,WAAW,CACjC;AAAA,WAAMiD,YAAY,CAAC,UAACD,SAAD;AAAA,aAAe,CAACA,SAAhB;AAAA,KAAD,CAAlB;AAAA,GADiC,EAEjC,EAFiC,CAAnC;AAIA,MAAMuC,iBAAiB,GAAGvF,WAAW,CACnC;AAAA,WAAM6D,cAAc,CAAC,UAACD,WAAD;AAAA,aAAiB,CAACA,WAAlB;AAAA,KAAD,CAApB;AAAA,GADmC,EAEnC,EAFmC,CAArC;AAKA,MAAM4B,WAAW,GAAG1C,WAAW,GAC7B,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEqC,iBAAlB;AAAqC,IAAA,OAAO,EAAC;AAA7C,IAD6B,GAE3B,IAFJ;AAIA,MAAMM,eAAe,GAAG,CACtB;AACEC,IAAAA,KAAK,EAAE,CAAC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAD;AADT,GADsB,CAAxB;AAOA,MAAMC,uBAAuB,GAAG1C,OAAO,GACrC,MAAC,iBAAD;AACE,IAAA,OAAO,EAAC,iBADV;AAEE,IAAA,UAAU,EAAE;AACV2C,MAAAA,QAAQ,EAAEhB;AADA,KAFd;AAKE,IAAA,aAAa,EAAE;AACbgB,MAAAA,QAAQ,EAAEnB;AADG;AALjB,IADqC,GAUnC,IAVJ;;AAiBA,MAAMoB,YAAY,GAChB,MAAC,MAAD;AACE,IAAA,oBAAoB,MADtB;AAEE,IAAA,oBAAoB,EAAE1C,YAFxB;AAGE,IAAA,sBAAsB,EAAE4B,0BAH1B;AAIE,IAAA,kBAAkB,EAAEK;AAJtB,IADF;;AAUA,MAAMU,gBAAgB,GACpB,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAC;AAArB,KAEE,MAAC,UAAD,CAAY,OAAZ;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,KAAK,EAAE,CAEL;AACEC,MAAAA,GAAG,EAAE,SADP;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,IAAI,EAAElE,iBAHR;AAIEmE,MAAAA,OAAO,EAAEb;AAJX,KAFK,EAQL;AACEU,MAAAA,GAAG,EAAE,mBADP;AAEEC,MAAAA,KAAK,EAAE,YAFT;AAGEC,MAAAA,IAAI,EAAEhE,4BAHR;AAIEiE,MAAAA,OAAO,EAAEb;AAJX,KARK,EAcL;AACEU,MAAAA,GAAG,EAAE,uBADP;AAEEC,MAAAA,KAAK,EAAE,qBAFT;AAGEC,MAAAA,IAAI,EAAE9D,iBAHR;AAIE+D,MAAAA,OAAO,EAAEb;AAJX,KAdK,EAoBL;AACEW,MAAAA,KAAK,EAAE,iBADT;AAEEC,MAAAA,IAAI,EAAE7D,yBAFR;AAGE8D,MAAAA,OAAO,EAAEb;AAHX,KApBK;AAHT,IAFF,CADF;;AAqCA,MAAMc,aAAa,GAAGpD,SAAS,GAAG,MAAC,OAAD,OAAH,GAAiB,IAAhD;;AAEA,MAAMqD,mBAAmB,GACvB;AAAG,IAAA,EAAE,EAAC,qBAAN;AAA4B,IAAA,GAAG,EAAExD,gBAAjC;AAAmD,IAAA,QAAQ,EAAE,CAAC;AAA9D,IADF;;AAIA,MAAMN,gBAAgB,GAExB,4BAEI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACE,yBADF,CAFJ,EAOI,MAAC,IAAD,QACA,MAAC,QAAD;AACE,IAAA,KAAK,EAAC;AADR,IADA,EAIE,MAAC,IAAD,QACM,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC;AAApB,KACA,iBADA,EAEE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACE,uCADF,EAEI,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO;AAAf,kBADF,CAFJ,CAFF,CADN,CAJF,EAgBI,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC;AAApB,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACE,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,KACE;AAAQ,sBAAR;AAAmB,IAAA,KAAK,EAAE;AAAC+D,MAAAA,KAAK,EAAC,OAAP;AAAgBC,MAAAA,MAAM,EAAC;AAAvB;AAA1B,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAE1E;AAAd,IADF,EAEE,mCAFF,EAGE,qBAHF,CADF,CADF,CADF,CADF,EAaF,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,KACE,MAAC,MAAD;AAAS,IAAA,IAAI,EAAC;AAAd,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEC;AAAd,IADF,EAEI,gCAFJ,EAGI,qBAHJ,CADF,CADF,CADF,CAbE,EAyBF,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEK;AAAd,IADF,EAEI,oCAFJ,EAGI,qBAHJ,CADF,CADF,CADF,CAzBE,CADF,CADF,CAhBJ,CAPJ,EAiEA,iBAjEA,CAFE;;AAwEA,MAAMqE,iBAAiB,GACrB,MAAC,YAAD,QACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD;AAAM,IAAA,SAAS;AAAf,KACE,MAAC,aAAD,QACE,MAAC,mBAAD;AAAqB,IAAA,IAAI,EAAC;AAA1B,IADF,EAEE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAzB,IAFF,CADF,CADF,CADF,CADF,CADF;;AAeA,MAAMC,UAAU,GAAGzD,SAAS,GAAGwD,iBAAH,GAAuBjE,gBAAnD;;AAEA,MAAMmE,WAAW,GACf,MAAC,KAAD;AACE,IAAA,IAAI,EAAE9C,WADR;AAEE,IAAA,OAAO,EAAE2B,iBAFX;AAGE,IAAA,KAAK,EAAC,iBAHR;AAIE,IAAA,aAAa,EAAE;AACbI,MAAAA,OAAO,EAAE,MADI;AAEbE,MAAAA,QAAQ,EAAEN;AAFG;AAJjB,KASE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,UAAD,QACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,KAAK,EAAEnB,cAFT;AAGE,IAAA,QAAQ,EAAEI;AAHZ,IADF,EAME,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,KAAK,EAAEF,cAFT;AAGE,IAAA,QAAQ,EAAEG,mBAHZ;AAIE,IAAA,SAAS;AAJX,IANF,CADF,CATF,CADF;;AA4BA,MAAMkC,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE;AADN;AADF;AADI,GAAd;AAQA,SACE;AAAK,IAAA,KAAK,EAAE;AAACP,MAAAA,MAAM,EAAE;AAAT;AAAZ,KACE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEI,KADT;AAEE,IAAA,IAAI,EAAE;AACJI,MAAAA,OAAO,EAAE;AACPlG,QAAAA,MAAM,EAAE;AACNoF,UAAAA,KAAK,EAAE,QADD;AAENe,UAAAA,iBAAiB,EAAE;AAFb,SADD;AAKPlG,QAAAA,iBAAiB,EAAE;AACjBmG,UAAAA,IAAI,EAAE,MADW;AAEjBC,UAAAA,OAAO,EAAE;AAFQ,SALZ;AASP3F,QAAAA,SAAS,EAAE;AACT4F,UAAAA,cAAc,EAAE;AADP,SATJ;AAYP1F,QAAAA,MAAM,EAAE;AACN2F,UAAAA,eAAe,EAAE,aADX;AAGNC,UAAAA,WAAW,EAAE;AACXC,YAAAA,gBAAgB,EAAE,OADP;AAEXC,YAAAA,MAAM,EAAE;AAFG;AAHP,SAZD;AAoBPtG,QAAAA,KAAK,EAAE;AACLuG,UAAAA,WAAW,EAAE;AADR,SApBA;AAuBP9G,QAAAA,KAAK,EAAE;AACL+G,UAAAA,aAAa,EAAE,iBADV;AAELvG,UAAAA,UAAU,EAAE;AACVwG,YAAAA,0BAA0B,EAAE;AADlB;AAFP;AAvBA;AADL;AAFR,KAmCE,MAAC,KAAD;AACE,IAAA,MAAM,EAAE5B,YADV;AAEE,IAAA,UAAU,EAAEC,gBAFd;AAGE,IAAA,oBAAoB,EAAErC,sBAHxB;AAIE,IAAA,mBAAmB,EAAE2B,4BAJvB;AAKE,IAAA,mBAAmB,EAAExC,gBAAgB,CAAC+B;AALxC,KAOGgB,uBAPH,EAQGQ,aARH,EASGK,UATH,EAUGjB,WAVH,EAWGkB,WAXH,CAnCF,CADF,CADF;AAqDD;;GA7VwBlE,K;;KAAAA,K","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport {Card, Button,  Link,EmptyState, Layout,Page, Stack, Frame,AppProvider,ActionList,  Avatar, ContextualSaveBar, FormLayout, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Icon} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { TitleBar } from '@shopify/app-bridge-react';\r\nimport {CustomersMajorMonotone, CheckoutMajorMonotone, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport actualPageMarkup from './navbar.js';\r\n\r\n\r\n\r\n\r\nexport default function  Index () {\r\n\r\n\r\n\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n\r\n  const skipToContentRef = useRef(null);\r\n\r\n  const [toastActive, setToastActive] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [userMenuActive, setUserMenuActive] = useState(false);\r\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [nameFieldValue, setNameFieldValue] = useState(\r\n  );\r\n  const [emailFieldValue, setEmailFieldValue] = useState(\r\n  );\r\n  const [storeName, setStoreName] = useState(\r\n  );\r\n  const [supportSubject, setSupportSubject] = useState('');\r\n  const [supportMessage, setSupportMessage] = useState('');\r\n\r\n  const handleSubjectChange = useCallback(\r\n    (value) => setSupportSubject(value),\r\n    [],\r\n  );\r\n  const handleMessageChange = useCallback(\r\n    (value) => setSupportMessage(value),\r\n    [],\r\n  );\r\n  const handleDiscard = useCallback(() => {\r\n    setEmailFieldValue(defaultState.current.emailFieldValue);\r\n    setNameFieldValue(defaultState.current.nameFieldValue);\r\n    setIsDirty(false);\r\n  }, []);\r\n  const handleSave = useCallback(() => {\r\n    defaultState.current.nameFieldValue = nameFieldValue;\r\n    defaultState.current.emailFieldValue = emailFieldValue;\r\n\r\n    setIsDirty(false);\r\n    setToastActive(true);\r\n    setStoreName(defaultState.current.nameFieldValue);\r\n  }, [emailFieldValue, nameFieldValue]);\r\n  const handleNameFieldChange = useCallback((value) => {\r\n    setNameFieldValue(value);\r\n    value && setIsDirty(true);\r\n  }, []);\r\n  const handleEmailFieldChange = useCallback((value) => {\r\n    setEmailFieldValue(value);\r\n    value && setIsDirty(true);\r\n  }, []);\r\n  const handleSearchResultsDismiss = useCallback(() => {\r\n    setSearchActive(false);\r\n    setSearchValue('');\r\n  }, []);\r\n  const handleSearchFieldChange = useCallback((value) => {\r\n    setSearchValue(value);\r\n    setSearchActive(value.length > 0);\r\n  }, []);\r\n  const toggleToastActive = useCallback(\r\n    () => setToastActive((toastActive) => !toastActive),\r\n    [],\r\n  );\r\n  const toggleUserMenuActive = useCallback(\r\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\r\n    [],\r\n  );\r\n  const toggleMobileNavigationActive = useCallback(\r\n    () =>\r\n      setMobileNavigationActive(\r\n        (mobileNavigationActive) => !mobileNavigationActive,\r\n      ),\r\n    [],\r\n  );\r\n  const toggleIsLoading = useCallback(\r\n    () => setIsLoading((isLoading) => !isLoading),\r\n    [],\r\n  );\r\n  const toggleModalActive = useCallback(\r\n    () => setModalActive((modalActive) => !modalActive),\r\n    [],\r\n  );\r\n\r\n  const toastMarkup = toastActive ? (\r\n    <Toast onDismiss={toggleToastActive} content=\"Changes saved\" />\r\n  ) : null;\r\n\r\n  const userMenuActions = [\r\n    {\r\n      items: [{content: 'Community forums'}],\r\n    },\r\n  ];\r\n  \r\n\r\n  const contextualSaveBarMarkup = isDirty ? (\r\n    <ContextualSaveBar\r\n      message=\"Unsaved changes\"\r\n      saveAction={{\r\n        onAction: handleSave,\r\n      }}\r\n      discardAction={{\r\n        onAction: handleDiscard,\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n\r\n \r\n\r\n\r\n\r\n  const topBarMarkup = (\r\n    <TopBar\r\n      showNavigationToggle\r\n      searchResultsVisible={searchActive}  \r\n      onSearchResultsDismiss={handleSearchResultsDismiss}\r\n      onNavigationToggle={toggleMobileNavigationActive}\r\n    />\r\n  );\r\n\r\n  \r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n     \r\n      <Navigation.Section\r\n        separator\r\n        title=\"Dashboard\"\r\n        items={[\r\n\r\n          {\r\n            url: './Index',\r\n            label: 'Dashboard',\r\n            icon: HomeMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            url: './componenteslist',\r\n            label: 'Attributes',\r\n            icon: MobileHamburgerMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            url: './AttributesTemplates',\r\n            label: 'Attribute Templates',\r\n            icon: BankMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Theme Installer',\r\n            icon: TroubleshootMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n        ]}\r\n       \r\n      />\r\n    </Navigation>\r\n  );\r\n\r\n  const loadingMarkup = isLoading ? <Loading /> : null;\r\n\r\n  const skipToContentTarget = (\r\n    <a id=\"SkipToContentTarget\" ref={skipToContentRef} tabIndex={-1} />\r\n  );\r\n\r\n  const actualPageMarkup = (\r\n\r\n<>   \r\n    {/* Encabezado de página*/}\r\n    <Card sectioned title=\"Dashboard\">\r\n      <p> Home</p>\r\n    </Card>\r\n\r\n    {/*Cuerpo de página*/}\r\n    <Page>\r\n    <TitleBar\r\n      title=\"Customer\"\r\n    />\r\n      <Card>\r\n            <Card.Section title=\"Quickstart\">\r\n            <br/>\r\n              <Stack distribution=\"equalSpacing\">\r\n                <p>Create an attribute</p>     \r\n                  <Link url='/AttributeCreation'>\r\n                    <Button primary >Start Task</Button>\r\n                  </Link>\r\n              </Stack>\r\n            </Card.Section>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Card.Section title=\"Application Stats\">\r\n            <Stack distribution=\"equalSpacing\">  \r\n              <Card.Section> \r\n                <Link url='/Customers'>\r\n                  <button bg-warning style={{width:'425px', height:'100px'}} >  \r\n                    <Stack distribution=\"equalSpacing\">\r\n                      <Icon source={CustomersMajorMonotone} />\r\n                      <p>Total Customers</p>\r\n                      <p>0</p>\r\n                    </Stack>\r\n                  </button>\r\n                </Link>\r\n              </Card.Section>\r\n      \r\n          <Card.Section> \r\n            <Link url='/Orders'>\r\n              <Button  size=\"large\">\r\n                <Stack distribution=\"equalSpacing\">\r\n                  <Icon source={CheckoutMajorMonotone} />\r\n                    <p>Total Orders</p>\r\n                    <p>0</p>\r\n                </Stack>\r\n              </Button>\r\n            </Link>\r\n          </Card.Section>\r\n    \r\n          <Card.Section> \r\n            <Link url='/componenteslist'>\r\n              <Button size=\"large\">\r\n                <Stack distribution=\"equalSpacing\">\r\n                  <Icon source={ListMajorMonotone} />\r\n                    <p>Total Attributes</p>\r\n                    <p>0</p>\r\n                </Stack>\r\n              </Button>\r\n            </Link>\r\n          </Card.Section>\r\n            </Stack>\r\n        </Card.Section>\r\n      </Card>\r\n    </Page>\r\n<br/>\r\n</>\r\n  \r\n  );\r\n\r\n  const loadingPageMarkup = (\r\n    <SkeletonPage>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card sectioned>\r\n            <TextContainer>\r\n              <SkeletonDisplayText size=\"small\" />\r\n              <SkeletonBodyText lines={9} />\r\n            </TextContainer>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </SkeletonPage>\r\n  );\r\n\r\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\r\n\r\n  const modalMarkup = (\r\n    <Modal\r\n      open={modalActive}\r\n      onClose={toggleModalActive}\r\n      title=\"Contact support\"\r\n      primaryAction={{\r\n        content: 'Send',\r\n        onAction: toggleModalActive,\r\n      }}\r\n    >\r\n      <Modal.Section>\r\n        <FormLayout>\r\n          <TextField\r\n            label=\"Subject\"\r\n            value={supportSubject}\r\n            onChange={handleSubjectChange}\r\n          />\r\n          <TextField\r\n            label=\"Message\"\r\n            value={supportMessage}\r\n            onChange={handleMessageChange}\r\n            multiline\r\n          />\r\n        </FormLayout>\r\n      </Modal.Section>\r\n    </Modal>\r\n  );\r\n\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '500px'}}>\r\n      <AppProvider\r\n        theme={theme}\r\n        i18n={{\r\n          Polaris: {\r\n            Avatar: {\r\n              label: 'Avatar',\r\n              labelWithInitials: 'Avatar with initials {initials}',\r\n            },\r\n            ContextualSaveBar: {\r\n              save: 'Save',\r\n              discard: 'Discard',\r\n            },\r\n            TextField: {\r\n              characterCount: '{count} characters',\r\n            },\r\n            TopBar: {\r\n              toggleMenuLabel: 'Toggle menu',\r\n\r\n              SearchField: {\r\n                clearButtonLabel: 'Clear',\r\n                search: 'Search',\r\n              },\r\n            },\r\n            Modal: {\r\n              iFrameTitle: 'body markup',\r\n            },\r\n            Frame: {\r\n              skipToContent: 'Skip to content',\r\n              Navigation: {\r\n                closeMobileNavigationLabel: 'Close navigation',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Frame\r\n          topBar={topBarMarkup}\r\n          navigation={navigationMarkup}\r\n          showMobileNavigation={mobileNavigationActive}\r\n          onNavigationDismiss={toggleMobileNavigationActive}\r\n          skipToContentTarget={skipToContentRef.current}\r\n        >\r\n          {contextualSaveBarMarkup}\r\n          {loadingMarkup}\r\n          {pageMarkup}\r\n          {toastMarkup}\r\n          {modalMarkup}\r\n        </Frame>\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}