{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment, useCallback, useState } from \"react\";\nimport { Card, Form, Checkbox, Button, Select, Page, Stack, TextField, Heading, ChoiceList } from \"@shopify/polaris\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './AttributeCreation';\nimport { Drop_2 } from './Drop2';\nexport var Drop_1 = /*#__PURE__*/function (_React$Component) {\n  _inherits(Drop_1, _React$Component);\n\n  var _super = _createSuper(Drop_1);\n\n  function Drop_1() {\n    var _this;\n\n    _classCallCheck(this, Drop_1);\n\n    _this = _super.call(this);\n    _this.state = {\n      selectedValue: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Drop_1, [{\n    key: \"renderSelectedForm\",\n    value: function renderSelectedForm(param) {\n      switch (param) {\n        case 'form_name1':\n          return __jsx(Form, {\n            name: \"form_name1\",\n            id: \"form_name1\"\n          }, __jsx(Card, {\n            sectioned: true,\n            title: \"Attribute Properties\"\n          }, __jsx(\"hr\", null), __jsx(TextField, {\n            label: \"Label*:\",\n            placeholder: \"Your Company\"\n          }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n            label: \"Code:\",\n            placeholder: \"your-company\"\n          }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  <= 30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n            label: \"Sorting Order:\",\n            type: \"number\"\n          }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Drop_2, null), __jsx(\"br\", null), __jsx(TextField, {\n            label: \"Default value:\"\n          }), __jsx(\"p\", null, \"The default value for this attribute when it is shown to your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n            label: \"Placeholder:\"\n          }), __jsx(\"p\", null, \"The placeholder specifies a short hint that describes the expected value of this field\"), __jsx(\"br\", null), __jsx(Checkbox, {\n            label: \"Values Required\"\n          }), __jsx(\"p\", null, \"Tick if this attribute is required to be filled by your customers\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Input Validation:\"), __jsx(Dropdown, {\n            placeholder: \"None\"\n          }), __jsx(\"p\", null, \"You need to chose default date again to save with new formatd\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n            allowMultiple: true,\n            choices: [{\n              label: 'Show on Cart page:',\n              value: 'shipping',\n              helpText: 'Tick if you want to use this attribute on cart page.'\n            }, {\n              label: 'Hide if filled:',\n              value: 'confirmation',\n              helpText: 'Hide this attribute if it was filled before.'\n            }, {\n              label: 'Show on Order grid:',\n              value: 'shipping',\n              helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n            }, {\n              label: 'Show on Register page:',\n              value: 'confirmation',\n              helpText: 'Tick if you want to use this attribute on register page.'\n            }, {\n              label: 'Show on Customer grid',\n              value: 'confirmation',\n              helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n            }],\n            selected: selected,\n            onChange: handleChange\n          })));\n\n        case 'form_name2':\n          return __jsx(\"form\", {\n            name: \"form_name1\",\n            id: \"form_name2\"\n          }, __jsx(TextField, {\n            label: \"Label*:\",\n            placeholder: \"Date \"\n          }));\n\n        case 'form_name3':\n          return __jsx(\"form\", {\n            name: \"form_name1\",\n            id: \"form_name3\"\n          }, \"form 3\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        selectedValue: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"form\", null, __jsx(\"select\", {\n        value: this.state.selectedValue,\n        onChange: this.handleChange\n      }, __jsx(\"option\", {\n        value: \"\",\n        selected: \"selected\"\n      }), __jsx(\"option\", {\n        value: \"form_name1\"\n      }, \"Your company\"), __jsx(\"option\", {\n        value: \"form_name2\"\n      }, \"How did you find us?\"), __jsx(\"option\", {\n        value: \"form_name3\"\n      }, \"You register as\"), __jsx(\"option\", {\n        value: \"form_name1\"\n      }, \"Dear Visitor!\"), __jsx(\"option\", {\n        value: \"form_name2\"\n      }, \"Date of birth\"), __jsx(\"option\", {\n        value: \"form_name3\"\n      }, \"Country\"), __jsx(\"option\", {\n        value: \"form_name1\"\n      }, \"How did you find us 3?\"), __jsx(\"option\", {\n        value: \"form_name2\"\n      }, \"Accept Maketing Email\"), __jsx(\"option\", {\n        value: \"form_name3\"\n      }, \"Interests\"))), this.renderSelectedForm(this.state.selectedValue)));\n    }\n  }]);\n\n  return Drop_1;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Drop1.js"],"names":["React","Fragment","useCallback","useState","Card","Form","Checkbox","Button","Select","Page","Stack","TextField","Heading","ChoiceList","Dropdown","Drop_2","Drop_1","state","selectedValue","handleChange","bind","param","label","value","helpText","selected","event","setState","target","renderSelectedForm","Component"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState} from \"react\";\r\nimport {Card, Form,Checkbox, Button, Select, Page, Stack, TextField, Heading, ChoiceList,} from \"@shopify/polaris\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './AttributeCreation';\r\nimport {Drop_2} from './Drop2';\r\n\r\n\r\nexport class Drop_1 extends React.Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n        selectedValue:''\r\n       }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\nrenderSelectedForm(param) {\r\nswitch(param) {\r\n  case 'form_name1':\r\n    return <Form name=\"form_name1\" id=\"form_name1\" >\r\n      <Card sectioned title=\"Attribute Properties\">\r\n      <hr/>\r\n      <TextField\r\n        label=\"Label*:\"\r\n        \r\n        placeholder=\"Your Company\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n\r\n      \r\n      <TextField\r\n        label=\"Code:\"\r\n        placeholder=\"your-company\"\r\n        \r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  &lt;= 30. Let \r\n        it empty for auto generation</p>\r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Sorting Order:\"\r\n        type=\"number\"\r\n       \r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n        <Drop_2/>\r\n        <br/>\r\n   \r\n        <TextField\r\n        label=\"Default value:\"\r\n        \r\n      />\r\n      <p>The default value for this attribute when \r\n          it is shown to your customers</p>\r\n      <br/>\r\n\r\n      <TextField\r\n        label=\"Placeholder:\"\r\n \r\n       \r\n      />\r\n      <p>The placeholder specifies a short hint \r\n          that describes the expected value of \r\n          this field</p>\r\n          <br/>\r\n\r\n      <Checkbox\r\n          label=\"Values Required\"\r\n\r\n        />\r\n        <p>Tick if this attribute is required to be \r\n            filled by your customers</p>\r\n            <br/>\r\n\r\n            <p>Input Validation:</p>\r\n            <Dropdown    placeholder=\"None\"/>\r\n\r\n      <p>You need to chose default date again to \r\n          save with new formatd</p>\r\n    \r\n  \r\n      <br/>\r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n          </Form>;\r\n  case 'form_name2':\r\n    return <form name=\"form_name1\" id=\"form_name2\" >\r\n              <TextField\r\n        label=\"Label*:\"\r\n\r\n        placeholder=\"Date \"\r\n      />\r\n          </form>;\r\n  case 'form_name3':\r\n    return <form name=\"form_name1\" id=\"form_name3\" >\r\n          form 3\r\n          </form>;\r\n  default:\r\n    return null;\r\n}\r\n}\r\n\r\nhandleChange(event) { this.setState({selectedValue: event.target.value}); }\r\n\r\nrender() {\r\nreturn (\r\n  <div>\r\n    <div >\r\n            <form >\r\n              <select value={this.state.selectedValue} onChange={this.handleChange}>\r\n                  <option value=\"\" selected=\"selected\"></option>\r\n                  <option value=\"form_name1\">Your company</option>\r\n                  <option value=\"form_name2\">How did you find us?</option>\r\n                  <option value=\"form_name3\">You register as</option>\r\n                  <option value=\"form_name1\">Dear Visitor!</option>\r\n                  <option value=\"form_name2\">Date of birth</option>\r\n                  <option value=\"form_name3\">Country</option>\r\n                  <option value=\"form_name1\">How did you find us 3?</option>\r\n                  <option value=\"form_name2\">Accept Maketing Email</option>\r\n                  <option value=\"form_name3\">Interests</option>\r\n              </select>\r\n           </form>\r\n    {this.renderSelectedForm(this.state.selectedValue)}\r\n  </div>\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}