{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState } from \"react\";\nimport { Card, Button, Select, Page, Stack, TextField, Heading, ChoiceList } from \"@shopify/polaris\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './AttributeCreation';\nconst options = [{\n  id: \"Company\",\n  text: 'Your company',\n  value: 'Your company'\n}, {\n  id: \"How\",\n  text: 'How did you find us?',\n  value: 'How did you find us?'\n}, {\n  id: \"Register\",\n  text: 'You register as',\n  value: 'You register as'\n}, {\n  id: \"Visitor\",\n  text: 'Dear visitor!',\n  value: 'Dear visitor!'\n}, {\n  id: \"DateBirth\",\n  text: 'Date of birth',\n  value: 'Date of birth'\n}, {\n  id: \"Country\",\n  text: 'Country',\n  value: 'Country'\n}, {\n  id: \"How3\",\n  text: 'How did you find us 3?',\n  value: 'How did you find us 3?'\n}, {\n  id: \"Email\",\n  text: 'Accept Marketing Email',\n  value: 'Accept Marketing Email'\n}, {\n  id: \"Interests\",\n  text: 'Interests',\n  value: 'Interests'\n}];\nexport class Drop_1 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: \"trek\",\n      currentFormID: \"tt2488496\"\n    };\n  }\n\n  componentWillMount() {\n    this.search();\n  }\n\n  componentDidMount() {}\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentWillUpdate(nextProps, nextState) {}\n\n  componentWillUnmount() {}\n\n  updateSearch() {\n    this.setState({\n      query: this.refs.query.value\n    });\n    this.search(this.refs.query.value);\n  }\n\n  selectForm() {\n    this.setState({\n      currentFormId: this.refs.formSelector.value\n    });\n  }\n\n  render() {\n    var formularios = _.map(this.state.formularios, formulario => {\n      return __jsx(\"li\", {\n        key: formulario.imdbID\n      }, formulario.Title);\n    });\n\n    var options = _.map(this.state.formularios, formulario => {\n      return __jsx(\"option\", {\n        key: `option_${formulario.imdbID}`,\n        value: formulario.imdbID\n      }, formulario.Title);\n    });\n\n    var selectedMovie = _.find(this.state.movies, movie => {\n      return movie.imdbID == this.state.currentMovieId;\n    });\n\n    var img;\n\n    if (selectedFormulario) {\n      img = __jsx(\"img\", {\n        src: selectedFormulario.Poster\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"input\", {\n      ref: \"query\",\n      onChange: e => {\n        this.updateSearch();\n      },\n      type: \"text\",\n      value: this.state.query\n    }), __jsx(\"select\", {\n      ref: \"movieSelector\",\n      value: this.state.currentFormularioId,\n      onChange: e => {\n        this.selectFormulario();\n      }\n    }, options), __jsx(\"ul\", null, movies), img), \";\");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Drop1.js"],"names":["React","Fragment","useCallback","useState","Card","Button","Select","Page","Stack","TextField","Heading","ChoiceList","Dropdown","options","id","text","value","Drop_1","Component","constructor","state","query","currentFormID","componentWillMount","search","componentDidMount","componentWillReceiveProps","nextProps","componentWillUpdate","nextState","componentWillUnmount","updateSearch","setState","refs","selectForm","currentFormId","formSelector","render","formularios","_","map","formulario","imdbID","Title","selectedMovie","find","movies","movie","currentMovieId","img","selectedFormulario","Poster","e","currentFormularioId","selectFormulario"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState} from \"react\";\r\nimport {Card, Button, Select, Page, Stack, TextField, Heading, ChoiceList,} from \"@shopify/polaris\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './AttributeCreation';\r\n\r\nconst options = [\r\n    {id:\"Company\", text: 'Your company', value:'Your company',},\r\n    {id:\"How\", text: 'How did you find us?',  value: 'How did you find us?'},\r\n    {id:\"Register\",text: 'You register as', value: 'You register as'},\r\n    {id:\"Visitor\",text: 'Dear visitor!', value: 'Dear visitor!'},\r\n    {id:\"DateBirth\",text: 'Date of birth', value: 'Date of birth'},\r\n    {id:\"Country\",text: 'Country', value: 'Country'},\r\n    {id:\"How3\",text: 'How did you find us 3?', value: 'How did you find us 3?'},\r\n    {id:\"Email\",text: 'Accept Marketing Email', value: 'Accept Marketing Email'},\r\n    {id:\"Interests\",text: 'Interests', value: 'Interests'},\r\n  ];\r\n\r\nexport class Drop_1 extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            query: \"trek\",\r\n            currentFormID:\"tt2488496\"\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.search();\r\n      }\r\n\r\n      componentDidMount(){\r\n      }\r\n\r\n      componentWillReceiveProps(nextProps){\r\n      }\r\n    \r\n      componentWillUpdate(nextProps, nextState){\r\n      }\r\n    \r\n      componentWillUnmount(){\r\n      }\r\n \r\n      updateSearch(){\r\n        this.setState({query: this.refs.query.value});\r\n        this.search(this.refs.query.value);\r\n      }\r\n    \r\n      selectForm(){\r\n        this.setState({currentFormId: this.refs.formSelector.value});\r\n      }\r\n\r\n\r\n  render(){\r\n    var formularios = _.map(this.state.formularios, (formulario) => {\r\n        return <li key={formulario.imdbID}>{formulario.Title}</li>;\r\n      });\r\n      var options = _.map(this.state.formularios, (formulario) => {\r\n        return <option key={`option_${formulario.imdbID}`} value={formulario.imdbID}>{formulario.Title}</option>;\r\n      });\r\n      var selectedMovie = _.find(this.state.movies, (movie) => {\r\n        return movie.imdbID == this.state.currentMovieId;\r\n      });\r\n      var img;\r\n      if(selectedFormulario){\r\n        img = <img src={selectedFormulario.Poster} />;\r\n      }\r\n    \r\n\r\n  return(\r\n    \r\n  <>\r\n  <div>\r\n      <input ref=\"query\" onChange={ (e) => { this.updateSearch(); } } type=\"text\" value={this.state.query} />\r\n      <select ref=\"movieSelector\" value={this.state.currentFormularioId} onChange={ (e) => { this.selectFormulario(); } } >{options}</select>\r\n      <ul>{movies}</ul>\r\n      {img}\r\n    </div>;\r\n      \r\n           \r\n\r\n\r\n  \r\n\r\n</>\r\n    )\r\n\r\n  }\r\n}   \r\n\r\n"]},"metadata":{},"sourceType":"module"}