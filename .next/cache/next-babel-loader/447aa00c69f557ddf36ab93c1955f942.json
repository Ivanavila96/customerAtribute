{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef, Component } from \"react\";\nimport { Drop_1 } from './Drop1';\nimport { Drop_2 } from './Drop2';\nimport 'react-dropdown/style.css';\nimport { Card, Form, ChoiceList, TextStyle, Button, Heading, EmptyState, AppProvider, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport { mostrar } from './Drop1';\nimport { useForm } from 'react-hook-form';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddAtributoForm = props => {\n  state = {\n    id: \"\",\n    code: \"\",\n    label: \"\",\n    Type: \"\",\n    sortingorder: \"\",\n    status: \"\",\n    cartpage: \"\",\n    registerpage: \"\",\n    accountpage: \"\",\n    ordergrid: \"\",\n    customergrid: \"\"\n  };\n  const {\n    0: Atributos,\n    1: setAtributos\n  } = useState();\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    data.id = null;\n    console.log(data);\n    props.addAtributo(data);\n    e.target.reset();\n  };\n\n  const addAtributo = Atributo => {\n    Atributo.id = uuidv4();\n    setAtributos([...Atributos, Atributo]);\n  };\n\n  const {\n    0: textFieldValue,\n    1: setTextFieldValue\n  } = useState('');\n  const handleTextFieldChange = useCallback(value => setTextFieldValue(value), []);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const handleChangeCode = useCallback(newValue => setValue(newValue), []);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(['hidden']);\n  const handleChange = useCallback(value => setSelected(value), []);\n  const handleChangeNo = useCallback(newValueNo => setValueNo(newValueNo), []);\n  const {\n    0: valueNo,\n    1: setValueNo\n  } = useState('1');\n  {\n    /*navbar */\n  }\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \" Create attribute\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/componenteslist\"\n  }, \"Attributes\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    id: \"inicial\"\n  }, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextStyle, {\n    variation: \"strong\"\n  }, \"Use Template:\"), __jsx(Drop_1, null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }],\n    selected: selected,\n    onChange: handleChange\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Stack, {\n    distribution: \"trailing\"\n  }, __jsx(\"button\", null, \"Add new Atribute\"))), __jsx(\"br\", null))));\n};\n\nexport default AddAtributoForm;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeCreation.js"],"names":["React","Fragment","useCallback","useState","useRef","Component","Drop_1","Drop_2","Card","Form","ChoiceList","TextStyle","Button","Heading","EmptyState","AppProvider","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","mostrar","useForm","v4","uuidv4","AddAtributoForm","props","state","id","code","label","Type","sortingorder","status","cartpage","registerpage","accountpage","ordergrid","customergrid","Atributos","setAtributos","register","errors","handleSubmit","onSubmit","data","e","console","log","addAtributo","target","reset","Atributo","textFieldValue","setTextFieldValue","handleTextFieldChange","value","setValue","handleChangeCode","newValue","selected","setSelected","handleChange","handleChangeNo","newValueNo","setValueNo","valueNo","helpText"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,MAAhD,EAAwDC,SAAxD,QAAwE,OAAxE;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,OAAO,0BAAP;AACA,SAAQC,IAAR,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,SAA/B,EAAyCC,MAAzC,EAAiDC,OAAjD,EAAyDC,UAAzD,EAAqEC,WAArE,EAAiFC,MAAjF,EAAwFC,IAAxF,EAA8FC,KAA9F,EAAqGC,UAArG,EAAiHC,MAAjH,EAAyHC,iBAAzH,EAA4IC,UAA5I,EAAuJC,KAAvJ,EAA8JC,OAA9J,EAAsKC,KAAtK,EAA6KC,UAA7K,EAAyLC,gBAAzL,EAA2MC,mBAA3M,EAAgOC,YAAhO,EAA8OC,aAA9O,EAA6PC,SAA7P,EAAwQC,KAAxQ,EAA+QC,MAA/Q,EAAuRC,IAAvR,QAAkS,kBAAlS;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,EAA2CC,iBAA3C,EAA8DC,kBAA9D,EAAkFC,4BAAlF,EAAgHC,iBAAhH,EAAmIC,iBAAnI,EAAqJC,yBAArJ,EAA+KC,qBAA/K,QAA2M,wBAA3M;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;AAEA,MAAOC,eAAe,GAAIC,KAAD,IAAW;AAElCC,EAAAA,KAAK,GAAC;AACJC,IAAAA,EAAE,EAAC,EADC;AAEJC,IAAAA,IAAI,EAAC,EAFD;AAGJC,IAAAA,KAAK,EAAC,EAHF;AAIJC,IAAAA,IAAI,EAAC,EAJD;AAKJC,IAAAA,YAAY,EAAC,EALT;AAMJC,IAAAA,MAAM,EAAC,EANH;AAOJC,IAAAA,QAAQ,EAAC,EAPL;AAQJC,IAAAA,YAAY,EAAC,EART;AASJC,IAAAA,WAAW,EAAC,EATR;AAUJC,IAAAA,SAAS,EAAC,EAVN;AAWJC,IAAAA,YAAY,EAAC;AAXT,GAAN;AAcA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4B7D,QAAQ,EAA1C;AAEA,QAAK;AAAC8D,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAoCrB,OAAO,EAAhD;;AAEA,QAAMsB,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAY;AAC3BD,IAAAA,IAAI,CAACjB,EAAL,GAAU,IAAV;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAnB,IAAAA,KAAK,CAACuB,WAAN,CAAkBJ,IAAlB;AACAC,IAAAA,CAAC,CAACI,MAAF,CAASC,KAAT;AACD,GALD;;AAOA,QAAMF,WAAW,GAAIG,QAAD,IAAc;AAChCA,IAAAA,QAAQ,CAACxB,EAAT,GAAcJ,MAAM,EAApB;AACAgB,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAea,QAAf,CAAD,CAAZ;AACD,GAHD;;AAKA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsC3E,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM4E,qBAAqB,GAAG7E,WAAW,CACtC8E,KAAD,IAAWF,iBAAiB,CAACE,KAAD,CADW,EAEvC,EAFuC,CAAzC;AAMA,QAAM;AAAA,OAACA,KAAD;AAAA,OAAQC;AAAR,MAAoB9E,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM+E,gBAAgB,GAAGhF,WAAW,CAAEiF,QAAD,IAAcF,QAAQ,CAACE,QAAD,CAAvB,EAAmC,EAAnC,CAApC;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BlF,QAAQ,CAAC,CAAC,QAAD,CAAD,CAAxC;AACA,QAAMmF,YAAY,GAAGpF,WAAW,CAAE8E,KAAD,IAAWK,WAAW,CAACL,KAAD,CAAvB,EAAgC,EAAhC,CAAhC;AAIA,QAAMO,cAAc,GAAGrF,WAAW,CAAEsF,UAAD,IAAgBC,UAAU,CAACD,UAAD,CAA3B,EAAyC,EAAzC,CAAlC;AACA,QAAM;AAAA,OAACE,OAAD;AAAA,OAAUD;AAAV,MAAwBtF,QAAQ,CAAC,GAAD,CAAtC;AAKA;AAAC;AAAY;AAGd,SACD,4BACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,YADF,EAKE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,kBALF,EAQI,6BARJ,CADF,CADF,EAcA,MAAC,IAAD,QACE;AAAM,IAAA,QAAQ,EAAEgE,YAAY,CAACC,QAAD,CAA5B;AAAwC,IAAA,EAAE,EAAC;AAA3C,KACE,MAAC,IAAD;AAAM,IAAA,SAAS;AAAf,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,qBADF,EAEI,MAAC,MAAD,OAFJ,EAIE,iBAJF,EAKE,MAAC,OAAD,kCALF,EAME,iBANF,EAOE,iBAPF,EAUI,MAAC,UAAD;AACM,IAAA,aAAa,MADnB;AAEM,IAAA,OAAO,EAAE,CACP;AACEd,MAAAA,KAAK,EAAE,oBADT;AAEE0B,MAAAA,KAAK,EAAE,UAFT;AAGEW,MAAAA,QAAQ,EACN;AAJJ,KADO,EAOP;AACErC,MAAAA,KAAK,EAAE,wBADT;AAEE0B,MAAAA,KAAK,EAAE,cAFT;AAGEW,MAAAA,QAAQ,EACN;AAJJ,KAPO,CAFf;AAgBM,IAAA,QAAQ,EAAEP,QAhBhB;AAiBM,IAAA,QAAQ,EAAEE;AAjBhB,IAVJ,EA4BJ,iBA5BI,EA6BJ,iBA7BI,EA8BJ,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACA,yCADA,CA9BI,CADF,EAmCI,iBAnCJ,CADF,CAdA,CADC;AAyDA,CAjHD;;AAmHA,eAAerC,eAAf","sourcesContent":["import React, {Fragment, useCallback, useState, useRef, Component} from \"react\";\r\nimport {Drop_1} from './Drop1';\r\nimport {Drop_2} from './Drop2';\r\nimport 'react-dropdown/style.css';\r\nimport {Card,Form, ChoiceList, TextStyle,Button, Heading,EmptyState, AppProvider,Layout,Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport {mostrar} from './Drop1';\r\nimport { useForm } from 'react-hook-form'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst  AddAtributoForm = (props) => {\r\n\r\n  state={\r\n    id:\"\",\r\n    code:\"\",\r\n    label:\"\",\r\n    Type:\"\",\r\n    sortingorder:\"\",\r\n    status:\"\",\r\n    cartpage:\"\",\r\n    registerpage:\"\",\r\n    accountpage:\"\",\r\n    ordergrid:\"\",\r\n    customergrid:\"\",\r\n  }\r\n  \r\n  const [Atributos, setAtributos] = useState();\r\n\r\n  const{register, errors, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data, e) =>{\r\n    data.id = null\r\n    console.log(data)\r\n    props.addAtributo(data)\r\n    e.target.reset();\r\n  }\r\n\r\n  const addAtributo = (Atributo) => {\r\n    Atributo.id = uuidv4()\r\n    setAtributos([...Atributos, Atributo])\r\n  }\r\n\r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => setTextFieldValue(value),\r\n    [],\r\n  );\r\n\r\n\r\n  const [value, setValue] = useState('');\r\n  const handleChangeCode = useCallback((newValue) => setValue(newValue), []);\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n \r\n  \r\n\r\n  const handleChangeNo = useCallback((newValueNo) => setValueNo(newValueNo), []);\r\n  const [valueNo, setValueNo] = useState('1');\r\n\r\n\r\n\r\n  \r\n  {/*navbar */}\r\n\r\n\r\n return(\r\n<>\r\n  <Card sectioned title=\" Create attribute\">\r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>\r\n           \r\n      <Link url='/componenteslist' >\r\n        Attributes\r\n      </Link>\r\n        <p>Attribute</p>\r\n    </Stack>      \r\n  </Card>\r\n        \r\n<Page>\r\n  <form onSubmit={handleSubmit(onSubmit)} id=\"inicial\">\r\n    <Card sectioned>     \r\n      <TextStyle variation=\"strong\">Use Template:</TextStyle>\r\n        <Drop_1/>\r\n   \r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n      <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n              allowMultiple\r\n              choices={[\r\n                {\r\n                  label: 'Show on Cart page:',\r\n                  value: 'shipping',\r\n                  helpText:\r\n                    'Tick if you want to use this attribute on cart page.',\r\n                },\r\n                {\r\n                  label: 'Show on Register page:',\r\n                  value: 'confirmation',\r\n                  helpText:\r\n                    'Tick if you want to use this attribute on register page.',\r\n                },\r\n              ]}\r\n              selected={selected}\r\n              onChange={handleChange}/>\r\n<br/>\r\n<br/>\r\n<Stack distribution=\"trailing\">\r\n<button >Add new Atribute</button>\r\n</Stack>\r\n      </Card>\r\n      <br/>\r\n    </form>\r\n  </Page>\r\n</>\r\n  \r\n )\r\n}\r\n\r\nexport default AddAtributoForm"]},"metadata":{},"sourceType":"module"}