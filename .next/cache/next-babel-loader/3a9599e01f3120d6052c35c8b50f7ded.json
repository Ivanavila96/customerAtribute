{"ast":null,"code":"var __jsx = React.createElement;\nimport 'react-dropdown/style.css';\nimport Dropdown from 'react-dropdown';\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport { Card, Heading, Button, DataTable, Link, EmptyState, AppProvider, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nexport default function AttList() {\n  const rows = [['company', 'company', 'Text Field', '2', 'on', '']];\n  const rows2 = [['Yes', 'Yes', 'No', 'Yes', 'Yes']];\n  {\n    /*navbar */\n  }\n  const skipToContentRef = useRef(null);\n  const {\n    0: toastActive,\n    1: setToastActive\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isDirty,\n    1: setIsDirty\n  } = useState(false);\n  const {\n    0: searchActive,\n    1: setSearchActive\n  } = useState(false);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n  const {\n    0: userMenuActive,\n    1: setUserMenuActive\n  } = useState(false);\n  const {\n    0: mobileNavigationActive,\n    1: setMobileNavigationActive\n  } = useState(false);\n  const {\n    0: modalActive,\n    1: setModalActive\n  } = useState(false);\n  const {\n    0: nameFieldValue,\n    1: setNameFieldValue\n  } = useState();\n  const {\n    0: emailFieldValue,\n    1: setEmailFieldValue\n  } = useState();\n  const {\n    0: storeName,\n    1: setStoreName\n  } = useState();\n  const {\n    0: supportSubject,\n    1: setSupportSubject\n  } = useState('');\n  const {\n    0: supportMessage,\n    1: setSupportMessage\n  } = useState('');\n  const handleSubjectChange = useCallback(value => setSupportSubject(value), []);\n  const handleMessageChange = useCallback(value => setSupportMessage(value), []);\n  const handleDiscard = useCallback(() => {\n    setEmailFieldValue(defaultState.current.emailFieldValue);\n    setNameFieldValue(defaultState.current.nameFieldValue);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    defaultState.current.nameFieldValue = nameFieldValue;\n    defaultState.current.emailFieldValue = emailFieldValue;\n    setIsDirty(false);\n    setToastActive(true);\n    setStoreName(defaultState.current.nameFieldValue);\n  }, [emailFieldValue, nameFieldValue]);\n  const handleNameFieldChange = useCallback(value => {\n    setNameFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  const handleEmailFieldChange = useCallback(value => {\n    setEmailFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue('');\n  }, []);\n  const handleSearchFieldChange = useCallback(value => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n  const toggleToastActive = useCallback(() => setToastActive(toastActive => !toastActive), []);\n  const toggleUserMenuActive = useCallback(() => setUserMenuActive(userMenuActive => !userMenuActive), []);\n  const toggleMobileNavigationActive = useCallback(() => setMobileNavigationActive(mobileNavigationActive => !mobileNavigationActive), []);\n  const toggleIsLoading = useCallback(() => setIsLoading(isLoading => !isLoading), []);\n  const toggleModalActive = useCallback(() => setModalActive(modalActive => !modalActive), []);\n  const toastMarkup = toastActive ? __jsx(Toast, {\n    onDismiss: toggleToastActive,\n    content: \"Changes saved\"\n  }) : null;\n  const userMenuActions = [{\n    items: [{\n      content: 'Community forums'\n    }]\n  }];\n  const contextualSaveBarMarkup = isDirty ? __jsx(ContextualSaveBar, {\n    message: \"Unsaved changes\",\n    saveAction: {\n      onAction: handleSave\n    },\n    discardAction: {\n      onAction: handleDiscard\n    }\n  }) : null;\n\n  const topBarMarkup = __jsx(TopBar, {\n    showNavigationToggle: true,\n    searchResultsVisible: searchActive,\n    onSearchResultsDismiss: handleSearchResultsDismiss,\n    onNavigationToggle: toggleMobileNavigationActive\n  });\n\n  const navigationMarkup = __jsx(Navigation, {\n    location: \"/\"\n  }, __jsx(Navigation.Section, {\n    separator: true,\n    title: \"Dashboard\",\n    items: [{\n      url: './Index',\n      label: 'Dashboard',\n      icon: HomeMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      url: './componenteslist',\n      label: 'Attributes',\n      icon: MobileHamburgerMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      url: './AttributesTemplates',\n      label: 'Attribute Templates',\n      icon: BankMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Theme Installer',\n      icon: TroubleshootMajorMonotone,\n      onClick: toggleIsLoading\n    }]\n  }));\n\n  const loadingMarkup = isLoading ? __jsx(Loading, null) : null;\n\n  const skipToContentTarget = __jsx(\"a\", {\n    id: \"SkipToContentTarget\",\n    ref: skipToContentRef,\n    tabIndex: -1\n  });\n\n  const actualPageMarkup = __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attributes\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(\"p\", null, \"Attributes\"))), __jsx(Page, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(DataTable, {\n    id: \"Table1\",\n    columnContentTypes: ['text', 'text', 'text', 'numeric', 'text', 'text'],\n    headings: ['Code', 'Label', 'Type', 'Sorting Order', 'Status', 'Action'],\n    rows: rows\n  })), __jsx(Card, {\n    sectioned: true\n  }, __jsx(Heading, null, \"Show On\"), __jsx(DataTable, {\n    id: \"Table2\",\n    columnContentTypes: ['text', 'text', 'text', 'text', 'text'],\n    headings: ['Cart page', 'Register page', 'Account page', 'Order grid', 'Customer grid'],\n    rows: rows2\n  }))));\n\n  const loadingPageMarkup = __jsx(SkeletonPage, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextContainer, null, __jsx(SkeletonDisplayText, {\n    size: \"small\"\n  }), __jsx(SkeletonBodyText, {\n    lines: 9\n  }))))));\n\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  const modalMarkup = __jsx(Modal, {\n    open: modalActive,\n    onClose: toggleModalActive,\n    title: \"Contact support\",\n    primaryAction: {\n      content: 'Send',\n      onAction: toggleModalActive\n    }\n  }, __jsx(Modal.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Subject\",\n    value: supportSubject,\n    onChange: handleSubjectChange\n  }), __jsx(TextField, {\n    label: \"Message\",\n    value: supportMessage,\n    onChange: handleMessageChange,\n    multiline: true\n  }))));\n\n  const theme = {\n    colors: {\n      topBar: {\n        background: '#fff'\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(AppProvider, {\n    theme: theme,\n    i18n: {\n      Polaris: {\n        Avatar: {\n          label: 'Avatar',\n          labelWithInitials: 'Avatar with initials {initials}'\n        },\n        ContextualSaveBar: {\n          save: 'Save',\n          discard: 'Discard'\n        },\n        TextField: {\n          characterCount: '{count} characters'\n        },\n        TopBar: {\n          toggleMenuLabel: 'Toggle menu',\n          SearchField: {\n            clearButtonLabel: 'Clear',\n            search: 'Search'\n          }\n        },\n        Modal: {\n          iFrameTitle: 'body markup'\n        },\n        Frame: {\n          skipToContent: 'Skip to content',\n          Navigation: {\n            closeMobileNavigationLabel: 'Close navigation'\n          }\n        }\n      }\n    }\n  }, __jsx(Frame, {\n    topBar: topBarMarkup,\n    navigation: navigationMarkup,\n    showMobileNavigation: mobileNavigationActive,\n    onNavigationDismiss: toggleMobileNavigationActive,\n    skipToContentTarget: skipToContentRef.current\n  }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n}","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/componenteslist.js"],"names":["Dropdown","React","Fragment","useCallback","useState","useRef","Card","Heading","Button","DataTable","Link","EmptyState","AppProvider","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","AttList","rows","rows2","skipToContentRef","toastActive","setToastActive","isLoading","setIsLoading","isDirty","setIsDirty","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","modalActive","setModalActive","nameFieldValue","setNameFieldValue","emailFieldValue","setEmailFieldValue","storeName","setStoreName","supportSubject","setSupportSubject","supportMessage","setSupportMessage","handleSubjectChange","value","handleMessageChange","handleDiscard","defaultState","current","handleSave","handleNameFieldChange","handleEmailFieldChange","handleSearchResultsDismiss","handleSearchFieldChange","length","toggleToastActive","toggleUserMenuActive","toggleMobileNavigationActive","toggleIsLoading","toggleModalActive","toastMarkup","userMenuActions","items","content","contextualSaveBarMarkup","onAction","topBarMarkup","navigationMarkup","url","label","icon","onClick","loadingMarkup","skipToContentTarget","actualPageMarkup","loadingPageMarkup","pageMarkup","modalMarkup","theme","colors","topBar","background","height","Polaris","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel"],"mappings":"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","sourcesContent":["import 'react-dropdown/style.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport {Card,Heading, Button, DataTable ,Link,EmptyState, AppProvider,Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\n\r\nexport default function AttList(){\r\n\r\nconst rows = [\r\n  ['company','company','Text Field','2','on',''],\r\n];\r\n\r\nconst rows2 = [\r\n  ['Yes','Yes','No','Yes','Yes'],\r\n];\r\n\r\n\r\n  {/*navbar */}\r\n\r\n\r\n  const skipToContentRef = useRef(null);\r\n\r\n  const [toastActive, setToastActive] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [userMenuActive, setUserMenuActive] = useState(false);\r\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [nameFieldValue, setNameFieldValue] = useState(\r\n  );\r\n  const [emailFieldValue, setEmailFieldValue] = useState(\r\n  );\r\n  const [storeName, setStoreName] = useState(\r\n  );\r\n  const [supportSubject, setSupportSubject] = useState('');\r\n  const [supportMessage, setSupportMessage] = useState('');\r\n \r\n  const handleSubjectChange = useCallback(\r\n    (value) => setSupportSubject(value),\r\n    [],\r\n  );\r\n  const handleMessageChange = useCallback(\r\n    (value) => setSupportMessage(value),\r\n    [],\r\n  );\r\n  const handleDiscard = useCallback(() => {\r\n    setEmailFieldValue(defaultState.current.emailFieldValue);\r\n    setNameFieldValue(defaultState.current.nameFieldValue);\r\n    setIsDirty(false);\r\n  }, []);\r\n  const handleSave = useCallback(() => {\r\n    defaultState.current.nameFieldValue = nameFieldValue;\r\n    defaultState.current.emailFieldValue = emailFieldValue;\r\n \r\n    setIsDirty(false);\r\n    setToastActive(true);\r\n    setStoreName(defaultState.current.nameFieldValue);\r\n  }, [emailFieldValue, nameFieldValue]);\r\n  const handleNameFieldChange = useCallback((value) => {\r\n    setNameFieldValue(value);\r\n    value && setIsDirty(true);\r\n  }, []);\r\n  const handleEmailFieldChange = useCallback((value) => {\r\n    setEmailFieldValue(value);\r\n    value && setIsDirty(true);\r\n  }, []);\r\n  const handleSearchResultsDismiss = useCallback(() => {\r\n    setSearchActive(false);\r\n    setSearchValue('');\r\n  }, []);\r\n  const handleSearchFieldChange = useCallback((value) => {\r\n    setSearchValue(value);\r\n    setSearchActive(value.length > 0);\r\n  }, []);\r\n  const toggleToastActive = useCallback(\r\n    () => setToastActive((toastActive) => !toastActive),\r\n    [],\r\n  );\r\n  const toggleUserMenuActive = useCallback(\r\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\r\n    [],\r\n  );\r\n  const toggleMobileNavigationActive = useCallback(\r\n    () =>\r\n      setMobileNavigationActive(\r\n        (mobileNavigationActive) => !mobileNavigationActive,\r\n      ),\r\n    [],\r\n  );\r\n  const toggleIsLoading = useCallback(\r\n    () => setIsLoading((isLoading) => !isLoading),\r\n    [],\r\n  );\r\n  const toggleModalActive = useCallback(\r\n    () => setModalActive((modalActive) => !modalActive),\r\n    [],\r\n  );\r\n \r\n  const toastMarkup = toastActive ? (\r\n    <Toast onDismiss={toggleToastActive} content=\"Changes saved\" />\r\n  ) : null;\r\n \r\n  const userMenuActions = [\r\n    {\r\n      items: [{content: 'Community forums'}],\r\n    },\r\n  ];\r\n  \r\n \r\n  const contextualSaveBarMarkup = isDirty ? (\r\n    <ContextualSaveBar\r\n      message=\"Unsaved changes\"\r\n      saveAction={{\r\n        onAction: handleSave,\r\n      }}\r\n      discardAction={{\r\n        onAction: handleDiscard,\r\n      }}\r\n    />\r\n  ) : null;\r\n \r\n \r\n \r\n \r\n \r\n \r\n  const topBarMarkup = (\r\n    <TopBar\r\n      showNavigationToggle\r\n      searchResultsVisible={searchActive}  \r\n      onSearchResultsDismiss={handleSearchResultsDismiss}\r\n      onNavigationToggle={toggleMobileNavigationActive}\r\n    />\r\n  );\r\n \r\n  \r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n     \r\n      <Navigation.Section\r\n        separator\r\n        title=\"Dashboard\"\r\n        items={[\r\n \r\n          {\r\n            url: './Index',\r\n            label: 'Dashboard',\r\n            icon: HomeMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            url: './componenteslist',\r\n            label: 'Attributes',\r\n            icon: MobileHamburgerMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            url: './AttributesTemplates',\r\n            label: 'Attribute Templates',\r\n            icon: BankMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n          {\r\n            label: 'Theme Installer',\r\n            icon: TroubleshootMajorMonotone,\r\n            onClick: toggleIsLoading,\r\n          },\r\n        ]}\r\n       \r\n      />\r\n    </Navigation>\r\n  );\r\n \r\n  const loadingMarkup = isLoading ? <Loading /> : null;\r\n \r\n  const skipToContentTarget = (\r\n    <a id=\"SkipToContentTarget\" ref={skipToContentRef} tabIndex={-1} />\r\n  );\r\n \r\n  const actualPageMarkup = (\r\n \r\n<>\r\n  <Card sectioned title=\"Attributes\">\r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>         \r\n        <p>Attributes</p>\r\n    </Stack>        \r\n  </Card>\r\n\r\n<Page>\r\n      <Card sectioned>  \r\n        <DataTable id=\"Table1\"\r\n          columnContentTypes={[\r\n            'text',\r\n            'text',\r\n            'text',\r\n            'numeric',\r\n            'text',\r\n            'text',\r\n          ]}\r\n          headings={[\r\n            'Code',\r\n            'Label',\r\n            'Type',\r\n            'Sorting Order',\r\n            'Status', \r\n            'Action',\r\n          ]}\r\n          rows={rows}/>\r\n      </Card>\r\n\r\n      <Card sectioned>  \r\n        <Heading>Show On</Heading>\r\n          <DataTable id=\"Table2\"\r\n            columnContentTypes={[\r\n              'text',\r\n              'text',\r\n              'text',\r\n              'text',\r\n              'text',\r\n            ]}\r\n            headings={[\r\n              'Cart page',\r\n              'Register page',\r\n              'Account page',\r\n              'Order grid',\r\n              'Customer grid',\r\n            ]}\r\n            rows={rows2}/>\r\n      </Card>\r\n</Page>\r\n</>\r\n\r\n);\r\n\r\n  const loadingPageMarkup = (\r\n    <SkeletonPage>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card sectioned>\r\n            <TextContainer>\r\n              <SkeletonDisplayText size=\"small\" />\r\n              <SkeletonBodyText lines={9} />\r\n            </TextContainer>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </SkeletonPage>\r\n  );\r\n\r\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\r\n\r\n  const modalMarkup = (\r\n    <Modal\r\n      open={modalActive}\r\n      onClose={toggleModalActive}\r\n      title=\"Contact support\"\r\n      primaryAction={{\r\n        content: 'Send',\r\n        onAction: toggleModalActive,\r\n      }}\r\n    >\r\n      <Modal.Section>\r\n        <FormLayout>\r\n          <TextField\r\n            label=\"Subject\"\r\n            value={supportSubject}\r\n            onChange={handleSubjectChange}\r\n          />\r\n          <TextField\r\n            label=\"Message\"\r\n            value={supportMessage}\r\n            onChange={handleMessageChange}\r\n            multiline\r\n          />\r\n        </FormLayout>\r\n      </Modal.Section>\r\n    </Modal>\r\n  );\r\n\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '500px'}}>\r\n      <AppProvider\r\n        theme={theme}\r\n        i18n={{\r\n          Polaris: {\r\n            Avatar: {\r\n              label: 'Avatar',\r\n              labelWithInitials: 'Avatar with initials {initials}',\r\n            },\r\n            ContextualSaveBar: {\r\n              save: 'Save',\r\n              discard: 'Discard',\r\n            },\r\n            TextField: {\r\n              characterCount: '{count} characters',\r\n            },\r\n            TopBar: {\r\n              toggleMenuLabel: 'Toggle menu',\r\n\r\n              SearchField: {\r\n                clearButtonLabel: 'Clear',\r\n                search: 'Search',\r\n              },\r\n            },\r\n            Modal: {\r\n              iFrameTitle: 'body markup',\r\n            },\r\n            Frame: {\r\n              skipToContent: 'Skip to content',\r\n              Navigation: {\r\n                closeMobileNavigationLabel: 'Close navigation',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Frame\r\n          topBar={topBarMarkup}\r\n          navigation={navigationMarkup}\r\n          showMobileNavigation={mobileNavigationActive}\r\n          onNavigationDismiss={toggleMobileNavigationActive}\r\n          skipToContentTarget={skipToContentRef.current}\r\n        >\r\n          {contextualSaveBarMarkup}\r\n          {loadingMarkup}\r\n          {pageMarkup}\r\n          {toastMarkup}\r\n          {modalMarkup}\r\n        </Frame>\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}