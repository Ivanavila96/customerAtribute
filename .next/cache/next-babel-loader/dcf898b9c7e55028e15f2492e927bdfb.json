{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useCallback, useState, useRef, Component } from \"react\";\nimport { Drop_1 } from './Drop1';\nimport { Drop_2 } from './Drop2';\nimport 'react-dropdown/style.css';\nimport { Card, Form, ChoiceList, TextStyle, Button, Heading, EmptyState, AppProvider, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport { mostrar } from './Drop1';\nimport { useForm } from 'react-hook-form';\nimport { v4 as uuidv4 } from 'uuid';\nimport { render } from \"react-dom\";\nconst {\n  0: Atributos,\n  1: setAtributos\n} = useState();\nconst {\n  register,\n  errors,\n  handleSubmit\n} = useForm();\n\nconst onSubmit = (data, e) => {\n  data.id = null;\n  console.log(data);\n  props.addAtributo(data);\n  e.target.reset();\n};\n\nconst addAtributo = Atributo => {\n  Atributo.id = uuidv4();\n  setAtributos([...Atributos, Atributo]);\n};\n\nconst {\n  0: selected,\n  1: setSelected\n} = useState(['hidden']);\nconst handleChange = useCallback(value => setSelected(value), []);\nexport default class AttCreation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      id: \"\",\n      code: \"\",\n      label: \"\",\n      Type: \"\",\n      sortingorder: \"\",\n      status: \"\",\n      cartpage: \"\",\n      registerpage: \"\",\n      accountpage: \"\",\n      ordergrid: \"\",\n      customergrid: \"\"\n    });\n\n    _defineProperty(this, \"change\", e => {\n      this.props.onChange({\n        [e.target.name]: e.target.value\n      });\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault(); // this.props.onSubmit(this.state);\n\n      this.setState({\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      });\n      this.props.onChange({\n        id: \"\",\n        code: \"\",\n        label: \"\",\n        Type: \"\",\n        sortingorder: \"\",\n        status: \"\",\n        cartpage: \"\",\n        registerpage: \"\",\n        accountpage: \"\",\n        ordergrid: \"\",\n        customergrid: \"\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Card, {\n      sectioned: true,\n      title: \" Create attribute\"\n    }, __jsx(Stack, {\n      distribution: \"leading\"\n    }, __jsx(Link, {\n      url: \"/Index\"\n    }, \"Home\"), __jsx(Link, {\n      url: \"/componenteslist\"\n    }, \"Attributes\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      id: \"inicial\"\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, \"Use Template:\"), __jsx(Drop_1, null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n      allowMultiple: true,\n      choices: [{\n        label: 'Show on Cart page:',\n        value: 'shipping',\n        helpText: 'Tick if you want to use this attribute on cart page.'\n      }, {\n        label: 'Show on Register page:',\n        value: 'confirmation',\n        helpText: 'Tick if you want to use this attribute on register page.'\n      }],\n      selected: selected,\n      onChange: handleChange\n    }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Stack, {\n      distribution: \"trailing\"\n    }, __jsx(\"button\", null, \"Add new Atribute\"))), __jsx(\"br\", null))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeCreation.js"],"names":["React","Fragment","useCallback","useState","useRef","Component","Drop_1","Drop_2","Card","Form","ChoiceList","TextStyle","Button","Heading","EmptyState","AppProvider","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","mostrar","useForm","v4","uuidv4","render","Atributos","setAtributos","register","errors","handleSubmit","onSubmit","data","e","id","console","log","props","addAtributo","target","reset","Atributo","selected","setSelected","handleChange","value","AttCreation","code","label","Type","sortingorder","status","cartpage","registerpage","accountpage","ordergrid","customergrid","onChange","name","setState","preventDefault","firstName","lastName","username","email","password","helpText"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState, useRef, Component} from \"react\";\r\nimport {Drop_1} from './Drop1';\r\nimport {Drop_2} from './Drop2';\r\nimport 'react-dropdown/style.css';\r\nimport {Card,Form, ChoiceList, TextStyle,Button, Heading,EmptyState, AppProvider,Layout,Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport {mostrar} from './Drop1';\r\nimport { useForm } from 'react-hook-form'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { render } from \"react-dom\";\r\n\r\n\r\nconst [Atributos, setAtributos] = useState();\r\n\r\nconst{register, errors, handleSubmit } = useForm();\r\n\r\nconst onSubmit = (data, e) =>{\r\n  data.id = null\r\n  console.log(data)\r\n  props.addAtributo(data)\r\n  e.target.reset();\r\n}\r\n\r\nconst addAtributo = (Atributo) => {\r\n  Atributo.id = uuidv4()\r\n  setAtributos([...Atributos, Atributo])\r\n}\r\n\r\n\r\nconst [selected, setSelected] = useState(['hidden']);\r\nconst handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n\r\n\r\n\r\n\r\nexport default class AttCreation extends React.Component {\r\n\r\n  state = {\r\n    id:\"\",\r\n    code:\"\",\r\n    label:\"\",\r\n    Type:\"\",\r\n    sortingorder:\"\",\r\n    status:\"\",\r\n    cartpage:\"\",\r\n    registerpage:\"\",\r\n    accountpage:\"\",\r\n    ordergrid:\"\",\r\n    customergrid:\"\"\r\n  };\r\n  \r\n  change = e => {\r\n    this.props.onChange({ [e.target.name]: e.target.value });\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    // this.props.onSubmit(this.state);\r\n    this.setState({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    });\r\n    this.props.onChange({\r\n      id:\"\",\r\n      code:\"\",\r\n      label:\"\",\r\n      Type:\"\",\r\n      sortingorder:\"\",\r\n      status:\"\",\r\n      cartpage:\"\",\r\n      registerpage:\"\",\r\n      accountpage:\"\",\r\n      ordergrid:\"\",\r\n      customergrid:\"\"\r\n    });\r\n  };\r\n\r\n\r\nrender(){\r\n return(\r\n<>\r\n  <Card sectioned title=\" Create attribute\">\r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>\r\n           \r\n      <Link url='/componenteslist' >\r\n        Attributes\r\n      </Link>\r\n        <p>Attribute</p>\r\n    </Stack>      \r\n  </Card>\r\n        \r\n<Page>\r\n  <form onSubmit={handleSubmit(onSubmit)} id=\"inicial\">\r\n    <Card sectioned>     \r\n      <TextStyle variation=\"strong\">Use Template:</TextStyle>\r\n        <Drop_1/>\r\n   \r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n      <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n              allowMultiple\r\n              choices={[\r\n                {\r\n                  label: 'Show on Cart page:',\r\n                  value: 'shipping',\r\n                  helpText:\r\n                    'Tick if you want to use this attribute on cart page.',\r\n                },\r\n                {\r\n                  label: 'Show on Register page:',\r\n                  value: 'confirmation',\r\n                  helpText:\r\n                    'Tick if you want to use this attribute on register page.',\r\n                },\r\n              ]}\r\n              selected={selected}\r\n              onChange={handleChange}/>\r\n<br/>\r\n<br/>\r\n<Stack distribution=\"trailing\">\r\n<button >Add new Atribute</button>\r\n</Stack>\r\n      </Card>\r\n      <br/>\r\n    </form>\r\n  </Page>\r\n</>\r\n  \r\n );\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}