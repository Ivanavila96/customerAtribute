{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport 'react-dropdown/style.css';\nimport React, { useCallback, useState, useRef } from \"react\";\nimport { Card, DataTable, Link, Layout, Page, Stack, ActionList, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Heading } from \"@shopify/polaris\";\nimport { NoteMajorMonotone, HomeMajorMonotone, MobileHamburgerMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport AppProvider from './navbar.js';\nexport default function Customers() {\n  _s();\n\n  var _useState = useState(''),\n      valueDateS = _useState[0],\n      setValueDateS = _useState[1];\n\n  var handleChangeDateS = useCallback(function (newValueDateS) {\n    return setValueDateS(newValueDateS);\n  }, []);\n\n  var _useState2 = useState(''),\n      valueDateE = _useState2[0],\n      setValueDateE = _useState2[1];\n\n  var handleChangeDateE = useCallback(function (newValueDateE) {\n    return setValueDateE(newValueDateE);\n  }, []);\n\n  var _useState3 = useState(''),\n      valueMail = _useState3[0],\n      setValueMail = _useState3[1];\n\n  var handleChangeMail = useCallback(function (newValueMail) {\n    return setValueMail(newValueMail);\n  }, []);\n\n  var _useState4 = useState(''),\n      valueCN = _useState4[0],\n      setValueCN = _useState4[1];\n\n  var handleChangeCN = useCallback(function (newValueCN) {\n    return setValueCN(newValueCN);\n  }, []);\n\n  var _useState5 = useState(''),\n      valueCompany = _useState5[0],\n      setValueCompany = _useState5[1];\n\n  var handleChangeCompany = useCallback(function (newValueCompany) {\n    return setValueCompany(newValueCompany);\n  }, []);\n  var rows = [['accept-marketing-email-1', 'Accept Marketing Email', 'Yes/No', NoteMajorMonotone]];\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Customers\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(\"p\", null, \"Customers\"))), __jsx(Page, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n    label: \"Created Date\",\n    type: \"date\",\n    id: \"dateCustomersInicial\",\n    defaultValue: \"DD-MM-YYYY\",\n    value: valueDateS,\n    onChange: handleChangeDateS\n  }), __jsx(TextField, {\n    label: \"To\",\n    type: \"date\",\n    id: \"dateCustomersFinal\",\n    defaultValue: \"DD-MM-YYYY\",\n    value: valueDateE,\n    onChange: handleChangeDateE\n  }), __jsx(TextField, {\n    label: \"Email\",\n    value: valueMail,\n    type: \"email\",\n    onChange: handleChangeMail\n  }), __jsx(TextField, {\n    label: \"Customer Name\",\n    value: valueCN,\n    onChange: handleChangeCN\n  }), __jsx(TextField, {\n    label: \"Company\",\n    value: valueCompany,\n    onChange: handleChangeCompany\n  })))), __jsx(Card, null, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text', 'date', 'numeric', 'numeric', 'text', 'text'],\n    headings: ['Name', 'Email', 'Date', 'Orders Count', 'Total Spent', 'Action', 'Company'],\n    rows: rows\n  }))));\n}\n\n_s(Customers, \"4+SAKLrwcjE4VpHszp1o1c0HbrQ=\");\n\n_c = Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/Customers.js"],"names":["React","useCallback","useState","useRef","Card","DataTable","Link","Layout","Page","Stack","ActionList","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Heading","NoteMajorMonotone","HomeMajorMonotone","MobileHamburgerMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","AppProvider","Customers","valueDateS","setValueDateS","handleChangeDateS","newValueDateS","valueDateE","setValueDateE","handleChangeDateE","newValueDateE","valueMail","setValueMail","handleChangeMail","newValueMail","valueCN","setValueCN","handleChangeCN","newValueCN","valueCompany","setValueCompany","handleChangeCompany","newValueCompany","rows"],"mappings":"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","sourcesContent":["import 'react-dropdown/style.css';\r\nimport React, {useCallback, useState, useRef} from \"react\";\r\nimport {Card, DataTable ,Link,Layout,Page, Stack, ActionList,  ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Heading} from \"@shopify/polaris\";\r\nimport {NoteMajorMonotone, HomeMajorMonotone, MobileHamburgerMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport AppProvider from './navbar.js';\r\n\r\n\r\nexport default function Customers(){\r\n \r\n  const [valueDateS, setValueDateS] = useState('');\r\n  const handleChangeDateS = useCallback((newValueDateS) => setValueDateS(newValueDateS), []);\r\n\r\n  const [valueDateE, setValueDateE] = useState('');\r\n  const handleChangeDateE = useCallback((newValueDateE) => setValueDateE(newValueDateE), []);\r\n\r\n  const [valueMail, setValueMail] = useState('');\r\n  const handleChangeMail = useCallback((newValueMail) => setValueMail(newValueMail),[],);\r\n\r\n  const [valueCN, setValueCN] = useState('');\r\n  const handleChangeCN = useCallback((newValueCN) => setValueCN(newValueCN), []);\r\n\r\n  const [valueCompany, setValueCompany] = useState('');\r\n  const handleChangeCompany = useCallback((newValueCompany) => setValueCompany(newValueCompany), []);\r\n\r\n\r\nconst rows = [\r\n  ['accept-marketing-email-1', 'Accept Marketing Email', 'Yes/No', NoteMajorMonotone, ],\r\n];\r\nreturn(\r\n\r\n\r\n    <>\r\n  \r\n      <Card sectioned title=\"Customers\">\r\n  <Stack distribution=\"leading\">\r\n  <Link url='/Index' >\r\n  Home\r\n  </Link>\r\n           \r\n<p>\r\n  Customers\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n<Page>\r\n      <Card sectioned>\r\n       <FormLayout>\r\n       <FormLayout.Group >\r\n                <TextField \r\n                label=\"Created Date\" \r\n                type=\"date\" \r\n                id=\"dateCustomersInicial\"\r\n                defaultValue=\"DD-MM-YYYY\"\r\n                value={valueDateS}\r\n                onChange={handleChangeDateS}\r\n                />\r\n\r\n                <TextField \r\n                label=\"To\"\r\n                 type=\"date\" \r\n                 id=\"dateCustomersFinal\"\r\n                 defaultValue=\"DD-MM-YYYY\"\r\n                 value={valueDateE}\r\n                 onChange={handleChangeDateE}/>\r\n\r\n                <TextField label=\"Email\" \r\n                value={valueMail}\r\n                type=\"email\"\r\n                onChange={handleChangeMail}/>\r\n\r\n                <TextField label=\"Customer Name\" \r\n                value={valueCN}\r\n                onChange={handleChangeCN} />\r\n\r\n                <TextField label=\"Company\" \r\n                   value={valueCompany}\r\n                   onChange={handleChangeCompany}/>\r\n        </FormLayout.Group>\r\n        </FormLayout>  \r\n      </Card>\r\n      <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n            'text',\r\n            'text',\r\n            'date',\r\n            'numeric',\r\n            'numeric',\r\n            'text',\r\n            'text',\r\n          ]}\r\n          headings={[\r\n            'Name',\r\n            'Email',\r\n            'Date',\r\n            'Orders Count',\r\n            'Total Spent',\r\n            'Action',\r\n            'Company',\r\n          ]}\r\n          rows={rows}\r\n        />\r\n      </Card>\r\n    </Page>\r\n    </>\r\n);\r\n        }"]},"metadata":{},"sourceType":"module"}