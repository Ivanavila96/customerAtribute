{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment, useCallback, useState } from \"react\";\nimport { Card, Button, Select, Page, Stack, TextField } from \"@shopify/polaris\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nvar AC = /*#__PURE__*/function (_React$Component) {\n  _inherits(AC, _React$Component);\n\n  var _super = _createSuper(AC);\n\n  function AC() {\n    _classCallCheck(this, AC);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AC, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState(''),\n          textFieldValue = _useState[0],\n          setTextFieldValue = _useState[1];\n\n      var handleTextFieldChange = useCallback(function (value) {\n        return setTextFieldValue(value);\n      }, []);\n      var options = [{\n        label: '',\n        value: 'today'\n      }, {\n        label: 'Your company',\n        value: 'today'\n      }, {\n        label: 'How did you find us?',\n        value: 'yesterday'\n      }, {\n        label: 'You register as',\n        value: 'lastWeek'\n      }, {\n        label: 'Dear visitor!',\n        value: 'today'\n      }, {\n        label: 'Date of birth',\n        value: 'yesterday'\n      }, {\n        label: 'Country',\n        value: 'lastWeek'\n      }, {\n        label: 'How did you find us 3?',\n        value: 'today'\n      }, {\n        label: 'Accept Marketing Email',\n        value: 'yesterday'\n      }, {\n        label: 'Interests',\n        value: 'lastWeek'\n      }];\n      return __jsx(React.Fragment, null, __jsx(Card, {\n        sectioned: true,\n        title: \" Create attribute\",\n        actions: [{\n          content: 'Add variant'\n        }]\n      }, __jsx(\"p\", null, \"Home Attributes Attribute\")), __jsx(Page, null, __jsx(Card, {\n        sectioned: true,\n        title: \"Create attribute\"\n      }, __jsx(\"p\", null, \"Use Template:\"), __jsx(Stack, {\n        distribution: \"fillEvenly\"\n      }, __jsx(Dropdown, {\n        options: options,\n        onChange: this._onSelect,\n        placeholder: \"olol\"\n      }), __jsx(\"p\", null, \"If you choose a template, the following attribute fields will be filled\", __jsx(\"br\", null), \"automatically. Or you can leave this\", __jsx(\"br\", null), \"box blank and create your unique field\", __jsx(\"br\", null), \"by filling in these boxes.\")), __jsx(\"hr\", null), __jsx(\"p\", null, \"Attribute Properties\"), __jsx(\"hr\", null), __jsx(TextField, {\n        label: \"Shipping zone name\",\n        value: textFieldValue,\n        onChange: handleTextFieldChange,\n        placeholder: \"Example: North America, Europe\"\n      }))));\n    }\n  }]);\n\n  return AC;\n}(React.Component);\n\nexport default AC;","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeCreation.js"],"names":["React","Fragment","useCallback","useState","Card","Button","Select","Page","Stack","TextField","Dropdown","AC","textFieldValue","setTextFieldValue","handleTextFieldChange","value","options","label","content","_onSelect","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,SAA3C,QAA2D,kBAA3D;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,0BAAP;;IAOOC,E;;;;;;;;;;;;;6BAGI;AAAA,sBAEqCR,QAAQ,CAAC,EAAD,CAF7C;AAAA,UAEAS,cAFA;AAAA,UAEgBC,iBAFhB;;AAIP,UAAMC,qBAAqB,GAAGZ,WAAW,CACvC,UAACa,KAAD;AAAA,eAAWF,iBAAiB,CAACE,KAAD,CAA5B;AAAA,OADuC,EAEvC,EAFuC,CAAzC;AAOA,UAAMC,OAAO,GAAG,CACd;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYF,QAAAA,KAAK,EAAE;AAAnB,OADc,EAEd;AAACE,QAAAA,KAAK,EAAE,cAAR;AAAwBF,QAAAA,KAAK,EAAE;AAA/B,OAFc,EAGd;AAACE,QAAAA,KAAK,EAAE,sBAAR;AAAgCF,QAAAA,KAAK,EAAE;AAAvC,OAHc,EAId;AAACE,QAAAA,KAAK,EAAE,iBAAR;AAA2BF,QAAAA,KAAK,EAAE;AAAlC,OAJc,EAKd;AAACE,QAAAA,KAAK,EAAE,eAAR;AAAyBF,QAAAA,KAAK,EAAE;AAAhC,OALc,EAMd;AAACE,QAAAA,KAAK,EAAE,eAAR;AAAyBF,QAAAA,KAAK,EAAE;AAAhC,OANc,EAOd;AAACE,QAAAA,KAAK,EAAE,SAAR;AAAmBF,QAAAA,KAAK,EAAE;AAA1B,OAPc,EAQd;AAACE,QAAAA,KAAK,EAAE,wBAAR;AAAkCF,QAAAA,KAAK,EAAE;AAAzC,OARc,EASd;AAACE,QAAAA,KAAK,EAAE,wBAAR;AAAkCF,QAAAA,KAAK,EAAE;AAAzC,OATc,EAUd;AAACE,QAAAA,KAAK,EAAE,WAAR;AAAqBF,QAAAA,KAAK,EAAE;AAA5B,OAVc,CAAhB;AAaA,aAEJ,4BAEA,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,KAAK,EAAC,mBAAtB;AAA0C,QAAA,OAAO,EAAE,CAAC;AAACG,UAAAA,OAAO,EAAE;AAAV,SAAD;AAAnD,SACU,6CADV,CAFA,EAOM,MAAC,IAAD,QAOF,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,KAAK,EAAC;AAAtB,SAEA,iCAFA,EAGA,MAAC,KAAD;AAAO,QAAA,YAAY,EAAC;AAApB,SAEA,MAAC,QAAD;AAAU,QAAA,OAAO,EAAEF,OAAnB;AAA4B,QAAA,QAAQ,EAAE,KAAKG,SAA3C;AAAuD,QAAA,WAAW,EAAC;AAAnE,QAFA,EAGA,4FAEE,iBAFF,0CAIE,iBAJF,4CAME,iBANF,+BAHA,CAHA,EAeA,iBAfA,EAgBA,wCAhBA,EAiBA,iBAjBA,EAmBA,MAAC,SAAD;AACE,QAAA,KAAK,EAAC,oBADR;AAEE,QAAA,KAAK,EAAEP,cAFT;AAGE,QAAA,QAAQ,EAAEE,qBAHZ;AAIE,QAAA,WAAW,EAAC;AAJd,QAnBA,CAPE,CAPN,CAFI;AAmDD;;;;EA9Eed,KAAK,CAACoB,S;;AAiFxB,eAAeT,EAAf","sourcesContent":["import React, {Fragment, useCallback, useState} from \"react\";\r\nimport {Card, Button, Select, Page, Stack, TextField} from \"@shopify/polaris\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n class AC extends React.Component {\r\n   \r\n\r\n  render() {\r\n\r\n    const [textFieldValue, setTextFieldValue] = useState('');\r\n\r\n    const handleTextFieldChange = useCallback(\r\n      (value) => setTextFieldValue(value),\r\n      [],\r\n    );\r\n\r\n    \r\n\r\n    const options = [\r\n      {label: '', value: 'today'},\r\n      {label: 'Your company', value: 'today'},\r\n      {label: 'How did you find us?', value: 'yesterday'},\r\n      {label: 'You register as', value: 'lastWeek'},\r\n      {label: 'Dear visitor!', value: 'today'},\r\n      {label: 'Date of birth', value: 'yesterday'},\r\n      {label: 'Country', value: 'lastWeek'},\r\n      {label: 'How did you find us 3?', value: 'today'},\r\n      {label: 'Accept Marketing Email', value: 'yesterday'},\r\n      {label: 'Interests', value: 'lastWeek'},\r\n    ];\r\n\r\n    return (\r\n      \r\n<>\r\n  \r\n<Card sectioned title=\" Create attribute\" actions={[{content: 'Add variant'}]}>\r\n          <p>\r\n          Home Attributes Attribute\r\n          </p>\r\n      </Card>\r\n      <Page>\r\n\r\n\r\n     \r\n\r\n\r\n\r\n    <Card sectioned title=\"Create attribute\">\r\n    \r\n    <p>Use Template:</p>\r\n    <Stack distribution=\"fillEvenly\">\r\n\r\n    <Dropdown options={options} onChange={this._onSelect}  placeholder=\"olol\" />\r\n    <p>If you choose a template, the following \r\n      attribute fields will be filled \r\n      <br/>\r\n      automatically. Or you can leave this \r\n      <br/>\r\n      box blank and create your unique field \r\n      <br/>\r\n      by filling in these boxes.</p>\r\n    </Stack>\r\n    <hr/>\r\n    <p>Attribute Properties</p>\r\n    <hr/>\r\n\r\n    <TextField\r\n      label=\"Shipping zone name\"\r\n      value={textFieldValue}\r\n      onChange={handleTextFieldChange}\r\n      placeholder=\"Example: North America, Europe\"\r\n    />\r\n  \r\n    \r\n    </Card>\r\n\r\n\r\n</Page>\r\n\r\n</>\r\n\r\n    );  \r\n  }\r\n}\r\n\r\nexport default AC;"]},"metadata":{},"sourceType":"module"}