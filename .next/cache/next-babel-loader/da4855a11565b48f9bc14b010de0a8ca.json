{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport 'react-dropdown/style.css';\nimport { Card, Tabs, Checkbox, ChoiceList, Button, Heading, EmptyState, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport Dropdown from 'react-dropdown';\nimport AppProvider from './navbar.js';\nexport default function AttMarketing() {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(['hidden']);\n  const handleChange = useCallback(value => setSelected(value), []);\n  const tabs = [{\n    id: 'all-customers-fitted',\n    content: 'All',\n    accessibilityLabel: 'All customers',\n    panelID: 'all-customers-fitted-content'\n  }];\n  return __jsx(React.Fragment, null, __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, {\n    title: tabs[selected].content\n  }, __jsx(\"p\", null, \"Tab \", selected, \" selected\")))), __jsx(Card, {\n    sectioned: true,\n    title: \" Attribute Accept Marketing Email\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/componenteslist\"\n  }, \"Attributes\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(FormLayout, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Properties\"\n  }, __jsx(\"hr\", null), __jsx(TextField, {\n    label: \"Label*:\",\n    placeholder: \"Accept Marketing Email\"\n  }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Code:\",\n    placeholder: \"accept-marketing-email-1\",\n    disabled: true\n  }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Sorting Orders\",\n    type: \"number\"\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n    placeholder: \"Yes/No\",\n    disabled: true\n  }), __jsx(\"br\", null), __jsx(Checkbox, {\n    label: \"Default value\"\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Hide if filled:',\n      value: 'confirmation',\n      helpText: 'Hide this attribute if it was filled before.'\n    }, {\n      label: 'Show on Order grid:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }, {\n      label: 'Show on Customer grid',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n    }],\n    selected: selected,\n    onChange: handleChange\n  })))));\n}","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeMarketingEmail.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","Tabs","Checkbox","ChoiceList","Button","Heading","EmptyState","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Dropdown","AppProvider","AttMarketing","selected","setSelected","handleChange","value","tabs","id","content","accessibilityLabel","panelID","handleTabChange","label","helpText"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,OAAO,0BAAP;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkDC,OAAlD,EAA0DC,UAA1D,EAAsEC,MAAtE,EAA6EC,IAA7E,EAAmFC,KAAnF,EAA0FC,UAA1F,EAAuGC,MAAvG,EAA+GC,iBAA/G,EAAkIC,UAAlI,EAA6IC,KAA7I,EAAoJC,OAApJ,EAA4JC,KAA5J,EAAmKC,UAAnK,EAA+KC,gBAA/K,EAAiMC,mBAAjM,EAAsNC,YAAtN,EAAoOC,aAApO,EAAmPC,SAAnP,EAA8PC,KAA9P,EAAqQC,MAArQ,EAA6QC,IAA7Q,QAAwR,kBAAxR;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,EAA2CC,iBAA3C,EAA8DC,kBAA9D,EAAkFC,4BAAlF,EAAgHC,iBAAhH,EAAmIC,iBAAnI,EAAqJC,yBAArJ,EAA+KC,qBAA/K,QAA2M,wBAA3M;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAGA,eAAe,SAASC,YAAT,GAAuB;AAEpC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0B1C,QAAQ,CAAC,CAAC,QAAD,CAAD,CAAxC;AAEA,QAAM2C,YAAY,GAAG5C,WAAW,CAAE6C,KAAD,IAAWF,WAAW,CAACE,KAAD,CAAvB,EAAgC,EAAhC,CAAhC;AAKA,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,EAAE,EAAE,sBADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,kBAAkB,EAAE,eAHtB;AAIEC,IAAAA,OAAO,EAAE;AAJX,GADW,CAAb;AASA,SAGE,4BACC,MAAC,IAAD,QACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,IAAZ;AAAkB,IAAA,QAAQ,EAAEJ,QAA5B;AAAsC,IAAA,QAAQ,EAAES;AAAhD,KACE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAEL,IAAI,CAACJ,QAAD,CAAJ,CAAeM;AAApC,KACE,yBAAQN,QAAR,cADF,CADF,CADD,CADD,EASF,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACA,MAAC,KAAD;AAAO,IAAA,YAAY,EAAC;AAApB,KACA,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,YADA,EAKA,MAAC,IAAD;AAAM,IAAA,GAAG,EAAC;AAAV,kBALA,EASF,6BATE,CADA,CATE,EAyBI,MAAC,IAAD,QAKN,MAAC,UAAD,QACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,KACA,iBADA,EAGA,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAC;AAFd,IAHA,EAOA,mCAPA,EAQA,iBARA,EAUA,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,WAAW,EAAC,0BAFd;AAGE,IAAA,QAAQ;AAHV,IAVA,EAeA,oHAfA,EAmBE,iBAnBF,EAoBE,MAAC,SAAD;AACA,IAAA,KAAK,EAAC,gBADN;AAEA,IAAA,IAAI,EAAC;AAFL,IApBF,EAwBA,yIAxBA,EA4BA,iBA5BA,EA8BE,0BA9BF,EAgCE,MAAC,QAAD;AAAU,IAAA,WAAW,EAAC,QAAtB;AAA+B,IAAA,QAAQ;AAAvC,IAhCF,EAkCE,iBAlCF,EAmCA,MAAC,QAAD;AACI,IAAA,KAAK,EAAC;AADV,IAnCA,EAuCA,iBAvCA,EAwCA,iBAxCA,EAyCA,MAAC,OAAD,kCAzCA,EA0CA,iBA1CA,EA2CE,iBA3CF,EA8CE,MAAC,UAAD;AACF,IAAA,aAAa,MADX;AAEF,IAAA,OAAO,EAAE,CACP;AACEU,MAAAA,KAAK,EAAE,oBADT;AAEEP,MAAAA,KAAK,EAAE,UAFT;AAGEQ,MAAAA,QAAQ,EACN;AAJJ,KADO,EAOP;AACED,MAAAA,KAAK,EAAE,iBADT;AAEEP,MAAAA,KAAK,EAAE,cAFT;AAGEQ,MAAAA,QAAQ,EACN;AAJJ,KAPO,EAaP;AACED,MAAAA,KAAK,EAAE,qBADT;AAEEP,MAAAA,KAAK,EAAE,UAFT;AAGEQ,MAAAA,QAAQ,EACN;AAJJ,KAbO,EAmBP;AACED,MAAAA,KAAK,EAAE,wBADT;AAEEP,MAAAA,KAAK,EAAE,cAFT;AAGEQ,MAAAA,QAAQ,EACN;AAJJ,KAnBO,EAyBP;AACED,MAAAA,KAAK,EAAE,uBADT;AAEEP,MAAAA,KAAK,EAAE,cAFT;AAGEQ,MAAAA,QAAQ,EACN;AAJJ,KAzBO,CAFP;AAkCF,IAAA,QAAQ,EAAEX,QAlCR;AAmCF,IAAA,QAAQ,EAAEE;AAnCR,IA9CF,CADJ,CALM,CAzBJ,CAHF;AAgID","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport 'react-dropdown/style.css';\r\nimport {Card, Tabs, Checkbox, ChoiceList, Button, Heading,EmptyState, Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport Dropdown from 'react-dropdown';\r\nimport AppProvider from './navbar.js';\r\n\r\n\r\nexport default function AttMarketing(){\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n\r\n \r\n\r\n  const tabs = [\r\n    {\r\n      id: 'all-customers-fitted',\r\n      content: 'All',\r\n      accessibilityLabel: 'All customers',\r\n      panelID: 'all-customers-fitted-content',\r\n    },\r\n  ];\r\n  \r\n  return (\r\n  \r\n  \r\n    <>\r\n     <Card>\r\n      <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\r\n        <Card.Section title={tabs[selected].content}>\r\n          <p>Tab {selected} selected</p>\r\n        </Card.Section>\r\n      </Tabs>\r\n    </Card>\r\n    \r\n  <Card sectioned title=\" Attribute Accept Marketing Email\">\r\n  <Stack distribution=\"leading\">\r\n  <Link url='/Index' >\r\n  Home\r\n  </Link>\r\n           \r\n  <Link url='/componenteslist' >\r\n  Attributes\r\n</Link>\r\n\r\n<p>\r\n  Attribute\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n        <Page>\r\n  \r\n  \r\n       \r\n  \r\n  <FormLayout>\r\n      <Card sectioned title=\"Attribute Properties\">\r\n      <hr/>\r\n\r\n      <TextField\r\n        label=\"Label*:\"\r\n        placeholder=\"Accept Marketing Email\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n  \r\n      <TextField\r\n        label=\"Code:\"\r\n        placeholder=\"accept-marketing-email-1\"\r\n        disabled\r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  30. Let \r\n        it empty for auto generation</p>\r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Sorting Orders\"\r\n        type=\"number\"\r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n        <Dropdown placeholder=\"Yes/No\" disabled />\r\n        \r\n        <br/>\r\n      <Checkbox\r\n          label=\"Default value\"\r\n        />\r\n  \r\n      <br/>\r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n\r\n\r\n  \r\n      </FormLayout>\r\n      \r\n\r\n  </Page>\r\n  \r\n  </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}