{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport 'react-dropdown/style.css';\nimport Dropdown from 'react-dropdown';\nimport React, { Fragment, Component, useCallback, useState, useRef } from \"react\";\nimport { Card, Heading, Button, DataTable, Link, EmptyState, AppProvider, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, AddMajorMonotone, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport AttributeTable from './TablaComponentes';\n\nvar App = function App() {\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attributes\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(\"p\", null, \"Attributes\")), __jsx(Stack, {\n    distribution: \"trailing\"\n  }, __jsx(Link, {\n    url: \"/AttributeCreation\"\n  }, __jsx(Button, {\n    primary: true\n  }, __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(\"p\", null, \"New Attribute\")))))), __jsx(Card, null));\n};\n\n_c = App;\nexport default App;\n\nvar AttList = function AttList(props) {\n  _s();\n\n  var usersData = [{\n    id: 1,\n    code: 'company',\n    label: 'company',\n    Type: 'Text Field',\n    sortingorder: '2',\n    status: 'on',\n    cartpage: 'Yes',\n    resgisterpage: 'Yes',\n    accountpage: 'No',\n    ordergrid: 'Yes',\n    customergrid: 'Yes'\n  }, {\n    id: 2,\n    code: 'company',\n    label: 'company',\n    Type: 'Text Field',\n    sortingorder: '2',\n    status: 'on',\n    cartpage: 'Yes',\n    resgisterpage: 'Yes',\n    accountpage: 'No',\n    ordergrid: 'Yes',\n    customergrid: 'Yes'\n  }, {\n    id: 3,\n    code: 'company',\n    label: 'company',\n    Type: 'Text Field',\n    sortingorder: '2',\n    status: 'on',\n    cartpage: 'Yes',\n    resgisterpage: 'Yes',\n    accountpage: 'No',\n    ordergrid: 'Yes',\n    customergrid: 'Yes'\n  }, {\n    id: 4,\n    code: 'company',\n    label: 'company',\n    Type: 'Text Field',\n    sortingorder: '2',\n    status: 'on',\n    cartpage: 'Yes',\n    resgisterpage: 'Yes',\n    accountpage: 'No',\n    ordergrid: 'Yes',\n    customergrid: 'Yes'\n  }, {\n    id: 5,\n    code: 'company',\n    label: 'company',\n    Type: 'Text Field',\n    sortingorder: '2',\n    status: 'on',\n    cartpage: 'Yes',\n    resgisterpage: 'Yes',\n    accountpage: 'No',\n    ordergrid: 'Yes',\n    customergrid: 'Yes'\n  }, {\n    id: 6,\n    code: 'company',\n    label: 'company',\n    Type: 'Text Field',\n    sortingorder: '2',\n    status: 'on',\n    cartpage: 'Yes',\n    resgisterpage: 'Yes',\n    accountpage: 'No',\n    ordergrid: 'Yes',\n    customergrid: 'Yes'\n  }];\n\n  var _useState = useState(usersData),\n      users = _useState[0],\n      setUsers = _useState[1];\n\n  var deleteUser = function deleteUser(id) {\n    setUsers(users.filter(function (user) {\n      return user.id !== id;\n    }));\n  };\n\n  var data = [['company', 'company', 'Text Field', '2', 'on', '']];\n  var rows2 = [['Yes', 'Yes', 'No', 'Yes', 'Yes']];\n  {\n    /*navbar */\n  }\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attributes\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(\"p\", null, \"Attributes\")), __jsx(Stack, {\n    distribution: \"trailing\"\n  }, __jsx(Link, {\n    url: \"/AttributeCreation\"\n  }, __jsx(Button, {\n    primary: true\n  }, __jsx(Stack, {\n    distribution: \"equalSpacing\"\n  }, __jsx(\"p\", null, \"New Attribute\")))))), __jsx(Page, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Code\"), __jsx(\"th\", null, \"Label\"), __jsx(\"th\", null, \"Type\"), __jsx(\"th\", null, \"Sorting Order\"), __jsx(\"th\", null, \"Status\"), __jsx(\"th\", null, \"Cart page\"), __jsx(\"th\", null, \"Register page\"), __jsx(\"th\", null, \"Account page\"), __jsx(\"th\", null, \"Order grid\"), __jsx(\"th\", null, \"Customer grid\"), __jsx(\"th\", null, \"Action\"))), __jsx(\"tbody\", null, users.length > 0 ? users.map(function (user) {\n    return __jsx(\"tr\", {\n      key: user.id\n    }, __jsx(\"td\", null, \"1\"), __jsx(\"td\", null, \"2\"), __jsx(\"td\", null, \"3\"), __jsx(\"td\", null, \"4\"), __jsx(\"td\", null, \"5\"), __jsx(\"td\", null, \"6\"), __jsx(\"td\", null, \"7\"), __jsx(\"td\", null, \"8\"), __jsx(\"td\", null, \"9\"), __jsx(\"td\", null, \"10\"), __jsx(\"td\", null, __jsx(\"button\", {\n      className: \"button muted-button\"\n    }, \"Edit\"), __jsx(\"button\", _defineProperty({\n      onClick: function onClick() {\n        return deleteUser(user.id);\n      },\n      className: \"button muted-button\"\n    }, \"className\", \"button muted-button\"), \"Delete\")));\n  }) : __jsx(\"tr\", null, __jsx(\"td\", {\n    colSpan: 10\n  }, \"No users\")))))), __jsx(\"br\", null), __jsx(\"br\", null));\n};\n\n_s(AttList, \"XazttccMqeH8BulQh5avP1/e/fY=\");\n\n_c2 = AttList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AttList\");","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/componenteslist.js"],"names":["Dropdown","React","Fragment","Component","useCallback","useState","useRef","Card","Heading","Button","DataTable","Link","EmptyState","AppProvider","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Redirect","ArrowLeftMinor","AddMajorMonotone","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","AttributeTable","App","AttList","props","usersData","id","code","label","Type","sortingorder","status","cartpage","resgisterpage","accountpage","ordergrid","customergrid","users","setUsers","deleteUser","filter","user","data","rows2","length","map"],"mappings":"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","sourcesContent":["import 'react-dropdown/style.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport React, {Fragment, Component, useCallback, useState, useRef} from \"react\";\r\nimport {Card,Heading, Button, DataTable ,Link,EmptyState, AppProvider,Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, AddMajorMonotone, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport AttributeTable from './TablaComponentes'\r\n\r\nconst App = () => {\r\n  return (\r\n<>\r\n    <Card sectioned title=\"Attributes\">\r\n       \r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>         \r\n        <p>Attributes</p>\r\n    </Stack>             \r\n    <Stack distribution=\"trailing\">\r\n\r\n        <Link url='/AttributeCreation'>\r\n          <Button primary>\r\n            <Stack distribution=\"equalSpacing\">\r\n              \r\n              <p>New Attribute</p>\r\n            </Stack>\r\n          </Button>\r\n        </Link> \r\n\r\n    </Stack>   \r\n  </Card>\r\n\r\n    <Card>\r\n\r\n    </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\nconst AttList = (props) => {\r\n\r\n  const usersData = [\r\n    { id: 1, code: 'company', label: 'company', Type: 'Text Field', sortingorder:'2', status:'on', cartpage:'Yes', resgisterpage:'Yes', accountpage:'No', ordergrid:'Yes', customergrid:'Yes'},\r\n    { id: 2, code: 'company', label: 'company', Type: 'Text Field', sortingorder:'2', status:'on', cartpage:'Yes', resgisterpage:'Yes', accountpage:'No', ordergrid:'Yes', customergrid:'Yes'},\r\n    { id: 3, code: 'company', label: 'company', Type: 'Text Field', sortingorder:'2', status:'on', cartpage:'Yes', resgisterpage:'Yes', accountpage:'No', ordergrid:'Yes', customergrid:'Yes'},\r\n    { id: 4, code: 'company', label: 'company', Type: 'Text Field', sortingorder:'2', status:'on', cartpage:'Yes', resgisterpage:'Yes', accountpage:'No', ordergrid:'Yes', customergrid:'Yes'},\r\n    { id: 5, code: 'company', label: 'company', Type: 'Text Field', sortingorder:'2', status:'on', cartpage:'Yes', resgisterpage:'Yes', accountpage:'No', ordergrid:'Yes', customergrid:'Yes'},\r\n    { id: 6, code: 'company', label: 'company', Type: 'Text Field', sortingorder:'2', status:'on', cartpage:'Yes', resgisterpage:'Yes', accountpage:'No', ordergrid:'Yes', customergrid:'Yes'},\r\n\r\n  ]\r\n  const [users, setUsers] = useState(usersData)\r\n\r\n  const deleteUser = (id) => {\r\n    setUsers(users.filter((user) => user.id !== id))\r\n  }\r\n\r\nconst data = [\r\n  ['company','company','Text Field','2','on',''],\r\n];\r\n\r\nconst rows2 = [\r\n  ['Yes','Yes','No','Yes','Yes'],\r\n];\r\n\r\n\r\n\r\n  {/*navbar */}\r\n\r\n\r\n    return(\r\n<>\r\n  <Card sectioned title=\"Attributes\">\r\n       \r\n    <Stack distribution=\"leading\">\r\n      <Link url='/Index' >\r\n        Home\r\n      </Link>         \r\n        <p>Attributes</p>\r\n    </Stack>             \r\n    <Stack distribution=\"trailing\">\r\n\r\n        <Link url='/AttributeCreation'>\r\n          <Button primary>\r\n            <Stack distribution=\"equalSpacing\">\r\n              \r\n              <p>New Attribute</p>\r\n            </Stack>\r\n          </Button>\r\n        </Link> \r\n\r\n    </Stack>   \r\n  </Card>\r\n\r\n<Page>\r\n<Card sectioned>\r\n<table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Code</th>\r\n                    <th>Label</th>\r\n                    <th>Type</th>\r\n                    <th>Sorting Order</th>\r\n                    <th>Status</th>\r\n                    \r\n                      <th>Cart page</th>\r\n                      <th>Register page</th>\r\n                      <th>Account page</th>\r\n                      <th>Order grid</th>\r\n                      <th>Customer grid</th>\r\n                   \r\n                    <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {users.length > 0 ? (users.map((user) => (\r\n                        <tr key={user.id}>\r\n                      <td>1</td>\r\n                      <td>2</td>\r\n                      <td>3</td>\r\n                      <td>4</td>\r\n                      <td>5</td>\r\n                      <td>6</td>\r\n                      <td>7</td>\r\n                      <td>8</td>\r\n                      <td>9</td>\r\n                      <td>10</td>\r\n                      <td>\r\n                    <button className=\"button muted-button\">Edit</button>\r\n                    <button  onClick={() => deleteUser(user.id)}\r\n  className=\"button muted-button\" className=\"button muted-button\">Delete</button>\r\n                    </td>\r\n                        </tr>\r\n                      ))\r\n                      ):(\r\n                        <tr>\r\n                          <td colSpan={10}>No users</td>\r\n                        </tr>\r\n                      )}\r\n                      \r\n                </tbody>\r\n            </table>\r\n            </Card>\r\n \r\n</Page>\r\n<br/>\r\n<br/>\r\n</>\r\n\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}