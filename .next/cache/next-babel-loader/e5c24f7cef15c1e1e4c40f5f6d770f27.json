{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport 'react-dropdown/style.css';\nimport { Card, Checkbox, ChoiceList, Button, Heading, EmptyState, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport Dropdown from 'react-dropdown';\nimport AppProvider from './navbar.js';\nexport default function AttDateBirth() {\n  _s();\n\n  var _useState = useState(['hidden']),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n\n  var _useState2 = useState(''),\n      textFieldValue = _useState2[0],\n      setTextFieldValue = _useState2[1];\n\n  var handleTextFieldChange = useCallback(function (value) {\n    return setTextFieldValue(value);\n  }, []);\n\n  var _useState3 = useState(''),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var handleChangePh = useCallback(function (newValue) {\n    return setValue(newValue);\n  }, []);\n\n  var _useState4 = useState(''),\n      valueFormat = _useState4[0],\n      setValueFormat = _useState4[1];\n\n  var handleChangeFornmat = useCallback(function (newValueFormat) {\n    return setValueFormat(newValueFormat);\n  }, []);\n  var handleChangeNo = useCallback(function (newValueNo) {\n    return setValueNo(newValueNo);\n  }, []);\n\n  var _useState5 = useState('1'),\n      valueNo = _useState5[0],\n      setValueNo = _useState5[1];\n\n  var _useState6 = useState(false),\n      checked = _useState6[0],\n      setChecked = _useState6[1];\n\n  var handleChangeSingle = useCallback(function (newChecked) {\n    return setChecked(newChecked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \" Attribute Date of birth\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/AttributesTemplates\"\n  }, \"Attributes Templates\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(FormLayout, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Properties\"\n  }, __jsx(\"hr\", null), __jsx(TextField, {\n    label: \"Label*:\",\n    value: textFieldValue,\n    onChange: handleTextFieldChange,\n    placeholder: \"Date of birth\"\n  }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Code:\",\n    placeholder: \"date-of-birth\",\n    disabled: true\n  }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Sorting Order:\",\n    type: \"number\",\n    value: valueNo,\n    onChange: handleChangeNo\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n    placeholder: \"Date\",\n    disabled: true\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Default value:\",\n    type: \"date\",\n    id: \"date\",\n    defaultValue: \"2017-05-24\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Placeholder:\",\n    value: value,\n    onChange: handleChangePh\n  }), __jsx(\"p\", null, \"The placeholder specifies a short hint that describes the expected value of this field\"), __jsx(\"br\", null), __jsx(Checkbox, {\n    label: \"Values Required\",\n    checked: checked,\n    onChange: handleChangeSingle\n  }), __jsx(\"p\", null, \"Tick if this attribute is required to be filled by your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Format Options:\",\n    value: valueFormat,\n    onChange: handleChangeFornmat\n  }), __jsx(\"p\", null, \"You need to chose default date again to save with new formatd\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Hide if filled:',\n      value: 'confirmation',\n      helpText: 'Hide this attribute if it was filled before.'\n    }, {\n      label: 'Show on Order grid:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }, {\n      label: 'Show on Customer grid',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n    }],\n    selected: selected,\n    onChange: handleChange\n  })))));\n}\n\n_s(AttDateBirth, \"YiI8w+yC8KRgye2+wkkXDkB/L9M=\");\n\n_c = AttDateBirth;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttDateBirth\");","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeDateofBirth.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","Checkbox","ChoiceList","Button","Heading","EmptyState","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Dropdown","AppProvider","AttDateBirth","selected","setSelected","handleChange","value","textFieldValue","setTextFieldValue","handleTextFieldChange","setValue","handleChangePh","newValue","valueFormat","setValueFormat","handleChangeFornmat","newValueFormat","handleChangeNo","newValueNo","setValueNo","valueNo","checked","setChecked","handleChangeSingle","newChecked","shrink","label","helpText"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport 'react-dropdown/style.css';\r\nimport {Card, Checkbox, ChoiceList, Button, Heading,EmptyState, Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport Dropdown from 'react-dropdown';\r\nimport AppProvider from './navbar.js';\r\n\r\n\r\nexport default function AttDateBirth(){\r\n\r\n\r\n\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n \r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => setTextFieldValue(value),\r\n    [],\r\n  );\r\n\r\n  const [value, setValue] = useState('');\r\n  const handleChangePh = useCallback((newValue) => setValue(newValue), []);\r\n\r\n  const [valueFormat, setValueFormat] = useState('');\r\n  const handleChangeFornmat = useCallback((newValueFormat) => setValueFormat(newValueFormat), []);\r\n  \r\n  const handleChangeNo = useCallback((newValueNo) => setValueNo(newValueNo), []);\r\n  const [valueNo, setValueNo] = useState('1');\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const handleChangeSingle = useCallback((newChecked) => setChecked(newChecked), []);\r\n  \r\n  return (\r\n  \r\n  \r\n    <>\r\n\r\n\r\n  <Card sectioned title=\" Attribute Date of birth\">\r\n  <Stack distribution=\"leading\">\r\n  <Link url='/Index' >\r\n  Home\r\n  </Link>\r\n           \r\n  <Link url='/AttributesTemplates' >\r\n  Attributes Templates\r\n</Link>\r\n\r\n<p>\r\n  Attribute\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n        <Page>\r\n  \r\n  \r\n       \r\n  \r\n  \r\n  <FormLayout>\r\n      <Card sectioned title=\"Attribute Properties\">\r\n      <hr/>\r\n\r\n      <TextField\r\n        label=\"Label*:\"\r\n        value={textFieldValue}\r\n        onChange={handleTextFieldChange}\r\n        placeholder=\"Date of birth\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n  \r\n      <TextField\r\n        label=\"Code:\"\r\n        placeholder=\"date-of-birth\"\r\n        disabled\r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  30. Let \r\n        it empty for auto generation</p>\r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Sorting Order:\"\r\n        type=\"number\"\r\n        value={valueNo}\r\n        onChange={handleChangeNo}\r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n        <Dropdown placeholder=\"Date\" disabled />\r\n        <br/>\r\n   \r\n        <TextField\r\n        label=\"Default value:\"\r\n        type=\"date\"\r\n        id=\"date\"\r\n        defaultValue=\"2017-05-24\"\r\n         InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n      <TextField\r\n        label=\"Placeholder:\"\r\n        value={value}\r\n        onChange={handleChangePh}\r\n       \r\n      />\r\n      <p>The placeholder specifies a short hint \r\n          that describes the expected value of \r\n          this field</p>\r\n          <br/>\r\n\r\n      <Checkbox\r\n          label=\"Values Required\"\r\n          checked={checked}\r\n          onChange={handleChangeSingle}\r\n        />\r\n        <p>Tick if this attribute is required to be \r\n            filled by your customers</p>\r\n            <br/>\r\n\r\n        <TextField\r\n        label=\"Format Options:\"\r\n        value={valueFormat}\r\n        onChange={handleChangeFornmat}\r\n      />\r\n      <p>You need to chose default date again to \r\n          save with new formatd</p>\r\n    \r\n  \r\n      <br/>\r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n\r\n\r\n  \r\n      </FormLayout>\r\n  \r\n  </Page>\r\n  \r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}