{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useCallback, useState, useRef } from \"react\";\nimport 'react-dropdown/style.css';\nimport { Card, Form, Tabs, Checkbox, ChoiceList, AppProvider, Button, Heading, EmptyState, Layout, Page, Stack, ActionList, Avatar, ContextualSaveBar, FormLayout, Frame, Loading, Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link } from \"@shopify/polaris\";\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone, TroubleshootMajorMonotone, SettingsMajorMonotone } from '@shopify/polaris-icons';\nimport Dropdown from 'react-dropdown';\nexport default function AttHow() {\n  _s();\n\n  var _useState = useState(0),\n      selectedTab = _useState[0],\n      setSelectedTab = _useState[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelectedTab(selectedTabIndex);\n  }, []);\n  var tabs = [{\n    id: 'FormHow3',\n    content: 'Properties',\n    accessibilityLabel: 'All customers',\n    panelID: 'all-customers-content'\n  }, {\n    id: 'HowOptions',\n    content: 'Manage Options',\n    accessibilityLabel: 'All customers',\n    panelID: 'all-customers-content'\n  }];\n\n  var _useState2 = useState(['hidden']),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var handleChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n\n  var _useState3 = useState(''),\n      textFieldValue = _useState3[0],\n      setTextFieldValue = _useState3[1];\n\n  var handleTextFieldChange = useCallback(function (value) {\n    return setTextFieldValue(value);\n  }, []);\n  var handleChangeWt = useCallback(function (newValueWt) {\n    return setValueWt(newValueWt);\n  }, []);\n\n  var _useState4 = useState('1'),\n      valueWt = _useState4[0],\n      setValueWt = _useState4[1];\n\n  var handleChangeHt = useCallback(function (newValueHt) {\n    return setValueHt(newValueHt);\n  }, []);\n\n  var _useState5 = useState('1'),\n      valueHt = _useState5[0],\n      setValueHt = _useState5[1];\n\n  var handleChangeNo = useCallback(function (newValueNo) {\n    return setValueNo(newValueNo);\n  }, []);\n\n  var _useState6 = useState('1'),\n      valueNo = _useState6[0],\n      setValueNo = _useState6[1];\n\n  var _useState7 = useState(true),\n      checked = _useState7[0],\n      setChecked = _useState7[1];\n\n  var handleChangeSingle = useCallback(function (newChecked) {\n    return setChecked(newChecked);\n  }, []);\n  {\n    /*navbar */\n  }\n  var skipToContentRef = useRef(null);\n\n  var _useState8 = useState(false),\n      toastActive = _useState8[0],\n      setToastActive = _useState8[1];\n\n  var _useState9 = useState(false),\n      isLoading = _useState9[0],\n      setIsLoading = _useState9[1];\n\n  var _useState10 = useState(false),\n      isDirty = _useState10[0],\n      setIsDirty = _useState10[1];\n\n  var _useState11 = useState(false),\n      searchActive = _useState11[0],\n      setSearchActive = _useState11[1];\n\n  var _useState12 = useState(''),\n      searchValue = _useState12[0],\n      setSearchValue = _useState12[1];\n\n  var _useState13 = useState(false),\n      userMenuActive = _useState13[0],\n      setUserMenuActive = _useState13[1];\n\n  var _useState14 = useState(false),\n      mobileNavigationActive = _useState14[0],\n      setMobileNavigationActive = _useState14[1];\n\n  var _useState15 = useState(false),\n      modalActive = _useState15[0],\n      setModalActive = _useState15[1];\n\n  var _useState16 = useState(),\n      nameFieldValue = _useState16[0],\n      setNameFieldValue = _useState16[1];\n\n  var _useState17 = useState(),\n      emailFieldValue = _useState17[0],\n      setEmailFieldValue = _useState17[1];\n\n  var _useState18 = useState(),\n      storeName = _useState18[0],\n      setStoreName = _useState18[1];\n\n  var _useState19 = useState(''),\n      supportSubject = _useState19[0],\n      setSupportSubject = _useState19[1];\n\n  var _useState20 = useState(''),\n      supportMessage = _useState20[0],\n      setSupportMessage = _useState20[1];\n\n  var handleSubjectChange = useCallback(function (value) {\n    return setSupportSubject(value);\n  }, []);\n  var handleMessageChange = useCallback(function (value) {\n    return setSupportMessage(value);\n  }, []);\n  var handleDiscard = useCallback(function () {\n    setEmailFieldValue(defaultState.current.emailFieldValue);\n    setNameFieldValue(defaultState.current.nameFieldValue);\n    setIsDirty(false);\n  }, []);\n  var handleSave = useCallback(function () {\n    defaultState.current.nameFieldValue = nameFieldValue;\n    defaultState.current.emailFieldValue = emailFieldValue;\n    setIsDirty(false);\n    setToastActive(true);\n    setStoreName(defaultState.current.nameFieldValue);\n  }, [emailFieldValue, nameFieldValue]);\n  var handleNameFieldChange = useCallback(function (value) {\n    setNameFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  var handleEmailFieldChange = useCallback(function (value) {\n    setEmailFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  var handleSearchResultsDismiss = useCallback(function () {\n    setSearchActive(false);\n    setSearchValue('');\n  }, []);\n  var handleSearchFieldChange = useCallback(function (value) {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n  var toggleToastActive = useCallback(function () {\n    return setToastActive(function (toastActive) {\n      return !toastActive;\n    });\n  }, []);\n  var toggleUserMenuActive = useCallback(function () {\n    return setUserMenuActive(function (userMenuActive) {\n      return !userMenuActive;\n    });\n  }, []);\n  var toggleMobileNavigationActive = useCallback(function () {\n    return setMobileNavigationActive(function (mobileNavigationActive) {\n      return !mobileNavigationActive;\n    });\n  }, []);\n  var toggleIsLoading = useCallback(function () {\n    return setIsLoading(function (isLoading) {\n      return !isLoading;\n    });\n  }, []);\n  var toggleModalActive = useCallback(function () {\n    return setModalActive(function (modalActive) {\n      return !modalActive;\n    });\n  }, []);\n  var toastMarkup = toastActive ? __jsx(Toast, {\n    onDismiss: toggleToastActive,\n    content: \"Changes saved\"\n  }) : null;\n  var userMenuActions = [{\n    items: [{\n      content: 'Community forums'\n    }]\n  }];\n  var contextualSaveBarMarkup = isDirty ? __jsx(ContextualSaveBar, {\n    message: \"Unsaved changes\",\n    saveAction: {\n      onAction: handleSave\n    },\n    discardAction: {\n      onAction: handleDiscard\n    }\n  }) : null;\n\n  var topBarMarkup = __jsx(TopBar, {\n    showNavigationToggle: true,\n    searchResultsVisible: searchActive,\n    onSearchResultsDismiss: handleSearchResultsDismiss,\n    onNavigationToggle: toggleMobileNavigationActive\n  });\n\n  var navigationMarkup = __jsx(Navigation, {\n    location: \"/\"\n  }, __jsx(Navigation.Section, {\n    separator: true,\n    title: \"Dashboard\",\n    items: [{\n      url: './Index',\n      label: 'Dashboard',\n      icon: HomeMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      url: './componenteslist',\n      label: 'Attributes',\n      icon: MobileHamburgerMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      url: './AttributesTemplates',\n      label: 'Attribute Templates',\n      icon: BankMajorMonotone,\n      onClick: toggleIsLoading\n    }, {\n      label: 'Theme Installer',\n      icon: TroubleshootMajorMonotone,\n      onClick: toggleIsLoading\n    }]\n  }));\n\n  var loadingMarkup = isLoading ? __jsx(Loading, null) : null;\n\n  var skipToContentTarget = __jsx(\"a\", {\n    id: \"SkipToContentTarget\",\n    ref: skipToContentRef,\n    tabIndex: -1\n  });\n\n  var actualPageMarkup = __jsx(React.Fragment, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute How did you find us?\"\n  }, __jsx(Stack, {\n    distribution: \"leading\"\n  }, __jsx(Link, {\n    url: \"/Index\"\n  }, \"Home\"), __jsx(Link, {\n    url: \"/AttributesTemplates\"\n  }, \"Attributes Templates\"), __jsx(\"p\", null, \"Attribute\"))), __jsx(Page, null, __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selectedTab,\n    onSelect: handleTabChange\n  }, __jsx(Card.Section, null, __jsx(Form, null, __jsx(Card, {\n    sectioned: true,\n    title: \"Attribute Properties\"\n  }, __jsx(\"hr\", null), __jsx(TextField, {\n    label: \"Label*:\",\n    value: textFieldValue,\n    onChange: handleTextFieldChange,\n    placeholder: \"How did you fins us?\"\n  }), __jsx(\"p\", null, \"Attribute label\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Code:\",\n    placeholder: \"how-find\",\n    disabled: true\n  }), __jsx(\"p\", null, \"For internal use. Must be unique with no spaces and length  <= 30. Let it empty for auto generation\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Sorting Order:\",\n    type: \"number\",\n    value: valueNo,\n    onChange: handleChangeNo\n  }), __jsx(\"p\", null, \"Attributes are sorted in ascending order (eg: Attribute with sorting order 1 will be displayed on top of Attribute 2)\"), __jsx(\"br\", null), __jsx(\"p\", null, \"Type*:\"), __jsx(Dropdown, {\n    placeholder: \"Single Radio Select with Image\",\n    disabled: true\n  }), __jsx(\"br\", null), __jsx(Checkbox, {\n    label: \"Values Required\",\n    checked: checked,\n    onChange: handleChangeSingle,\n    disabled: true\n  }), __jsx(\"p\", null, \"Tick if this attribute is required to be filled by your customers\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Image Width:\",\n    type: \"number\",\n    value: valueWt,\n    onChange: handleChangeWt\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Image Height:\",\n    type: \"number\",\n    value: valueHt,\n    onChange: handleChangeHt\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Heading, null, \"Attribute Configuration\"), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: 'Show on Cart page:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on cart page.'\n    }, {\n      label: 'Hide if filled:',\n      value: 'confirmation',\n      helpText: 'Hide this attribute if it was filled before.'\n    }, {\n      label: 'Show on Order grid:',\n      value: 'shipping',\n      helpText: 'Tick if you want to use this attribute on order grid in app admin.'\n    }, {\n      label: 'Show on Register page:',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on register page.'\n    }, {\n      label: 'Show on Customer grid',\n      value: 'confirmation',\n      helpText: 'Tick if you want to use this attribute on customer grid in app admin'\n    }],\n    selected: selected,\n    onChange: handleChange\n  })))))), __jsx(\"br\", null)));\n\n  var loadingPageMarkup = __jsx(SkeletonPage, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(TextContainer, null, __jsx(SkeletonDisplayText, {\n    size: \"small\"\n  }), __jsx(SkeletonBodyText, {\n    lines: 9\n  }))))));\n\n  var pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  var modalMarkup = __jsx(Modal, {\n    open: modalActive,\n    onClose: toggleModalActive,\n    title: \"Contact support\",\n    primaryAction: {\n      content: 'Send',\n      onAction: toggleModalActive\n    }\n  }, __jsx(Modal.Section, null, __jsx(FormLayout, null, __jsx(TextField, {\n    label: \"Subject\",\n    value: supportSubject,\n    onChange: handleSubjectChange\n  }), __jsx(TextField, {\n    label: \"Message\",\n    value: supportMessage,\n    onChange: handleMessageChange,\n    multiline: true\n  }))));\n\n  var theme = {\n    colors: {\n      topBar: {\n        background: '#fff'\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(AppProvider, {\n    theme: theme,\n    i18n: {\n      Polaris: {\n        Avatar: {\n          label: 'Avatar',\n          labelWithInitials: 'Avatar with initials {initials}'\n        },\n        ContextualSaveBar: {\n          save: 'Save',\n          discard: 'Discard'\n        },\n        TextField: {\n          characterCount: '{count} characters'\n        },\n        TopBar: {\n          toggleMenuLabel: 'Toggle menu',\n          SearchField: {\n            clearButtonLabel: 'Clear',\n            search: 'Search'\n          }\n        },\n        Modal: {\n          iFrameTitle: 'body markup'\n        },\n        Frame: {\n          skipToContent: 'Skip to content',\n          Navigation: {\n            closeMobileNavigationLabel: 'Close navigation'\n          }\n        }\n      }\n    }\n  }, __jsx(Frame, {\n    topBar: topBarMarkup,\n    navigation: navigationMarkup,\n    showMobileNavigation: mobileNavigationActive,\n    onNavigationDismiss: toggleMobileNavigationActive,\n    skipToContentTarget: skipToContentRef.current\n  }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n}\n\n_s(AttHow, \"G7jrNyCti7IDYRq1cgaDAVYcxBY=\");\n\n_c = AttHow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttHow\");","map":{"version":3,"sources":["C:/Users/LENOVO THINKPAD/Documents/react_programs/ca-app/pages/AttributeHow.js"],"names":["React","Fragment","useCallback","useState","useRef","Card","Form","Tabs","Checkbox","ChoiceList","AppProvider","Button","Heading","EmptyState","Layout","Page","Stack","ActionList","Avatar","ContextualSaveBar","FormLayout","Frame","Loading","Modal","Navigation","SkeletonBodyText","SkeletonDisplayText","SkeletonPage","TextContainer","TextField","Toast","TopBar","Link","Redirect","ArrowLeftMinor","NoteMajorMonotone","HomeMajorMonotone","OrdersMajorTwotone","MobileHamburgerMajorMonotone","ListMajorMonotone","BankMajorMonotone","TroubleshootMajorMonotone","SettingsMajorMonotone","Dropdown","AttHow","selectedTab","setSelectedTab","handleTabChange","selectedTabIndex","tabs","id","content","accessibilityLabel","panelID","selected","setSelected","handleChange","value","textFieldValue","setTextFieldValue","handleTextFieldChange","handleChangeWt","newValueWt","setValueWt","valueWt","handleChangeHt","newValueHt","setValueHt","valueHt","handleChangeNo","newValueNo","setValueNo","valueNo","checked","setChecked","handleChangeSingle","newChecked","skipToContentRef","toastActive","setToastActive","isLoading","setIsLoading","isDirty","setIsDirty","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","modalActive","setModalActive","nameFieldValue","setNameFieldValue","emailFieldValue","setEmailFieldValue","storeName","setStoreName","supportSubject","setSupportSubject","supportMessage","setSupportMessage","handleSubjectChange","handleMessageChange","handleDiscard","defaultState","current","handleSave","handleNameFieldChange","handleEmailFieldChange","handleSearchResultsDismiss","handleSearchFieldChange","length","toggleToastActive","toggleUserMenuActive","toggleMobileNavigationActive","toggleIsLoading","toggleModalActive","toastMarkup","userMenuActions","items","contextualSaveBarMarkup","onAction","topBarMarkup","navigationMarkup","url","label","icon","onClick","loadingMarkup","skipToContentTarget","actualPageMarkup","helpText","loadingPageMarkup","pageMarkup","modalMarkup","theme","colors","topBar","background","height","Polaris","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel"],"mappings":"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","sourcesContent":["import React, {Fragment, useCallback, useState, useRef} from \"react\";\r\nimport 'react-dropdown/style.css';\r\nimport {Card, Form, Tabs, Checkbox, ChoiceList, AppProvider,Button, Heading,EmptyState, Layout,Page, Stack, ActionList,  Avatar, ContextualSaveBar, FormLayout,Frame, Loading,Modal, Navigation, SkeletonBodyText, SkeletonDisplayText, SkeletonPage, TextContainer, TextField, Toast, TopBar, Link} from \"@shopify/polaris\";\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport {ArrowLeftMinor, NoteMajorMonotone, HomeMajorMonotone, OrdersMajorTwotone, MobileHamburgerMajorMonotone, ListMajorMonotone, BankMajorMonotone,TroubleshootMajorMonotone,SettingsMajorMonotone} from '@shopify/polaris-icons';\r\nimport Dropdown from 'react-dropdown';\r\n\r\n\r\nexport default function AttHow(){\r\n\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (selectedTabIndex) => setSelectedTab(selectedTabIndex),\r\n    [],\r\n  );\r\n  \r\n  const tabs = [\r\n    {\r\n      id: 'FormHow3',\r\n      content: 'Properties',\r\n      accessibilityLabel: 'All customers',\r\n      panelID: 'all-customers-content',\r\n    },\r\n    {\r\n      id: 'HowOptions',\r\n      content: 'Manage Options',\r\n      accessibilityLabel: 'All customers',\r\n      panelID: 'all-customers-content',\r\n    },\r\n   \r\n  ];\r\n\r\n  const [selected, setSelected] = useState(['hidden']);\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n \r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => setTextFieldValue(value),\r\n    [],\r\n  );\r\n\r\n  const handleChangeWt = useCallback((newValueWt) => setValueWt(newValueWt), []);\r\n  const [valueWt, setValueWt] = useState('1');\r\n\r\n  const handleChangeHt = useCallback((newValueHt) => setValueHt(newValueHt), []);\r\n  const [valueHt, setValueHt] = useState('1');\r\n\r\n  const handleChangeNo = useCallback((newValueNo) => setValueNo(newValueNo), []);\r\n  const [valueNo, setValueNo] = useState('1');\r\n\r\n  const [checked, setChecked] = useState(true);\r\n  const handleChangeSingle = useCallback((newChecked) => setChecked(newChecked), []);\r\n  \r\n    {/*navbar */}\r\n\r\n\r\n const skipToContentRef = useRef(null);\r\n\r\n const [toastActive, setToastActive] = useState(false);\r\n const [isLoading, setIsLoading] = useState(false);\r\n const [isDirty, setIsDirty] = useState(false);\r\n const [searchActive, setSearchActive] = useState(false);\r\n const [searchValue, setSearchValue] = useState('');\r\n const [userMenuActive, setUserMenuActive] = useState(false);\r\n const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\r\n const [modalActive, setModalActive] = useState(false);\r\n const [nameFieldValue, setNameFieldValue] = useState(\r\n );\r\n const [emailFieldValue, setEmailFieldValue] = useState(\r\n );\r\n const [storeName, setStoreName] = useState(\r\n );\r\n const [supportSubject, setSupportSubject] = useState('');\r\n const [supportMessage, setSupportMessage] = useState('');\r\n\r\n const handleSubjectChange = useCallback(\r\n   (value) => setSupportSubject(value),\r\n   [],\r\n );\r\n const handleMessageChange = useCallback(\r\n   (value) => setSupportMessage(value),\r\n   [],\r\n );\r\n const handleDiscard = useCallback(() => {\r\n   setEmailFieldValue(defaultState.current.emailFieldValue);\r\n   setNameFieldValue(defaultState.current.nameFieldValue);\r\n   setIsDirty(false);\r\n }, []);\r\n const handleSave = useCallback(() => {\r\n   defaultState.current.nameFieldValue = nameFieldValue;\r\n   defaultState.current.emailFieldValue = emailFieldValue;\r\n\r\n   setIsDirty(false);\r\n   setToastActive(true);\r\n   setStoreName(defaultState.current.nameFieldValue);\r\n }, [emailFieldValue, nameFieldValue]);\r\n const handleNameFieldChange = useCallback((value) => {\r\n   setNameFieldValue(value);\r\n   value && setIsDirty(true);\r\n }, []);\r\n const handleEmailFieldChange = useCallback((value) => {\r\n   setEmailFieldValue(value);\r\n   value && setIsDirty(true);\r\n }, []);\r\n const handleSearchResultsDismiss = useCallback(() => {\r\n   setSearchActive(false);\r\n   setSearchValue('');\r\n }, []);\r\n const handleSearchFieldChange = useCallback((value) => {\r\n   setSearchValue(value);\r\n   setSearchActive(value.length > 0);\r\n }, []);\r\n const toggleToastActive = useCallback(\r\n   () => setToastActive((toastActive) => !toastActive),\r\n   [],\r\n );\r\n const toggleUserMenuActive = useCallback(\r\n   () => setUserMenuActive((userMenuActive) => !userMenuActive),\r\n   [],\r\n );\r\n const toggleMobileNavigationActive = useCallback(\r\n   () =>\r\n     setMobileNavigationActive(\r\n       (mobileNavigationActive) => !mobileNavigationActive,\r\n     ),\r\n   [],\r\n );\r\n const toggleIsLoading = useCallback(\r\n   () => setIsLoading((isLoading) => !isLoading),\r\n   [],\r\n );\r\n const toggleModalActive = useCallback(\r\n   () => setModalActive((modalActive) => !modalActive),\r\n   [],\r\n );\r\n\r\n const toastMarkup = toastActive ? (\r\n   <Toast onDismiss={toggleToastActive} content=\"Changes saved\" />\r\n ) : null;\r\n\r\n const userMenuActions = [\r\n   {\r\n     items: [{content: 'Community forums'}],\r\n   },\r\n ];\r\n \r\n\r\n const contextualSaveBarMarkup = isDirty ? (\r\n   <ContextualSaveBar\r\n     message=\"Unsaved changes\"\r\n     saveAction={{\r\n       onAction: handleSave,\r\n     }}\r\n     discardAction={{\r\n       onAction: handleDiscard,\r\n     }}\r\n   />\r\n ) : null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n const topBarMarkup = (\r\n   <TopBar\r\n     showNavigationToggle\r\n     searchResultsVisible={searchActive}  \r\n     onSearchResultsDismiss={handleSearchResultsDismiss}\r\n     onNavigationToggle={toggleMobileNavigationActive}\r\n   />\r\n );\r\n\r\n \r\n const navigationMarkup = (\r\n   <Navigation location=\"/\">\r\n    \r\n     <Navigation.Section\r\n       separator\r\n       title=\"Dashboard\"\r\n       items={[\r\n\r\n         {\r\n           url: './Index',\r\n           label: 'Dashboard',\r\n           icon: HomeMajorMonotone,\r\n           onClick: toggleIsLoading,\r\n         },\r\n         {\r\n           url: './componenteslist',\r\n           label: 'Attributes',\r\n           icon: MobileHamburgerMajorMonotone,\r\n           onClick: toggleIsLoading,\r\n         },\r\n         {\r\n           url: './AttributesTemplates',\r\n           label: 'Attribute Templates',\r\n           icon: BankMajorMonotone,\r\n           onClick: toggleIsLoading,\r\n         },\r\n         {\r\n           label: 'Theme Installer',\r\n           icon: TroubleshootMajorMonotone,\r\n           onClick: toggleIsLoading,\r\n         },\r\n       ]}\r\n      \r\n     />\r\n   </Navigation>\r\n );\r\n\r\n const loadingMarkup = isLoading ? <Loading /> : null;\r\n\r\n const skipToContentTarget = (\r\n   <a id=\"SkipToContentTarget\" ref={skipToContentRef} tabIndex={-1} />\r\n );\r\n\r\n const actualPageMarkup = (\r\n\r\n <>\r\n \r\n\r\n  <Card sectioned title=\"Attribute How did you find us?\">\r\n  <Stack distribution=\"leading\">\r\n  <Link url='/Index' >\r\n  Home\r\n  </Link>\r\n           \r\n  <Link url='/AttributesTemplates' >\r\n  Attributes Templates\r\n</Link>\r\n\r\n<p>\r\n  Attribute\r\n</p>\r\n</Stack>\r\n            \r\n        </Card>\r\n        <Page>\r\n  \r\n  \r\n       \r\n  \r\n        <Card>\r\n        <Tabs tabs={tabs} selected={selectedTab} onSelect={handleTabChange}>\r\n        <Card.Section >\r\n  \r\n  <Form>\r\n      <Card sectioned title=\"Attribute Properties\">\r\n      <hr/>\r\n\r\n      <TextField\r\n        label=\"Label*:\"\r\n        value={textFieldValue}\r\n        onChange={handleTextFieldChange}\r\n        placeholder=\"How did you fins us?\"\r\n      />\r\n      <p>Attribute label</p>\r\n      <br/>\r\n  \r\n      <TextField\r\n        label=\"Code:\"\r\n        placeholder=\"how-find\"\r\n        disabled\r\n      />\r\n      <p>For internal use. Must be unique with \r\n        no spaces and length  &lt;= 30. Let \r\n        it empty for auto generation</p>\r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Sorting Order:\"\r\n        type=\"number\"\r\n        value={valueNo}\r\n        onChange={handleChangeNo}\r\n      />\r\n      <p>Attributes are sorted in ascending \r\n        order (eg: Attribute with sorting order \r\n        1 will be displayed on top of Attribute \r\n        2)</p>\r\n      <br/>\r\n  \r\n        <p>Type*:</p>\r\n  \r\n        <Dropdown placeholder=\"Single Radio Select with Image\" disabled />\r\n        \r\n        <br/>\r\n      <Checkbox\r\n          label=\"Values Required\"\r\n          checked={checked}\r\n          onChange={handleChangeSingle}\r\n          disabled\r\n        />\r\n        <p>Tick if this attribute is required to be \r\n            filled by your customers</p>\r\n      \r\n            <br/>\r\n        <TextField\r\n        label=\"Image Width:\"\r\n        type=\"number\"\r\n        value={valueWt}\r\n        onChange={handleChangeWt}\r\n      />\r\n     \r\n\r\n        <br/>\r\n        <TextField\r\n        label=\"Image Height:\"\r\n        type=\"number\"\r\n        value={valueHt}\r\n        onChange={handleChangeHt}\r\n      />\r\n      \r\n      <br/>\r\n      \r\n          \r\n       \r\n    \r\n  \r\n      <br/>\r\n      <br/>\r\n      <Heading>Attribute Configuration</Heading>    \r\n      <br/>\r\n        <hr/>\r\n  \r\n       \r\n        <ChoiceList\r\n      allowMultiple\r\n      choices={[\r\n        {\r\n          label: 'Show on Cart page:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on cart page.',\r\n        },\r\n        {\r\n          label: 'Hide if filled:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Hide this attribute if it was filled before.',\r\n        },\r\n        {\r\n          label: 'Show on Order grid:',\r\n          value: 'shipping',\r\n          helpText:\r\n            'Tick if you want to use this attribute on order grid in app admin.',\r\n        },\r\n        {\r\n          label: 'Show on Register page:',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on register page.',\r\n        },\r\n        {\r\n          label: 'Show on Customer grid',\r\n          value: 'confirmation',\r\n          helpText:\r\n            'Tick if you want to use this attribute on customer grid in app admin',\r\n        },\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n      </Card>\r\n      </Form>\r\n        </Card.Section>\r\n      </Tabs>\r\n      </Card>\r\n      <br/>\r\n  </Page>\r\n  \r\n  </>\r\n  );\r\n\r\n  const loadingPageMarkup = (\r\n    <SkeletonPage>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card sectioned>\r\n            <TextContainer>\r\n              <SkeletonDisplayText size=\"small\" />\r\n              <SkeletonBodyText lines={9} />\r\n            </TextContainer>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </SkeletonPage>\r\n  );\r\n\r\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\r\n\r\n  const modalMarkup = (\r\n    <Modal\r\n      open={modalActive}\r\n      onClose={toggleModalActive}\r\n      title=\"Contact support\"\r\n      primaryAction={{\r\n        content: 'Send',\r\n        onAction: toggleModalActive,\r\n      }}\r\n    >\r\n      <Modal.Section>\r\n        <FormLayout>\r\n          <TextField\r\n            label=\"Subject\"\r\n            value={supportSubject}\r\n            onChange={handleSubjectChange}\r\n          />\r\n          <TextField\r\n            label=\"Message\"\r\n            value={supportMessage}\r\n            onChange={handleMessageChange}\r\n            multiline\r\n          />\r\n        </FormLayout>\r\n      </Modal.Section>\r\n    </Modal>\r\n  );\r\n\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n      },\r\n    },\r\n   \r\n  };\r\n\r\n  return (\r\n    <div style={{height: '500px'}}>\r\n      <AppProvider\r\n        theme={theme}\r\n        i18n={{\r\n          Polaris: {\r\n            Avatar: {\r\n              label: 'Avatar',\r\n              labelWithInitials: 'Avatar with initials {initials}',\r\n            },\r\n            ContextualSaveBar: {\r\n              save: 'Save',\r\n              discard: 'Discard',\r\n            },\r\n            TextField: {\r\n              characterCount: '{count} characters',\r\n            },\r\n            TopBar: {\r\n              toggleMenuLabel: 'Toggle menu',\r\n\r\n              SearchField: {\r\n                clearButtonLabel: 'Clear',\r\n                search: 'Search',\r\n              },\r\n            },\r\n            Modal: {\r\n              iFrameTitle: 'body markup',\r\n            },\r\n            Frame: {\r\n              skipToContent: 'Skip to content',\r\n              Navigation: {\r\n                closeMobileNavigationLabel: 'Close navigation',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Frame\r\n          topBar={topBarMarkup}\r\n          navigation={navigationMarkup}\r\n          showMobileNavigation={mobileNavigationActive}\r\n          onNavigationDismiss={toggleMobileNavigationActive}\r\n          skipToContentTarget={skipToContentRef.current}\r\n        >\r\n          {contextualSaveBarMarkup}\r\n          {loadingMarkup}\r\n          {pageMarkup}\r\n          {toastMarkup}\r\n          {modalMarkup}\r\n        </Frame>\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}